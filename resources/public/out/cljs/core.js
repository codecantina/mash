// Compiled by ClojureScript 0.0-2725 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2725";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__7522__delegate = function (args){
return console.log.apply(console,(function (){var G__7521 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__7521) : cljs.core.into_array.call(null,G__7521));
})());
};
var G__7522 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7523__i = 0, G__7523__a = new Array(arguments.length -  0);
while (G__7523__i < G__7523__a.length) {G__7523__a[G__7523__i] = arguments[G__7523__i + 0]; ++G__7523__i;}
  args = new cljs.core.IndexedSeq(G__7523__a,0);
} 
return G__7522__delegate.call(this,args);};
G__7522.cljs$lang$maxFixedArity = 0;
G__7522.cljs$lang$applyTo = (function (arglist__7524){
var args = cljs.core.seq(arglist__7524);
return G__7522__delegate(args);
});
G__7522.cljs$core$IFn$_invoke$arity$variadic = G__7522__delegate;
return G__7522;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__7526 = x;
return goog.isString(G__7526);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__7528 = x__$1;
return goog.typeOf(G__7528);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__6007__auto__ = ty;
if(cljs.core.truth_(and__6007__auto__)){
return ty.cljs$lang$type;
} else {
return and__6007__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__7530 = obj;
return goog.typeOf(G__7530);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__7532 = Symbol;
return goog.typeOf(G__7532);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__6906__auto___7534 = len;
var i_7535 = (0);
while(true){
if((i_7535 < n__6906__auto___7534)){
(new_arr[i_7535] = (arr[i_7535]));

var G__7536 = (i_7535 + (1));
i_7535 = G__7536;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__7537 = (i + (1));
i = G__7537;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__7546__delegate = function (array,i,idxs){
var G__7543 = aget;
var G__7544 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__7545 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__7543,G__7544,G__7545) : cljs.core.apply.call(null,G__7543,G__7544,G__7545));
};
var G__7546 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__7547__i = 0, G__7547__a = new Array(arguments.length -  2);
while (G__7547__i < G__7547__a.length) {G__7547__a[G__7547__i] = arguments[G__7547__i + 2]; ++G__7547__i;}
  idxs = new cljs.core.IndexedSeq(G__7547__a,0);
} 
return G__7546__delegate.call(this,array,i,idxs);};
G__7546.cljs$lang$maxFixedArity = 2;
G__7546.cljs$lang$applyTo = (function (arglist__7548){
var array = cljs.core.first(arglist__7548);
arglist__7548 = cljs.core.next(arglist__7548);
var i = cljs.core.first(arglist__7548);
var idxs = cljs.core.rest(arglist__7548);
return G__7546__delegate(array,i,idxs);
});
G__7546.cljs$core$IFn$_invoke$arity$variadic = G__7546__delegate;
return G__7546;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__7549 = null;
if (arguments.length > 2) {
var G__7550__i = 0, G__7550__a = new Array(arguments.length -  2);
while (G__7550__i < G__7550__a.length) {G__7550__a[G__7550__i] = arguments[G__7550__i + 2]; ++G__7550__i;}
G__7549 = new cljs.core.IndexedSeq(G__7550__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__7549);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__7559__delegate = function (array,idx,idx2,idxv){
var G__7555 = aset;
var G__7556 = (array[idx]);
var G__7557 = idx2;
var G__7558 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__7555,G__7556,G__7557,G__7558) : cljs.core.apply.call(null,G__7555,G__7556,G__7557,G__7558));
};
var G__7559 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__7560__i = 0, G__7560__a = new Array(arguments.length -  3);
while (G__7560__i < G__7560__a.length) {G__7560__a[G__7560__i] = arguments[G__7560__i + 3]; ++G__7560__i;}
  idxv = new cljs.core.IndexedSeq(G__7560__a,0);
} 
return G__7559__delegate.call(this,array,idx,idx2,idxv);};
G__7559.cljs$lang$maxFixedArity = 3;
G__7559.cljs$lang$applyTo = (function (arglist__7561){
var array = cljs.core.first(arglist__7561);
arglist__7561 = cljs.core.next(arglist__7561);
var idx = cljs.core.first(arglist__7561);
arglist__7561 = cljs.core.next(arglist__7561);
var idx2 = cljs.core.first(arglist__7561);
var idxv = cljs.core.rest(arglist__7561);
return G__7559__delegate(array,idx,idx2,idxv);
});
G__7559.cljs$core$IFn$_invoke$arity$variadic = G__7559__delegate;
return G__7559;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__7562 = null;
if (arguments.length > 3) {
var G__7563__i = 0, G__7563__a = new Array(arguments.length -  3);
while (G__7563__i < G__7563__a.length) {G__7563__a[G__7563__i] = arguments[G__7563__i + 3]; ++G__7563__i;}
G__7562 = new cljs.core.IndexedSeq(G__7563__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__7562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__7569 = (function (a,x){
a.push(x);

return a;
});
var G__7570 = [];
var G__7571 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7569,G__7570,G__7571) : cljs.core.reduce.call(null,G__7569,G__7570,G__7571));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__7572__i = 0, G__7572__a = new Array(arguments.length -  2);
while (G__7572__i < G__7572__a.length) {G__7572__a[G__7572__i] = arguments[G__7572__i + 2]; ++G__7572__i;}
  args = new cljs.core.IndexedSeq(G__7572__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__7573){
var obj = cljs.core.first(arglist__7573);
arglist__7573 = cljs.core.next(arglist__7573);
var s = cljs.core.first(arglist__7573);
var args = cljs.core.rest(arglist__7573);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj7575 = {};
return obj7575;
})();


cljs.core.IFn = (function (){var obj7577 = {};
return obj7577;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7623 = x__6663__auto__;
return goog.typeOf(G__7623);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7625 = x__6663__auto__;
return goog.typeOf(G__7625);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7627 = x__6663__auto__;
return goog.typeOf(G__7627);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7629 = x__6663__auto__;
return goog.typeOf(G__7629);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7631 = x__6663__auto__;
return goog.typeOf(G__7631);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7633 = x__6663__auto__;
return goog.typeOf(G__7633);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7635 = x__6663__auto__;
return goog.typeOf(G__7635);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7637 = x__6663__auto__;
return goog.typeOf(G__7637);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7639 = x__6663__auto__;
return goog.typeOf(G__7639);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7641 = x__6663__auto__;
return goog.typeOf(G__7641);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7643 = x__6663__auto__;
return goog.typeOf(G__7643);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7645 = x__6663__auto__;
return goog.typeOf(G__7645);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7647 = x__6663__auto__;
return goog.typeOf(G__7647);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7649 = x__6663__auto__;
return goog.typeOf(G__7649);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7651 = x__6663__auto__;
return goog.typeOf(G__7651);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7653 = x__6663__auto__;
return goog.typeOf(G__7653);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7655 = x__6663__auto__;
return goog.typeOf(G__7655);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7657 = x__6663__auto__;
return goog.typeOf(G__7657);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7659 = x__6663__auto__;
return goog.typeOf(G__7659);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7661 = x__6663__auto__;
return goog.typeOf(G__7661);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7663 = x__6663__auto__;
return goog.typeOf(G__7663);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._invoke[(function (){var G__7665 = x__6663__auto__;
return goog.typeOf(G__7665);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._invoke["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj7667 = {};
return obj7667;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__6007__auto__ = value;
if(and__6007__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__6007__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__6663__auto__ = (((value == null))?null:value);
return (function (){var or__6019__auto__ = (cljs.core._clone[(function (){var G__7671 = x__6663__auto__;
return goog.typeOf(G__7671);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._clone["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj7673 = {};
return obj7673;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._count[(function (){var G__7677 = x__6663__auto__;
return goog.typeOf(G__7677);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._count["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj7679 = {};
return obj7679;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._empty[(function (){var G__7683 = x__6663__auto__;
return goog.typeOf(G__7683);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._empty["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj7685 = {};
return obj7685;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._conj[(function (){var G__7689 = x__6663__auto__;
return goog.typeOf(G__7689);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._conj["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj7691 = {};
return obj7691;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._nth[(function (){var G__7697 = x__6663__auto__;
return goog.typeOf(G__7697);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._nth["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._nth[(function (){var G__7699 = x__6663__auto__;
return goog.typeOf(G__7699);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._nth["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj7701 = {};
return obj7701;
})();


cljs.core.ISeq = (function (){var obj7703 = {};
return obj7703;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._first[(function (){var G__7707 = x__6663__auto__;
return goog.typeOf(G__7707);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._first["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._rest[(function (){var G__7711 = x__6663__auto__;
return goog.typeOf(G__7711);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._rest["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj7713 = {};
return obj7713;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._next[(function (){var G__7717 = x__6663__auto__;
return goog.typeOf(G__7717);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._next["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj7719 = {};
return obj7719;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._lookup[(function (){var G__7725 = x__6663__auto__;
return goog.typeOf(G__7725);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._lookup["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._lookup[(function (){var G__7727 = x__6663__auto__;
return goog.typeOf(G__7727);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._lookup["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj7729 = {};
return obj7729;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__7733 = x__6663__auto__;
return goog.typeOf(G__7733);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._assoc[(function (){var G__7737 = x__6663__auto__;
return goog.typeOf(G__7737);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._assoc["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj7739 = {};
return obj7739;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._dissoc[(function (){var G__7743 = x__6663__auto__;
return goog.typeOf(G__7743);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._dissoc["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj7745 = {};
return obj7745;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._key[(function (){var G__7749 = x__6663__auto__;
return goog.typeOf(G__7749);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._key["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._val[(function (){var G__7753 = x__6663__auto__;
return goog.typeOf(G__7753);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._val["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj7755 = {};
return obj7755;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._disjoin[(function (){var G__7759 = x__6663__auto__;
return goog.typeOf(G__7759);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._disjoin["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj7761 = {};
return obj7761;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._peek[(function (){var G__7765 = x__6663__auto__;
return goog.typeOf(G__7765);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._peek["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._pop[(function (){var G__7769 = x__6663__auto__;
return goog.typeOf(G__7769);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._pop["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj7771 = {};
return obj7771;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._assoc_n[(function (){var G__7775 = x__6663__auto__;
return goog.typeOf(G__7775);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj7777 = {};
return obj7777;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._deref[(function (){var G__7781 = x__6663__auto__;
return goog.typeOf(G__7781);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._deref["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj7783 = {};
return obj7783;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._deref_with_timeout[(function (){var G__7787 = x__6663__auto__;
return goog.typeOf(G__7787);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj7789 = {};
return obj7789;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._meta[(function (){var G__7793 = x__6663__auto__;
return goog.typeOf(G__7793);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._meta["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj7795 = {};
return obj7795;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._with_meta[(function (){var G__7799 = x__6663__auto__;
return goog.typeOf(G__7799);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._with_meta["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj7801 = {};
return obj7801;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._reduce[(function (){var G__7807 = x__6663__auto__;
return goog.typeOf(G__7807);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._reduce["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._reduce[(function (){var G__7809 = x__6663__auto__;
return goog.typeOf(G__7809);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._reduce["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj7811 = {};
return obj7811;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._kv_reduce[(function (){var G__7815 = x__6663__auto__;
return goog.typeOf(G__7815);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj7817 = {};
return obj7817;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._equiv[(function (){var G__7821 = x__6663__auto__;
return goog.typeOf(G__7821);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._equiv["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj7823 = {};
return obj7823;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._hash[(function (){var G__7827 = x__6663__auto__;
return goog.typeOf(G__7827);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._hash["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj7829 = {};
return obj7829;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._seq[(function (){var G__7833 = x__6663__auto__;
return goog.typeOf(G__7833);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._seq["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj7835 = {};
return obj7835;
})();


cljs.core.IList = (function (){var obj7837 = {};
return obj7837;
})();


cljs.core.IRecord = (function (){var obj7839 = {};
return obj7839;
})();


cljs.core.IReversible = (function (){var obj7841 = {};
return obj7841;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._rseq[(function (){var G__7845 = x__6663__auto__;
return goog.typeOf(G__7845);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._rseq["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj7847 = {};
return obj7847;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._sorted_seq[(function (){var G__7851 = x__6663__auto__;
return goog.typeOf(G__7851);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._sorted_seq_from[(function (){var G__7855 = x__6663__auto__;
return goog.typeOf(G__7855);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._entry_key[(function (){var G__7859 = x__6663__auto__;
return goog.typeOf(G__7859);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._entry_key["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._comparator[(function (){var G__7863 = x__6663__auto__;
return goog.typeOf(G__7863);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._comparator["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj7865 = {};
return obj7865;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__6007__auto__ = writer;
if(and__6007__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__6007__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__6663__auto__ = (((writer == null))?null:writer);
return (function (){var or__6019__auto__ = (cljs.core._write[(function (){var G__7869 = x__6663__auto__;
return goog.typeOf(G__7869);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._write["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__6007__auto__ = writer;
if(and__6007__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__6007__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__6663__auto__ = (((writer == null))?null:writer);
return (function (){var or__6019__auto__ = (cljs.core._flush[(function (){var G__7873 = x__6663__auto__;
return goog.typeOf(G__7873);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._flush["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj7875 = {};
return obj7875;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._pr_writer[(function (){var G__7879 = x__6663__auto__;
return goog.typeOf(G__7879);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj7881 = {};
return obj7881;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__6007__auto__ = d;
if(and__6007__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__6007__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__6663__auto__ = (((d == null))?null:d);
return (function (){var or__6019__auto__ = (cljs.core._realized_QMARK_[(function (){var G__7885 = x__6663__auto__;
return goog.typeOf(G__7885);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj7887 = {};
return obj7887;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._notify_watches[(function (){var G__7891 = x__6663__auto__;
return goog.typeOf(G__7891);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._add_watch[(function (){var G__7895 = x__6663__auto__;
return goog.typeOf(G__7895);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._add_watch["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__6007__auto__ = this$;
if(and__6007__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__6007__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__6663__auto__ = (((this$ == null))?null:this$);
return (function (){var or__6019__auto__ = (cljs.core._remove_watch[(function (){var G__7899 = x__6663__auto__;
return goog.typeOf(G__7899);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj7901 = {};
return obj7901;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._as_transient[(function (){var G__7905 = x__6663__auto__;
return goog.typeOf(G__7905);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._as_transient["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj7907 = {};
return obj7907;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__6007__auto__ = tcoll;
if(and__6007__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__6007__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__6663__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6019__auto__ = (cljs.core._conj_BANG_[(function (){var G__7911 = x__6663__auto__;
return goog.typeOf(G__7911);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__6007__auto__ = tcoll;
if(and__6007__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__6007__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__6663__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6019__auto__ = (cljs.core._persistent_BANG_[(function (){var G__7915 = x__6663__auto__;
return goog.typeOf(G__7915);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj7917 = {};
return obj7917;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__6007__auto__ = tcoll;
if(and__6007__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__6007__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__6663__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6019__auto__ = (cljs.core._assoc_BANG_[(function (){var G__7921 = x__6663__auto__;
return goog.typeOf(G__7921);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj7923 = {};
return obj7923;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__6007__auto__ = tcoll;
if(and__6007__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__6007__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__6663__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6019__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__7927 = x__6663__auto__;
return goog.typeOf(G__7927);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj7929 = {};
return obj7929;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__6007__auto__ = tcoll;
if(and__6007__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__6007__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__6663__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6019__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__7933 = x__6663__auto__;
return goog.typeOf(G__7933);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__6007__auto__ = tcoll;
if(and__6007__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__6007__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__6663__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6019__auto__ = (cljs.core._pop_BANG_[(function (){var G__7937 = x__6663__auto__;
return goog.typeOf(G__7937);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj7939 = {};
return obj7939;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__6007__auto__ = tcoll;
if(and__6007__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__6007__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__6663__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__6019__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__7943 = x__6663__auto__;
return goog.typeOf(G__7943);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj7945 = {};
return obj7945;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__6007__auto__ = x;
if(and__6007__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__6007__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__6663__auto__ = (((x == null))?null:x);
return (function (){var or__6019__auto__ = (cljs.core._compare[(function (){var G__7949 = x__6663__auto__;
return goog.typeOf(G__7949);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._compare["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj7951 = {};
return obj7951;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._drop_first[(function (){var G__7955 = x__6663__auto__;
return goog.typeOf(G__7955);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._drop_first["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj7957 = {};
return obj7957;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._chunked_first[(function (){var G__7961 = x__6663__auto__;
return goog.typeOf(G__7961);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._chunked_rest[(function (){var G__7965 = x__6663__auto__;
return goog.typeOf(G__7965);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj7967 = {};
return obj7967;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._chunked_next[(function (){var G__7971 = x__6663__auto__;
return goog.typeOf(G__7971);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj7973 = {};
return obj7973;
})();

cljs.core._name = (function _name(x){
if((function (){var and__6007__auto__ = x;
if(and__6007__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__6007__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__6663__auto__ = (((x == null))?null:x);
return (function (){var or__6019__auto__ = (cljs.core._name[(function (){var G__7977 = x__6663__auto__;
return goog.typeOf(G__7977);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._name["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__6007__auto__ = x;
if(and__6007__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__6007__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__6663__auto__ = (((x == null))?null:x);
return (function (){var or__6019__auto__ = (cljs.core._namespace[(function (){var G__7981 = x__6663__auto__;
return goog.typeOf(G__7981);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._namespace["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj7983 = {};
return obj7983;
})();


cljs.core.IReset = (function (){var obj7985 = {};
return obj7985;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._reset_BANG_[(function (){var G__7989 = x__6663__auto__;
return goog.typeOf(G__7989);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj7991 = {};
return obj7991;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._swap_BANG_[(function (){var G__8001 = x__6663__auto__;
return goog.typeOf(G__8001);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._swap_BANG_[(function (){var G__8003 = x__6663__auto__;
return goog.typeOf(G__8003);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._swap_BANG_[(function (){var G__8005 = x__6663__auto__;
return goog.typeOf(G__8005);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._swap_BANG_[(function (){var G__8007 = x__6663__auto__;
return goog.typeOf(G__8007);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj8009 = {};
return obj8009;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__6007__auto__ = o;
if(and__6007__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__6007__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__6663__auto__ = (((o == null))?null:o);
return (function (){var or__6019__auto__ = (cljs.core._vreset_BANG_[(function (){var G__8013 = x__6663__auto__;
return goog.typeOf(G__8013);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj8015 = {};
return obj8015;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__6007__auto__ = coll;
if(and__6007__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__6007__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__6663__auto__ = (((coll == null))?null:coll);
return (function (){var or__6019__auto__ = (cljs.core._iterator[(function (){var G__8019 = x__6663__auto__;
return goog.typeOf(G__8019);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._iterator["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__8022 = (4294967295);
var G__8023 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__8022,G__8023) : Math.imul.call(null,G__8022,G__8023));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__8026 = a;
var G__8027 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__8026,G__8027) : Math.imul.call(null,G__8026,G__8027));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__8028 = (i + (2));
var G__8029 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__8028;
h1 = G__8029;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj8031 = {};
return obj8031;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__8032 = (i + (1));
var G__8033 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__8032;
hash = G__8033;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj8037 = {};
return obj8037;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__8040 = o;
if(G__8040){
var bit__6693__auto__ = (G__8040.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__6693__auto__) || (G__8040.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__8041 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__8041) : Math.floor.call(null,G__8041));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__6007__auto__ = cljs.core.not(a.ns);
if(and__6007__auto__){
return b.ns;
} else {
return and__6007__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__8048 = a.ns;
var G__8049 = b.ns;
return goog.array.defaultCompare(G__8048,G__8049);
})();
if(((0) === nsc)){
var G__8050 = a.name;
var G__8051 = b.name;
return goog.array.defaultCompare(G__8050,G__8051);
} else {
return nsc;
}
}
} else {
var G__8052 = a.name;
var G__8053 = b.name;
return goog.array.defaultCompare(G__8052,G__8053);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__6440__auto__ = self__._hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__8055 = null;
var G__8055__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__8055__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__8055 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__8055__2.call(this,self__,coll);
case 3:
return G__8055__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8055.cljs$core$IFn$_invoke$arity$2 = G__8055__2;
G__8055.cljs$core$IFn$_invoke$arity$3 = G__8055__3;
return G__8055;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args8054){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8054)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__8103 = null;
var G__8103__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__8103__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__8103__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__8103__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__8103__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__8103__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__8103__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__8103__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__8103__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__8103__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__8103__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__8103__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__8103__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__8103__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__8103__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__8103__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__8103__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__8103__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__8103__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__8103__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__8103__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__8103__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8059 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__8060 = a;
var G__8061 = b;
var G__8062 = c;
var G__8063 = d;
var G__8064 = e;
var G__8065 = f;
var G__8066 = g;
var G__8067 = h;
var G__8068 = i;
var G__8069 = j;
var G__8070 = k;
var G__8071 = l;
var G__8072 = m;
var G__8073 = n;
var G__8074 = o;
var G__8075 = p;
var G__8076 = q;
var G__8077 = r;
var G__8078 = s;
var G__8079 = t;
var G__8080 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080) : cljs.core.apply.call(null,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080));
});
G__8103 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8103__1.call(this,self__);
case 2:
return G__8103__2.call(this,self__,a);
case 3:
return G__8103__3.call(this,self__,a,b);
case 4:
return G__8103__4.call(this,self__,a,b,c);
case 5:
return G__8103__5.call(this,self__,a,b,c,d);
case 6:
return G__8103__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8103__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8103__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8103__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8103__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8103__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8103__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8103__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8103__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8103__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8103__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8103__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8103__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8103__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8103__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8103__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8103__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8103.cljs$core$IFn$_invoke$arity$1 = G__8103__1;
G__8103.cljs$core$IFn$_invoke$arity$2 = G__8103__2;
G__8103.cljs$core$IFn$_invoke$arity$3 = G__8103__3;
G__8103.cljs$core$IFn$_invoke$arity$4 = G__8103__4;
G__8103.cljs$core$IFn$_invoke$arity$5 = G__8103__5;
G__8103.cljs$core$IFn$_invoke$arity$6 = G__8103__6;
G__8103.cljs$core$IFn$_invoke$arity$7 = G__8103__7;
G__8103.cljs$core$IFn$_invoke$arity$8 = G__8103__8;
G__8103.cljs$core$IFn$_invoke$arity$9 = G__8103__9;
G__8103.cljs$core$IFn$_invoke$arity$10 = G__8103__10;
G__8103.cljs$core$IFn$_invoke$arity$11 = G__8103__11;
G__8103.cljs$core$IFn$_invoke$arity$12 = G__8103__12;
G__8103.cljs$core$IFn$_invoke$arity$13 = G__8103__13;
G__8103.cljs$core$IFn$_invoke$arity$14 = G__8103__14;
G__8103.cljs$core$IFn$_invoke$arity$15 = G__8103__15;
G__8103.cljs$core$IFn$_invoke$arity$16 = G__8103__16;
G__8103.cljs$core$IFn$_invoke$arity$17 = G__8103__17;
G__8103.cljs$core$IFn$_invoke$arity$18 = G__8103__18;
G__8103.cljs$core$IFn$_invoke$arity$19 = G__8103__19;
G__8103.cljs$core$IFn$_invoke$arity$20 = G__8103__20;
G__8103.cljs$core$IFn$_invoke$arity$21 = G__8103__21;
G__8103.cljs$core$IFn$_invoke$arity$22 = G__8103__22;
return G__8103;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args8058){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8058)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__8081 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__8082 = a;
var G__8083 = b;
var G__8084 = c;
var G__8085 = d;
var G__8086 = e;
var G__8087 = f;
var G__8088 = g;
var G__8089 = h;
var G__8090 = i;
var G__8091 = j;
var G__8092 = k;
var G__8093 = l;
var G__8094 = m;
var G__8095 = n;
var G__8096 = o;
var G__8097 = p;
var G__8098 = q;
var G__8099 = r;
var G__8100 = s;
var G__8101 = t;
var G__8102 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8081,G__8082,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096,G__8097,G__8098,G__8099,G__8100,G__8101,G__8102) : cljs.core.apply.call(null,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096,G__8097,G__8098,G__8099,G__8100,G__8101,G__8102));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__8105 = x;
if(G__8105){
var bit__6700__auto__ = null;
if(cljs.core.truth_((function (){var or__6019__auto__ = bit__6700__auto__;
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return G__8105.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__8105.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__8105);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__8105);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__8107 = value;
if(G__8107){
var bit__6700__auto__ = (G__8107.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__6700__auto__) || (G__8107.cljs$core$ICloneable$)){
return true;
} else {
if((!G__8107.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__8107);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__8107);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__8109 = coll;
if(G__8109){
var bit__6693__auto__ = (G__8109.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__6693__auto__) || (G__8109.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__8111 = coll;
if(G__8111){
var bit__6693__auto__ = (G__8111.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6693__auto__) || (G__8111.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__8113 = coll;
if(G__8113){
var bit__6693__auto__ = (G__8113.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6693__auto__) || (G__8113.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__8115 = coll;
if(G__8115){
var bit__6693__auto__ = (G__8115.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6693__auto__) || (G__8115.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__8120__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__8121 = y;
var G__8122 = cljs.core.first(more);
var G__8123 = cljs.core.next(more);
x = G__8121;
y = G__8122;
more = G__8123;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8120 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8124__i = 0, G__8124__a = new Array(arguments.length -  2);
while (G__8124__i < G__8124__a.length) {G__8124__a[G__8124__i] = arguments[G__8124__i + 2]; ++G__8124__i;}
  more = new cljs.core.IndexedSeq(G__8124__a,0);
} 
return G__8120__delegate.call(this,x,y,more);};
G__8120.cljs$lang$maxFixedArity = 2;
G__8120.cljs$lang$applyTo = (function (arglist__8125){
var x = cljs.core.first(arglist__8125);
arglist__8125 = cljs.core.next(arglist__8125);
var y = cljs.core.first(arglist__8125);
var more = cljs.core.rest(arglist__8125);
return G__8120__delegate(x,y,more);
});
G__8120.cljs$core$IFn$_invoke$arity$variadic = G__8120__delegate;
return G__8120;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__8126 = null;
if (arguments.length > 2) {
var G__8127__i = 0, G__8127__a = new Array(arguments.length -  2);
while (G__8127__i < G__8127__a.length) {G__8127__a[G__8127__i] = arguments[G__8127__i + 2]; ++G__8127__i;}
G__8126 = new cljs.core.IndexedSeq(G__8127__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8126);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__8128 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__8128) : cljs.core.es6_iterator_seq.call(null,G__8128));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__8129 = (n + (1));
var G__8130 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__8131 = cljs.core.next(coll__$1);
n = G__8129;
hash_code = G__8130;
coll__$1 = G__8131;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__8132 = (n + (1));
var G__8133 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__8134 = cljs.core.next(coll__$1);
n = G__8132;
hash_code = G__8133;
coll__$1 = G__8134;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__8135 = o;
return goog.getUid(G__8135);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__8137 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8137) : cljs.core.deref.call(null,G__8137));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__8144 = val;
var G__8145 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8144,G__8145) : f.call(null,G__8144,G__8145));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8150 = nval;
var G__8151 = (n + (1));
val = G__8150;
n = G__8151;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__8146 = val__$1;
var G__8147 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8146,G__8147) : f.call(null,G__8146,G__8147));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8152 = nval;
var G__8153 = (n + (1));
val__$1 = G__8152;
n = G__8153;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__8148 = val__$1;
var G__8149 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8148,G__8149) : f.call(null,G__8148,G__8149));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8154 = nval;
var G__8155 = (n + (1));
val__$1 = G__8154;
n = G__8155;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__8162 = val;
var G__8163 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8162,G__8163) : f.call(null,G__8162,G__8163));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8168 = nval;
var G__8169 = (n + (1));
val = G__8168;
n = G__8169;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__8164 = val__$1;
var G__8165 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8164,G__8165) : f.call(null,G__8164,G__8165));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8170 = nval;
var G__8171 = (n + (1));
val__$1 = G__8170;
n = G__8171;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__8166 = val__$1;
var G__8167 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8166,G__8167) : f.call(null,G__8166,G__8167));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8172 = nval;
var G__8173 = (n + (1));
val__$1 = G__8172;
n = G__8173;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__8175 = x;
if(G__8175){
var bit__6700__auto__ = (G__8175.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__6700__auto__) || (G__8175.cljs$core$ICounted$)){
return true;
} else {
if((!G__8175.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__8175);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__8175);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__8177 = x;
if(G__8177){
var bit__6700__auto__ = (G__8177.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6700__auto__) || (G__8177.cljs$core$IIndexed$)){
return true;
} else {
if((!G__8177.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__8177);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__8177);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__8178 = coll__$1;
var G__8179 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__8178,G__8179) : cljs.core.equiv_sequential.call(null,G__8178,G__8179));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__8180 = o;
var G__8181 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__8180,G__8181) : cljs.core.cons.call(null,G__8180,G__8181));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__8184 = coll__$1;
var G__8185 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__8184,G__8185) : cljs.core.equiv_sequential.call(null,G__8184,G__8185));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__8186 = cljs.core.List.EMPTY;
var G__8187 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__8186,G__8187) : cljs.core.with_meta.call(null,G__8186,G__8187));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__8188 = f;
var G__8189 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__8188,G__8189) : cljs.core.seq_reduce.call(null,G__8188,G__8189));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__8190 = f;
var G__8191 = start;
var G__8192 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__8190,G__8191,G__8192) : cljs.core.seq_reduce.call(null,G__8190,G__8191,G__8192));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__8193 = o;
var G__8194 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__8193,G__8194) : cljs.core.cons.call(null,G__8193,G__8194));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__8195 = sn;
s = G__8195;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__8200__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__8201 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__8202 = cljs.core.first(xs);
var G__8203 = cljs.core.next(xs);
coll = G__8201;
x = G__8202;
xs = G__8203;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__8200 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__8204__i = 0, G__8204__a = new Array(arguments.length -  2);
while (G__8204__i < G__8204__a.length) {G__8204__a[G__8204__i] = arguments[G__8204__i + 2]; ++G__8204__i;}
  xs = new cljs.core.IndexedSeq(G__8204__a,0);
} 
return G__8200__delegate.call(this,coll,x,xs);};
G__8200.cljs$lang$maxFixedArity = 2;
G__8200.cljs$lang$applyTo = (function (arglist__8205){
var coll = cljs.core.first(arglist__8205);
arglist__8205 = cljs.core.next(arglist__8205);
var x = cljs.core.first(arglist__8205);
var xs = cljs.core.rest(arglist__8205);
return G__8200__delegate(coll,x,xs);
});
G__8200.cljs$core$IFn$_invoke$arity$variadic = G__8200__delegate;
return G__8200;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__8206 = null;
if (arguments.length > 2) {
var G__8207__i = 0, G__8207__a = new Array(arguments.length -  2);
while (G__8207__i < G__8207__a.length) {G__8207__a[G__8207__i] = arguments[G__8207__i + 2]; ++G__8207__i;}
G__8206 = new cljs.core.IndexedSeq(G__8207__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__8206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__8208 = cljs.core.next(s);
var G__8209 = (acc + (1));
s = G__8208;
acc = G__8209;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__8211 = coll;
if(G__8211){
var bit__6693__auto__ = (G__8211.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__6693__auto__) || (G__8211.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__8212 = cljs.core.next(coll);
var G__8213 = (n - (1));
coll = G__8212;
n = G__8213;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__8214 = cljs.core.next(coll);
var G__8215 = (n - (1));
var G__8216 = not_found;
coll = G__8214;
n = G__8215;
not_found = G__8216;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__8221 = coll;
if(G__8221){
var bit__6693__auto__ = (G__8221.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6693__auto__) || (G__8221.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__8222 = coll;
if(G__8222){
var bit__6700__auto__ = (G__8222.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6700__auto__) || (G__8222.cljs$core$ISeq$)){
return true;
} else {
if((!G__8222.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8222);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8222);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__8223 = coll;
if(G__8223){
var bit__6693__auto__ = (G__8223.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6693__auto__) || (G__8223.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__8224 = coll;
if(G__8224){
var bit__6700__auto__ = (G__8224.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6700__auto__) || (G__8224.cljs$core$ISeq$)){
return true;
} else {
if((!G__8224.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8224);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8224);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__8225 = (n__$1 - (1));
var G__8226 = cljs.core.rest(xs);
n__$1 = G__8225;
xs = G__8226;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__8229 = o;
if(G__8229){
var bit__6693__auto__ = (G__8229.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6693__auto__) || (G__8229.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__8230 = o;
if(G__8230){
var bit__6693__auto__ = (G__8230.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6693__auto__) || (G__8230.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__8234__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__8235 = ret;
var G__8236 = cljs.core.first(kvs);
var G__8237 = cljs.core.second(kvs);
var G__8238 = cljs.core.nnext(kvs);
coll = G__8235;
k = G__8236;
v = G__8237;
kvs = G__8238;
continue;
} else {
return ret;
}
break;
}
};
var G__8234 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__8239__i = 0, G__8239__a = new Array(arguments.length -  3);
while (G__8239__i < G__8239__a.length) {G__8239__a[G__8239__i] = arguments[G__8239__i + 3]; ++G__8239__i;}
  kvs = new cljs.core.IndexedSeq(G__8239__a,0);
} 
return G__8234__delegate.call(this,coll,k,v,kvs);};
G__8234.cljs$lang$maxFixedArity = 3;
G__8234.cljs$lang$applyTo = (function (arglist__8240){
var coll = cljs.core.first(arglist__8240);
arglist__8240 = cljs.core.next(arglist__8240);
var k = cljs.core.first(arglist__8240);
arglist__8240 = cljs.core.next(arglist__8240);
var v = cljs.core.first(arglist__8240);
var kvs = cljs.core.rest(arglist__8240);
return G__8234__delegate(coll,k,v,kvs);
});
G__8234.cljs$core$IFn$_invoke$arity$variadic = G__8234__delegate;
return G__8234;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__8241 = null;
if (arguments.length > 3) {
var G__8242__i = 0, G__8242__a = new Array(arguments.length -  3);
while (G__8242__i < G__8242__a.length) {G__8242__a[G__8242__i] = arguments[G__8242__i + 3]; ++G__8242__i;}
G__8241 = new cljs.core.IndexedSeq(G__8242__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__8241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__8245__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8246 = ret;
var G__8247 = cljs.core.first(ks);
var G__8248 = cljs.core.next(ks);
coll = G__8246;
k = G__8247;
ks = G__8248;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8245 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8249__i = 0, G__8249__a = new Array(arguments.length -  2);
while (G__8249__i < G__8249__a.length) {G__8249__a[G__8249__i] = arguments[G__8249__i + 2]; ++G__8249__i;}
  ks = new cljs.core.IndexedSeq(G__8249__a,0);
} 
return G__8245__delegate.call(this,coll,k,ks);};
G__8245.cljs$lang$maxFixedArity = 2;
G__8245.cljs$lang$applyTo = (function (arglist__8250){
var coll = cljs.core.first(arglist__8250);
arglist__8250 = cljs.core.next(arglist__8250);
var k = cljs.core.first(arglist__8250);
var ks = cljs.core.rest(arglist__8250);
return G__8245__delegate(coll,k,ks);
});
G__8245.cljs$core$IFn$_invoke$arity$variadic = G__8245__delegate;
return G__8245;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__8251 = null;
if (arguments.length > 2) {
var G__8252__i = 0, G__8252__a = new Array(arguments.length -  2);
while (G__8252__i < G__8252__a.length) {G__8252__a[G__8252__i] = arguments[G__8252__i + 2]; ++G__8252__i;}
G__8251 = new cljs.core.IndexedSeq(G__8252__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__6019__auto__ = (function (){var G__8257 = f;
return goog.isFunction(G__8257);
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var G__8258 = f;
if(G__8258){
var bit__6700__auto__ = null;
if(cljs.core.truth_((function (){var or__6019__auto____$1 = bit__6700__auto__;
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
return G__8258.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__8258.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__8258);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__8258);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__8724 = null;
var G__8724__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__8724__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8260 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8260) : self__.afn.call(null,G__8260));
});
var G__8724__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8261 = a;
var G__8262 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8261,G__8262) : self__.afn.call(null,G__8261,G__8262));
});
var G__8724__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8263 = a;
var G__8264 = b;
var G__8265 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8263,G__8264,G__8265) : self__.afn.call(null,G__8263,G__8264,G__8265));
});
var G__8724__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8266 = a;
var G__8267 = b;
var G__8268 = c;
var G__8269 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8266,G__8267,G__8268,G__8269) : self__.afn.call(null,G__8266,G__8267,G__8268,G__8269));
});
var G__8724__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8270 = a;
var G__8271 = b;
var G__8272 = c;
var G__8273 = d;
var G__8274 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8270,G__8271,G__8272,G__8273,G__8274) : self__.afn.call(null,G__8270,G__8271,G__8272,G__8273,G__8274));
});
var G__8724__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8275 = a;
var G__8276 = b;
var G__8277 = c;
var G__8278 = d;
var G__8279 = e;
var G__8280 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8275,G__8276,G__8277,G__8278,G__8279,G__8280) : self__.afn.call(null,G__8275,G__8276,G__8277,G__8278,G__8279,G__8280));
});
var G__8724__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8281 = a;
var G__8282 = b;
var G__8283 = c;
var G__8284 = d;
var G__8285 = e;
var G__8286 = f;
var G__8287 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8281,G__8282,G__8283,G__8284,G__8285,G__8286,G__8287) : self__.afn.call(null,G__8281,G__8282,G__8283,G__8284,G__8285,G__8286,G__8287));
});
var G__8724__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8288 = a;
var G__8289 = b;
var G__8290 = c;
var G__8291 = d;
var G__8292 = e;
var G__8293 = f;
var G__8294 = g;
var G__8295 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294,G__8295) : self__.afn.call(null,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294,G__8295));
});
var G__8724__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8296 = a;
var G__8297 = b;
var G__8298 = c;
var G__8299 = d;
var G__8300 = e;
var G__8301 = f;
var G__8302 = g;
var G__8303 = h;
var G__8304 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8296,G__8297,G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304) : self__.afn.call(null,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301,G__8302,G__8303,G__8304));
});
var G__8724__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8305 = a;
var G__8306 = b;
var G__8307 = c;
var G__8308 = d;
var G__8309 = e;
var G__8310 = f;
var G__8311 = g;
var G__8312 = h;
var G__8313 = i;
var G__8314 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314) : self__.afn.call(null,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314));
});
var G__8724__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8315 = a;
var G__8316 = b;
var G__8317 = c;
var G__8318 = d;
var G__8319 = e;
var G__8320 = f;
var G__8321 = g;
var G__8322 = h;
var G__8323 = i;
var G__8324 = j;
var G__8325 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321,G__8322,G__8323,G__8324,G__8325) : self__.afn.call(null,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321,G__8322,G__8323,G__8324,G__8325));
});
var G__8724__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8326 = a;
var G__8327 = b;
var G__8328 = c;
var G__8329 = d;
var G__8330 = e;
var G__8331 = f;
var G__8332 = g;
var G__8333 = h;
var G__8334 = i;
var G__8335 = j;
var G__8336 = k;
var G__8337 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8326,G__8327,G__8328,G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335,G__8336,G__8337) : self__.afn.call(null,G__8326,G__8327,G__8328,G__8329,G__8330,G__8331,G__8332,G__8333,G__8334,G__8335,G__8336,G__8337));
});
var G__8724__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8338 = a;
var G__8339 = b;
var G__8340 = c;
var G__8341 = d;
var G__8342 = e;
var G__8343 = f;
var G__8344 = g;
var G__8345 = h;
var G__8346 = i;
var G__8347 = j;
var G__8348 = k;
var G__8349 = l;
var G__8350 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8338,G__8339,G__8340,G__8341,G__8342,G__8343,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350) : self__.afn.call(null,G__8338,G__8339,G__8340,G__8341,G__8342,G__8343,G__8344,G__8345,G__8346,G__8347,G__8348,G__8349,G__8350));
});
var G__8724__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8351 = a;
var G__8352 = b;
var G__8353 = c;
var G__8354 = d;
var G__8355 = e;
var G__8356 = f;
var G__8357 = g;
var G__8358 = h;
var G__8359 = i;
var G__8360 = j;
var G__8361 = k;
var G__8362 = l;
var G__8363 = m;
var G__8364 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8351,G__8352,G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360,G__8361,G__8362,G__8363,G__8364) : self__.afn.call(null,G__8351,G__8352,G__8353,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360,G__8361,G__8362,G__8363,G__8364));
});
var G__8724__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8365 = a;
var G__8366 = b;
var G__8367 = c;
var G__8368 = d;
var G__8369 = e;
var G__8370 = f;
var G__8371 = g;
var G__8372 = h;
var G__8373 = i;
var G__8374 = j;
var G__8375 = k;
var G__8376 = l;
var G__8377 = m;
var G__8378 = n;
var G__8379 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8365,G__8366,G__8367,G__8368,G__8369,G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378,G__8379) : self__.afn.call(null,G__8365,G__8366,G__8367,G__8368,G__8369,G__8370,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378,G__8379));
});
var G__8724__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8380 = a;
var G__8381 = b;
var G__8382 = c;
var G__8383 = d;
var G__8384 = e;
var G__8385 = f;
var G__8386 = g;
var G__8387 = h;
var G__8388 = i;
var G__8389 = j;
var G__8390 = k;
var G__8391 = l;
var G__8392 = m;
var G__8393 = n;
var G__8394 = o;
var G__8395 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387,G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394,G__8395) : self__.afn.call(null,G__8380,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387,G__8388,G__8389,G__8390,G__8391,G__8392,G__8393,G__8394,G__8395));
});
var G__8724__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8396 = a;
var G__8397 = b;
var G__8398 = c;
var G__8399 = d;
var G__8400 = e;
var G__8401 = f;
var G__8402 = g;
var G__8403 = h;
var G__8404 = i;
var G__8405 = j;
var G__8406 = k;
var G__8407 = l;
var G__8408 = m;
var G__8409 = n;
var G__8410 = o;
var G__8411 = p;
var G__8412 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405,G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412) : self__.afn.call(null,G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403,G__8404,G__8405,G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412));
});
var G__8724__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8413 = a;
var G__8414 = b;
var G__8415 = c;
var G__8416 = d;
var G__8417 = e;
var G__8418 = f;
var G__8419 = g;
var G__8420 = h;
var G__8421 = i;
var G__8422 = j;
var G__8423 = k;
var G__8424 = l;
var G__8425 = m;
var G__8426 = n;
var G__8427 = o;
var G__8428 = p;
var G__8429 = q;
var G__8430 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8413,G__8414,G__8415,G__8416,G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425,G__8426,G__8427,G__8428,G__8429,G__8430) : self__.afn.call(null,G__8413,G__8414,G__8415,G__8416,G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425,G__8426,G__8427,G__8428,G__8429,G__8430));
});
var G__8724__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8431 = a;
var G__8432 = b;
var G__8433 = c;
var G__8434 = d;
var G__8435 = e;
var G__8436 = f;
var G__8437 = g;
var G__8438 = h;
var G__8439 = i;
var G__8440 = j;
var G__8441 = k;
var G__8442 = l;
var G__8443 = m;
var G__8444 = n;
var G__8445 = o;
var G__8446 = p;
var G__8447 = q;
var G__8448 = r;
var G__8449 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8431,G__8432,G__8433,G__8434,G__8435,G__8436,G__8437,G__8438,G__8439,G__8440,G__8441,G__8442,G__8443,G__8444,G__8445,G__8446,G__8447,G__8448,G__8449) : self__.afn.call(null,G__8431,G__8432,G__8433,G__8434,G__8435,G__8436,G__8437,G__8438,G__8439,G__8440,G__8441,G__8442,G__8443,G__8444,G__8445,G__8446,G__8447,G__8448,G__8449));
});
var G__8724__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8450 = a;
var G__8451 = b;
var G__8452 = c;
var G__8453 = d;
var G__8454 = e;
var G__8455 = f;
var G__8456 = g;
var G__8457 = h;
var G__8458 = i;
var G__8459 = j;
var G__8460 = k;
var G__8461 = l;
var G__8462 = m;
var G__8463 = n;
var G__8464 = o;
var G__8465 = p;
var G__8466 = q;
var G__8467 = r;
var G__8468 = s;
var G__8469 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8450,G__8451,G__8452,G__8453,G__8454,G__8455,G__8456,G__8457,G__8458,G__8459,G__8460,G__8461,G__8462,G__8463,G__8464,G__8465,G__8466,G__8467,G__8468,G__8469) : self__.afn.call(null,G__8450,G__8451,G__8452,G__8453,G__8454,G__8455,G__8456,G__8457,G__8458,G__8459,G__8460,G__8461,G__8462,G__8463,G__8464,G__8465,G__8466,G__8467,G__8468,G__8469));
});
var G__8724__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8470 = self__.afn;
var G__8471 = a;
var G__8472 = b;
var G__8473 = c;
var G__8474 = d;
var G__8475 = e;
var G__8476 = f;
var G__8477 = g;
var G__8478 = h;
var G__8479 = i;
var G__8480 = j;
var G__8481 = k;
var G__8482 = l;
var G__8483 = m;
var G__8484 = n;
var G__8485 = o;
var G__8486 = p;
var G__8487 = q;
var G__8488 = r;
var G__8489 = s;
var G__8490 = t;
var G__8491 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8470,G__8471,G__8472,G__8473,G__8474,G__8475,G__8476,G__8477,G__8478,G__8479,G__8480,G__8481,G__8482,G__8483,G__8484,G__8485,G__8486,G__8487,G__8488,G__8489,G__8490,G__8491) : cljs.core.apply.call(null,G__8470,G__8471,G__8472,G__8473,G__8474,G__8475,G__8476,G__8477,G__8478,G__8479,G__8480,G__8481,G__8482,G__8483,G__8484,G__8485,G__8486,G__8487,G__8488,G__8489,G__8490,G__8491));
});
G__8724 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8724__1.call(this,self__);
case 2:
return G__8724__2.call(this,self__,a);
case 3:
return G__8724__3.call(this,self__,a,b);
case 4:
return G__8724__4.call(this,self__,a,b,c);
case 5:
return G__8724__5.call(this,self__,a,b,c,d);
case 6:
return G__8724__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8724__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8724__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8724__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8724__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8724__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8724__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8724__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8724__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8724__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8724__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8724__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8724__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8724__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8724__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8724__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8724__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8724.cljs$core$IFn$_invoke$arity$1 = G__8724__1;
G__8724.cljs$core$IFn$_invoke$arity$2 = G__8724__2;
G__8724.cljs$core$IFn$_invoke$arity$3 = G__8724__3;
G__8724.cljs$core$IFn$_invoke$arity$4 = G__8724__4;
G__8724.cljs$core$IFn$_invoke$arity$5 = G__8724__5;
G__8724.cljs$core$IFn$_invoke$arity$6 = G__8724__6;
G__8724.cljs$core$IFn$_invoke$arity$7 = G__8724__7;
G__8724.cljs$core$IFn$_invoke$arity$8 = G__8724__8;
G__8724.cljs$core$IFn$_invoke$arity$9 = G__8724__9;
G__8724.cljs$core$IFn$_invoke$arity$10 = G__8724__10;
G__8724.cljs$core$IFn$_invoke$arity$11 = G__8724__11;
G__8724.cljs$core$IFn$_invoke$arity$12 = G__8724__12;
G__8724.cljs$core$IFn$_invoke$arity$13 = G__8724__13;
G__8724.cljs$core$IFn$_invoke$arity$14 = G__8724__14;
G__8724.cljs$core$IFn$_invoke$arity$15 = G__8724__15;
G__8724.cljs$core$IFn$_invoke$arity$16 = G__8724__16;
G__8724.cljs$core$IFn$_invoke$arity$17 = G__8724__17;
G__8724.cljs$core$IFn$_invoke$arity$18 = G__8724__18;
G__8724.cljs$core$IFn$_invoke$arity$19 = G__8724__19;
G__8724.cljs$core$IFn$_invoke$arity$20 = G__8724__20;
G__8724.cljs$core$IFn$_invoke$arity$21 = G__8724__21;
G__8724.cljs$core$IFn$_invoke$arity$22 = G__8724__22;
return G__8724;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args8259){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8259)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__8492 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8492) : self__.afn.call(null,G__8492));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__8493 = a;
var G__8494 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8493,G__8494) : self__.afn.call(null,G__8493,G__8494));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__8495 = a;
var G__8496 = b;
var G__8497 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8495,G__8496,G__8497) : self__.afn.call(null,G__8495,G__8496,G__8497));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__8498 = a;
var G__8499 = b;
var G__8500 = c;
var G__8501 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8498,G__8499,G__8500,G__8501) : self__.afn.call(null,G__8498,G__8499,G__8500,G__8501));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__8502 = a;
var G__8503 = b;
var G__8504 = c;
var G__8505 = d;
var G__8506 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8502,G__8503,G__8504,G__8505,G__8506) : self__.afn.call(null,G__8502,G__8503,G__8504,G__8505,G__8506));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__8507 = a;
var G__8508 = b;
var G__8509 = c;
var G__8510 = d;
var G__8511 = e;
var G__8512 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8507,G__8508,G__8509,G__8510,G__8511,G__8512) : self__.afn.call(null,G__8507,G__8508,G__8509,G__8510,G__8511,G__8512));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__8513 = a;
var G__8514 = b;
var G__8515 = c;
var G__8516 = d;
var G__8517 = e;
var G__8518 = f;
var G__8519 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8513,G__8514,G__8515,G__8516,G__8517,G__8518,G__8519) : self__.afn.call(null,G__8513,G__8514,G__8515,G__8516,G__8517,G__8518,G__8519));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__8520 = a;
var G__8521 = b;
var G__8522 = c;
var G__8523 = d;
var G__8524 = e;
var G__8525 = f;
var G__8526 = g;
var G__8527 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8520,G__8521,G__8522,G__8523,G__8524,G__8525,G__8526,G__8527) : self__.afn.call(null,G__8520,G__8521,G__8522,G__8523,G__8524,G__8525,G__8526,G__8527));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__8528 = a;
var G__8529 = b;
var G__8530 = c;
var G__8531 = d;
var G__8532 = e;
var G__8533 = f;
var G__8534 = g;
var G__8535 = h;
var G__8536 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8528,G__8529,G__8530,G__8531,G__8532,G__8533,G__8534,G__8535,G__8536) : self__.afn.call(null,G__8528,G__8529,G__8530,G__8531,G__8532,G__8533,G__8534,G__8535,G__8536));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__8537 = a;
var G__8538 = b;
var G__8539 = c;
var G__8540 = d;
var G__8541 = e;
var G__8542 = f;
var G__8543 = g;
var G__8544 = h;
var G__8545 = i;
var G__8546 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8537,G__8538,G__8539,G__8540,G__8541,G__8542,G__8543,G__8544,G__8545,G__8546) : self__.afn.call(null,G__8537,G__8538,G__8539,G__8540,G__8541,G__8542,G__8543,G__8544,G__8545,G__8546));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__8547 = a;
var G__8548 = b;
var G__8549 = c;
var G__8550 = d;
var G__8551 = e;
var G__8552 = f;
var G__8553 = g;
var G__8554 = h;
var G__8555 = i;
var G__8556 = j;
var G__8557 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8547,G__8548,G__8549,G__8550,G__8551,G__8552,G__8553,G__8554,G__8555,G__8556,G__8557) : self__.afn.call(null,G__8547,G__8548,G__8549,G__8550,G__8551,G__8552,G__8553,G__8554,G__8555,G__8556,G__8557));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__8558 = a;
var G__8559 = b;
var G__8560 = c;
var G__8561 = d;
var G__8562 = e;
var G__8563 = f;
var G__8564 = g;
var G__8565 = h;
var G__8566 = i;
var G__8567 = j;
var G__8568 = k;
var G__8569 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8558,G__8559,G__8560,G__8561,G__8562,G__8563,G__8564,G__8565,G__8566,G__8567,G__8568,G__8569) : self__.afn.call(null,G__8558,G__8559,G__8560,G__8561,G__8562,G__8563,G__8564,G__8565,G__8566,G__8567,G__8568,G__8569));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__8570 = a;
var G__8571 = b;
var G__8572 = c;
var G__8573 = d;
var G__8574 = e;
var G__8575 = f;
var G__8576 = g;
var G__8577 = h;
var G__8578 = i;
var G__8579 = j;
var G__8580 = k;
var G__8581 = l;
var G__8582 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8570,G__8571,G__8572,G__8573,G__8574,G__8575,G__8576,G__8577,G__8578,G__8579,G__8580,G__8581,G__8582) : self__.afn.call(null,G__8570,G__8571,G__8572,G__8573,G__8574,G__8575,G__8576,G__8577,G__8578,G__8579,G__8580,G__8581,G__8582));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__8583 = a;
var G__8584 = b;
var G__8585 = c;
var G__8586 = d;
var G__8587 = e;
var G__8588 = f;
var G__8589 = g;
var G__8590 = h;
var G__8591 = i;
var G__8592 = j;
var G__8593 = k;
var G__8594 = l;
var G__8595 = m;
var G__8596 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8583,G__8584,G__8585,G__8586,G__8587,G__8588,G__8589,G__8590,G__8591,G__8592,G__8593,G__8594,G__8595,G__8596) : self__.afn.call(null,G__8583,G__8584,G__8585,G__8586,G__8587,G__8588,G__8589,G__8590,G__8591,G__8592,G__8593,G__8594,G__8595,G__8596));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__8597 = a;
var G__8598 = b;
var G__8599 = c;
var G__8600 = d;
var G__8601 = e;
var G__8602 = f;
var G__8603 = g;
var G__8604 = h;
var G__8605 = i;
var G__8606 = j;
var G__8607 = k;
var G__8608 = l;
var G__8609 = m;
var G__8610 = n;
var G__8611 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8597,G__8598,G__8599,G__8600,G__8601,G__8602,G__8603,G__8604,G__8605,G__8606,G__8607,G__8608,G__8609,G__8610,G__8611) : self__.afn.call(null,G__8597,G__8598,G__8599,G__8600,G__8601,G__8602,G__8603,G__8604,G__8605,G__8606,G__8607,G__8608,G__8609,G__8610,G__8611));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__8612 = a;
var G__8613 = b;
var G__8614 = c;
var G__8615 = d;
var G__8616 = e;
var G__8617 = f;
var G__8618 = g;
var G__8619 = h;
var G__8620 = i;
var G__8621 = j;
var G__8622 = k;
var G__8623 = l;
var G__8624 = m;
var G__8625 = n;
var G__8626 = o;
var G__8627 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8612,G__8613,G__8614,G__8615,G__8616,G__8617,G__8618,G__8619,G__8620,G__8621,G__8622,G__8623,G__8624,G__8625,G__8626,G__8627) : self__.afn.call(null,G__8612,G__8613,G__8614,G__8615,G__8616,G__8617,G__8618,G__8619,G__8620,G__8621,G__8622,G__8623,G__8624,G__8625,G__8626,G__8627));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__8628 = a;
var G__8629 = b;
var G__8630 = c;
var G__8631 = d;
var G__8632 = e;
var G__8633 = f;
var G__8634 = g;
var G__8635 = h;
var G__8636 = i;
var G__8637 = j;
var G__8638 = k;
var G__8639 = l;
var G__8640 = m;
var G__8641 = n;
var G__8642 = o;
var G__8643 = p;
var G__8644 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8628,G__8629,G__8630,G__8631,G__8632,G__8633,G__8634,G__8635,G__8636,G__8637,G__8638,G__8639,G__8640,G__8641,G__8642,G__8643,G__8644) : self__.afn.call(null,G__8628,G__8629,G__8630,G__8631,G__8632,G__8633,G__8634,G__8635,G__8636,G__8637,G__8638,G__8639,G__8640,G__8641,G__8642,G__8643,G__8644));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__8645 = a;
var G__8646 = b;
var G__8647 = c;
var G__8648 = d;
var G__8649 = e;
var G__8650 = f;
var G__8651 = g;
var G__8652 = h;
var G__8653 = i;
var G__8654 = j;
var G__8655 = k;
var G__8656 = l;
var G__8657 = m;
var G__8658 = n;
var G__8659 = o;
var G__8660 = p;
var G__8661 = q;
var G__8662 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8645,G__8646,G__8647,G__8648,G__8649,G__8650,G__8651,G__8652,G__8653,G__8654,G__8655,G__8656,G__8657,G__8658,G__8659,G__8660,G__8661,G__8662) : self__.afn.call(null,G__8645,G__8646,G__8647,G__8648,G__8649,G__8650,G__8651,G__8652,G__8653,G__8654,G__8655,G__8656,G__8657,G__8658,G__8659,G__8660,G__8661,G__8662));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__8663 = a;
var G__8664 = b;
var G__8665 = c;
var G__8666 = d;
var G__8667 = e;
var G__8668 = f;
var G__8669 = g;
var G__8670 = h;
var G__8671 = i;
var G__8672 = j;
var G__8673 = k;
var G__8674 = l;
var G__8675 = m;
var G__8676 = n;
var G__8677 = o;
var G__8678 = p;
var G__8679 = q;
var G__8680 = r;
var G__8681 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8663,G__8664,G__8665,G__8666,G__8667,G__8668,G__8669,G__8670,G__8671,G__8672,G__8673,G__8674,G__8675,G__8676,G__8677,G__8678,G__8679,G__8680,G__8681) : self__.afn.call(null,G__8663,G__8664,G__8665,G__8666,G__8667,G__8668,G__8669,G__8670,G__8671,G__8672,G__8673,G__8674,G__8675,G__8676,G__8677,G__8678,G__8679,G__8680,G__8681));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__8682 = a;
var G__8683 = b;
var G__8684 = c;
var G__8685 = d;
var G__8686 = e;
var G__8687 = f;
var G__8688 = g;
var G__8689 = h;
var G__8690 = i;
var G__8691 = j;
var G__8692 = k;
var G__8693 = l;
var G__8694 = m;
var G__8695 = n;
var G__8696 = o;
var G__8697 = p;
var G__8698 = q;
var G__8699 = r;
var G__8700 = s;
var G__8701 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8682,G__8683,G__8684,G__8685,G__8686,G__8687,G__8688,G__8689,G__8690,G__8691,G__8692,G__8693,G__8694,G__8695,G__8696,G__8697,G__8698,G__8699,G__8700,G__8701) : self__.afn.call(null,G__8682,G__8683,G__8684,G__8685,G__8686,G__8687,G__8688,G__8689,G__8690,G__8691,G__8692,G__8693,G__8694,G__8695,G__8696,G__8697,G__8698,G__8699,G__8700,G__8701));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__8702 = self__.afn;
var G__8703 = a;
var G__8704 = b;
var G__8705 = c;
var G__8706 = d;
var G__8707 = e;
var G__8708 = f;
var G__8709 = g;
var G__8710 = h;
var G__8711 = i;
var G__8712 = j;
var G__8713 = k;
var G__8714 = l;
var G__8715 = m;
var G__8716 = n;
var G__8717 = o;
var G__8718 = p;
var G__8719 = q;
var G__8720 = r;
var G__8721 = s;
var G__8722 = t;
var G__8723 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8702,G__8703,G__8704,G__8705,G__8706,G__8707,G__8708,G__8709,G__8710,G__8711,G__8712,G__8713,G__8714,G__8715,G__8716,G__8717,G__8718,G__8719,G__8720,G__8721,G__8722,G__8723) : cljs.core.apply.call(null,G__8702,G__8703,G__8704,G__8705,G__8706,G__8707,G__8708,G__8709,G__8710,G__8711,G__8712,G__8713,G__8714,G__8715,G__8716,G__8717,G__8718,G__8719,G__8720,G__8721,G__8722,G__8723));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__8728 = o;
if(G__8728){
var bit__6700__auto__ = (G__8728.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__6700__auto__) || (G__8728.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__8728.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8728);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8728);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__6007__auto__ = !((o == null));
if(and__6007__auto__){
var G__8732 = o;
if(G__8732){
var bit__6700__auto__ = (G__8732.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__6700__auto__) || (G__8732.cljs$core$IMeta$)){
return true;
} else {
if((!G__8732.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8732);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8732);
}
} else {
return and__6007__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__8735__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8736 = ret;
var G__8737 = cljs.core.first(ks);
var G__8738 = cljs.core.next(ks);
coll = G__8736;
k = G__8737;
ks = G__8738;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8735 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8739__i = 0, G__8739__a = new Array(arguments.length -  2);
while (G__8739__i < G__8739__a.length) {G__8739__a[G__8739__i] = arguments[G__8739__i + 2]; ++G__8739__i;}
  ks = new cljs.core.IndexedSeq(G__8739__a,0);
} 
return G__8735__delegate.call(this,coll,k,ks);};
G__8735.cljs$lang$maxFixedArity = 2;
G__8735.cljs$lang$applyTo = (function (arglist__8740){
var coll = cljs.core.first(arglist__8740);
arglist__8740 = cljs.core.next(arglist__8740);
var k = cljs.core.first(arglist__8740);
var ks = cljs.core.rest(arglist__8740);
return G__8735__delegate(coll,k,ks);
});
G__8735.cljs$core$IFn$_invoke$arity$variadic = G__8735__delegate;
return G__8735;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__8741 = null;
if (arguments.length > 2) {
var G__8742__i = 0, G__8742__a = new Array(arguments.length -  2);
while (G__8742__i < G__8742__a.length) {G__8742__a[G__8742__i] = arguments[G__8742__i + 2]; ++G__8742__i;}
G__8741 = new cljs.core.IndexedSeq(G__8742__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8741);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8744 = x;
if(G__8744){
var bit__6700__auto__ = (G__8744.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__6700__auto__) || (G__8744.cljs$core$ICollection$)){
return true;
} else {
if((!G__8744.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8744);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8744);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8746 = x;
if(G__8746){
var bit__6700__auto__ = (G__8746.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__6700__auto__) || (G__8746.cljs$core$ISet$)){
return true;
} else {
if((!G__8746.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8746);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8746);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__8748 = x;
if(G__8748){
var bit__6700__auto__ = (G__8748.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__6700__auto__) || (G__8748.cljs$core$IAssociative$)){
return true;
} else {
if((!G__8748.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8748);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8748);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__8750 = x;
if(G__8750){
var bit__6700__auto__ = (G__8750.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__6700__auto__) || (G__8750.cljs$core$ISequential$)){
return true;
} else {
if((!G__8750.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8750);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8750);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__8752 = x;
if(G__8752){
var bit__6700__auto__ = (G__8752.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__6700__auto__) || (G__8752.cljs$core$ISorted$)){
return true;
} else {
if((!G__8752.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8752);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8752);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__8754 = x;
if(G__8754){
var bit__6700__auto__ = (G__8754.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6700__auto__) || (G__8754.cljs$core$IReduce$)){
return true;
} else {
if((!G__8754.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8754);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8754);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8756 = x;
if(G__8756){
var bit__6700__auto__ = (G__8756.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__6700__auto__) || (G__8756.cljs$core$IMap$)){
return true;
} else {
if((!G__8756.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8756);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8756);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__8758 = x;
if(G__8758){
var bit__6700__auto__ = (G__8758.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__6700__auto__) || (G__8758.cljs$core$IVector$)){
return true;
} else {
if((!G__8758.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8758);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8758);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__8760 = x;
if(G__8760){
var bit__6693__auto__ = (G__8760.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__6693__auto__) || (G__8760.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj8766 = {};
return obj8766;
});
var js_obj__1 = (function() { 
var G__8769__delegate = function (keyvals){
var G__8767 = goog.object.create;
var G__8768 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__8767,G__8768) : cljs.core.apply.call(null,G__8767,G__8768));
};
var G__8769 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8770__i = 0, G__8770__a = new Array(arguments.length -  0);
while (G__8770__i < G__8770__a.length) {G__8770__a[G__8770__i] = arguments[G__8770__i + 0]; ++G__8770__i;}
  keyvals = new cljs.core.IndexedSeq(G__8770__a,0);
} 
return G__8769__delegate.call(this,keyvals);};
G__8769.cljs$lang$maxFixedArity = 0;
G__8769.cljs$lang$applyTo = (function (arglist__8771){
var keyvals = cljs.core.seq(arglist__8771);
return G__8769__delegate(keyvals);
});
G__8769.cljs$core$IFn$_invoke$arity$variadic = G__8769__delegate;
return G__8769;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__8772 = null;
if (arguments.length > 0) {
var G__8773__i = 0, G__8773__a = new Array(arguments.length -  0);
while (G__8773__i < G__8773__a.length) {G__8773__a[G__8773__i] = arguments[G__8773__i + 0]; ++G__8773__i;}
G__8772 = new cljs.core.IndexedSeq(G__8773__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__8772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__8776_8778 = obj;
var G__8777_8779 = ((function (G__8776_8778,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__8776_8778,keys))
;
goog.object.forEach(G__8776_8778,G__8777_8779);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8780 = (i__$1 + (1));
var G__8781 = (j__$1 + (1));
var G__8782 = (len__$1 - (1));
i__$1 = G__8780;
j__$1 = G__8781;
len__$1 = G__8782;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8783 = (i__$1 - (1));
var G__8784 = (j__$1 - (1));
var G__8785 = (len__$1 - (1));
i__$1 = G__8783;
j__$1 = G__8784;
len__$1 = G__8785;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj8787 = {};
return obj8787;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__8789 = s;
if(G__8789){
var bit__6700__auto__ = (G__8789.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6700__auto__) || (G__8789.cljs$core$ISeq$)){
return true;
} else {
if((!G__8789.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8789);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8789);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__8791 = s;
if(G__8791){
var bit__6700__auto__ = (G__8791.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__6700__auto__) || (G__8791.cljs$core$ISeqable$)){
return true;
} else {
if((!G__8791.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8791);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8791);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__6019__auto__ = cljs.core.fn_QMARK_(f);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var G__8795 = f;
if(G__8795){
var bit__6700__auto__ = (G__8795.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__6700__auto__) || (G__8795.cljs$core$IFn$)){
return true;
} else {
if((!G__8795.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8795);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8795);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__8808 = n;
return isNaN(G__8808);
})())) && (!((n === Infinity))) && (((function (){var G__8809 = n;
return parseFloat(G__8809);
})() === (function (){var G__8810 = n;
var G__8811 = (10);
return parseInt(G__8810,G__8811);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__8812__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__8813 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__8814 = etc;
s = G__8813;
xs = G__8814;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__8812 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8815__i = 0, G__8815__a = new Array(arguments.length -  2);
while (G__8815__i < G__8815__a.length) {G__8815__a[G__8815__i] = arguments[G__8815__i + 2]; ++G__8815__i;}
  more = new cljs.core.IndexedSeq(G__8815__a,0);
} 
return G__8812__delegate.call(this,x,y,more);};
G__8812.cljs$lang$maxFixedArity = 2;
G__8812.cljs$lang$applyTo = (function (arglist__8816){
var x = cljs.core.first(arglist__8816);
arglist__8816 = cljs.core.next(arglist__8816);
var y = cljs.core.first(arglist__8816);
var more = cljs.core.rest(arglist__8816);
return G__8812__delegate(x,y,more);
});
G__8812.cljs$core$IFn$_invoke$arity$variadic = G__8812__delegate;
return G__8812;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__8817 = null;
if (arguments.length > 2) {
var G__8818__i = 0, G__8818__a = new Array(arguments.length -  2);
while (G__8818__i < G__8818__a.length) {G__8818__a[G__8818__i] = arguments[G__8818__i + 2]; ++G__8818__i;}
G__8817 = new cljs.core.IndexedSeq(G__8818__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__8822 = x;
if(G__8822){
var bit__6693__auto__ = (G__8822.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__6693__auto__) || (G__8822.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__8823 = x;
var G__8824 = y;
return goog.array.defaultCompare(G__8823,G__8824);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__8829 = xs;
var G__8830 = ys;
var G__8831 = len;
var G__8832 = (n + (1));
xs = G__8829;
ys = G__8830;
len = G__8831;
n = G__8832;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__8837 = x;
var G__8838 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8837,G__8838) : f.call(null,G__8837,G__8838));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__8839 = y;
var G__8840 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8839,G__8840) : f.call(null,G__8839,G__8840));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__8846 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8846) : cljs.core.to_array.call(null,G__8846));
})();
var G__8847_8849 = a;
var G__8848_8850 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__8847_8849,G__8848_8850);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__8856 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8856) : keyfn.call(null,G__8856));
})(),(function (){var G__8857 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8857) : keyfn.call(null,G__8857));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__8863 = f;
var G__8864 = cljs.core.first(s);
var G__8865 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8863,G__8864,G__8865) : cljs.core.reduce.call(null,G__8863,G__8864,G__8865));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__8866 = val__$1;
var G__8867 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8866,G__8867) : f.call(null,G__8866,G__8867));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8868 = nval;
var G__8869 = cljs.core.next(coll__$1);
val__$1 = G__8868;
coll__$1 = G__8869;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__8873 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8873) : cljs.core.to_array.call(null,G__8873));
})();
var G__8874_8876 = a;
goog.array.shuffle(G__8874_8876);

var G__8875 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__8875) : cljs.core.vec.call(null,G__8875));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__8879 = coll;
if(G__8879){
var bit__6693__auto__ = (G__8879.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6693__auto__) || (G__8879.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__8880 = coll;
if(G__8880){
var bit__6693__auto__ = (G__8880.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6693__auto__) || (G__8880.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__8889 = null;
var G__8889__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__8889__1 = (function (x){
var G__8886 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__8886) : cf.call(null,G__8886));
});
var G__8889__2 = (function (x,y){
var G__8887 = x;
var G__8888 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8887,G__8888) : f.call(null,G__8887,G__8888));
});
G__8889 = function(x,y){
switch(arguments.length){
case 0:
return G__8889__0.call(this);
case 1:
return G__8889__1.call(this,x);
case 2:
return G__8889__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8889.cljs$core$IFn$_invoke$arity$0 = G__8889__0;
G__8889.cljs$core$IFn$_invoke$arity$1 = G__8889__1;
G__8889.cljs$core$IFn$_invoke$arity$2 = G__8889__2;
return G__8889;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__8896 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8896) : xform.call(null,G__8896));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__8897 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__8897) : f__$1.call(null,G__8897));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__8898__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__8898 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8899__i = 0, G__8899__a = new Array(arguments.length -  2);
while (G__8899__i < G__8899__a.length) {G__8899__a[G__8899__i] = arguments[G__8899__i + 2]; ++G__8899__i;}
  more = new cljs.core.IndexedSeq(G__8899__a,0);
} 
return G__8898__delegate.call(this,x,y,more);};
G__8898.cljs$lang$maxFixedArity = 2;
G__8898.cljs$lang$applyTo = (function (arglist__8900){
var x = cljs.core.first(arglist__8900);
arglist__8900 = cljs.core.next(arglist__8900);
var y = cljs.core.first(arglist__8900);
var more = cljs.core.rest(arglist__8900);
return G__8898__delegate(x,y,more);
});
G__8898.cljs$core$IFn$_invoke$arity$variadic = G__8898__delegate;
return G__8898;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__8901 = null;
if (arguments.length > 2) {
var G__8902__i = 0, G__8902__a = new Array(arguments.length -  2);
while (G__8902__i < G__8902__a.length) {G__8902__a[G__8902__i] = arguments[G__8902__i + 2]; ++G__8902__i;}
G__8901 = new cljs.core.IndexedSeq(G__8902__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__8903__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__8903 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8904__i = 0, G__8904__a = new Array(arguments.length -  2);
while (G__8904__i < G__8904__a.length) {G__8904__a[G__8904__i] = arguments[G__8904__i + 2]; ++G__8904__i;}
  more = new cljs.core.IndexedSeq(G__8904__a,0);
} 
return G__8903__delegate.call(this,x,y,more);};
G__8903.cljs$lang$maxFixedArity = 2;
G__8903.cljs$lang$applyTo = (function (arglist__8905){
var x = cljs.core.first(arglist__8905);
arglist__8905 = cljs.core.next(arglist__8905);
var y = cljs.core.first(arglist__8905);
var more = cljs.core.rest(arglist__8905);
return G__8903__delegate(x,y,more);
});
G__8903.cljs$core$IFn$_invoke$arity$variadic = G__8903__delegate;
return G__8903;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__8906 = null;
if (arguments.length > 2) {
var G__8907__i = 0, G__8907__a = new Array(arguments.length -  2);
while (G__8907__i < G__8907__a.length) {G__8907__a[G__8907__i] = arguments[G__8907__i + 2]; ++G__8907__i;}
G__8906 = new cljs.core.IndexedSeq(G__8907__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8906);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__8908__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__8908 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8909__i = 0, G__8909__a = new Array(arguments.length -  2);
while (G__8909__i < G__8909__a.length) {G__8909__a[G__8909__i] = arguments[G__8909__i + 2]; ++G__8909__i;}
  more = new cljs.core.IndexedSeq(G__8909__a,0);
} 
return G__8908__delegate.call(this,x,y,more);};
G__8908.cljs$lang$maxFixedArity = 2;
G__8908.cljs$lang$applyTo = (function (arglist__8910){
var x = cljs.core.first(arglist__8910);
arglist__8910 = cljs.core.next(arglist__8910);
var y = cljs.core.first(arglist__8910);
var more = cljs.core.rest(arglist__8910);
return G__8908__delegate(x,y,more);
});
G__8908.cljs$core$IFn$_invoke$arity$variadic = G__8908__delegate;
return G__8908;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__8911 = null;
if (arguments.length > 2) {
var G__8912__i = 0, G__8912__a = new Array(arguments.length -  2);
while (G__8912__i < G__8912__a.length) {G__8912__a[G__8912__i] = arguments[G__8912__i + 2]; ++G__8912__i;}
G__8911 = new cljs.core.IndexedSeq(G__8912__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__8917__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8917 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8918__i = 0, G__8918__a = new Array(arguments.length -  2);
while (G__8918__i < G__8918__a.length) {G__8918__a[G__8918__i] = arguments[G__8918__i + 2]; ++G__8918__i;}
  more = new cljs.core.IndexedSeq(G__8918__a,0);
} 
return G__8917__delegate.call(this,x,y,more);};
G__8917.cljs$lang$maxFixedArity = 2;
G__8917.cljs$lang$applyTo = (function (arglist__8919){
var x = cljs.core.first(arglist__8919);
arglist__8919 = cljs.core.next(arglist__8919);
var y = cljs.core.first(arglist__8919);
var more = cljs.core.rest(arglist__8919);
return G__8917__delegate(x,y,more);
});
G__8917.cljs$core$IFn$_invoke$arity$variadic = G__8917__delegate;
return G__8917;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__8920 = null;
if (arguments.length > 2) {
var G__8921__i = 0, G__8921__a = new Array(arguments.length -  2);
while (G__8921__i < G__8921__a.length) {G__8921__a[G__8921__i] = arguments[G__8921__i + 2]; ++G__8921__i;}
G__8920 = new cljs.core.IndexedSeq(G__8921__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__8922__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__8923 = y;
var G__8924 = cljs.core.first(more);
var G__8925 = cljs.core.next(more);
x = G__8923;
y = G__8924;
more = G__8925;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8922 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8926__i = 0, G__8926__a = new Array(arguments.length -  2);
while (G__8926__i < G__8926__a.length) {G__8926__a[G__8926__i] = arguments[G__8926__i + 2]; ++G__8926__i;}
  more = new cljs.core.IndexedSeq(G__8926__a,0);
} 
return G__8922__delegate.call(this,x,y,more);};
G__8922.cljs$lang$maxFixedArity = 2;
G__8922.cljs$lang$applyTo = (function (arglist__8927){
var x = cljs.core.first(arglist__8927);
arglist__8927 = cljs.core.next(arglist__8927);
var y = cljs.core.first(arglist__8927);
var more = cljs.core.rest(arglist__8927);
return G__8922__delegate(x,y,more);
});
G__8922.cljs$core$IFn$_invoke$arity$variadic = G__8922__delegate;
return G__8922;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__8928 = null;
if (arguments.length > 2) {
var G__8929__i = 0, G__8929__a = new Array(arguments.length -  2);
while (G__8929__i < G__8929__a.length) {G__8929__a[G__8929__i] = arguments[G__8929__i + 2]; ++G__8929__i;}
G__8928 = new cljs.core.IndexedSeq(G__8929__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8928);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__8930__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__8931 = y;
var G__8932 = cljs.core.first(more);
var G__8933 = cljs.core.next(more);
x = G__8931;
y = G__8932;
more = G__8933;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8930 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8934__i = 0, G__8934__a = new Array(arguments.length -  2);
while (G__8934__i < G__8934__a.length) {G__8934__a[G__8934__i] = arguments[G__8934__i + 2]; ++G__8934__i;}
  more = new cljs.core.IndexedSeq(G__8934__a,0);
} 
return G__8930__delegate.call(this,x,y,more);};
G__8930.cljs$lang$maxFixedArity = 2;
G__8930.cljs$lang$applyTo = (function (arglist__8935){
var x = cljs.core.first(arglist__8935);
arglist__8935 = cljs.core.next(arglist__8935);
var y = cljs.core.first(arglist__8935);
var more = cljs.core.rest(arglist__8935);
return G__8930__delegate(x,y,more);
});
G__8930.cljs$core$IFn$_invoke$arity$variadic = G__8930__delegate;
return G__8930;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__8936 = null;
if (arguments.length > 2) {
var G__8937__i = 0, G__8937__a = new Array(arguments.length -  2);
while (G__8937__i < G__8937__a.length) {G__8937__a[G__8937__i] = arguments[G__8937__i + 2]; ++G__8937__i;}
G__8936 = new cljs.core.IndexedSeq(G__8937__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__8938__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__8939 = y;
var G__8940 = cljs.core.first(more);
var G__8941 = cljs.core.next(more);
x = G__8939;
y = G__8940;
more = G__8941;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8938 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8942__i = 0, G__8942__a = new Array(arguments.length -  2);
while (G__8942__i < G__8942__a.length) {G__8942__a[G__8942__i] = arguments[G__8942__i + 2]; ++G__8942__i;}
  more = new cljs.core.IndexedSeq(G__8942__a,0);
} 
return G__8938__delegate.call(this,x,y,more);};
G__8938.cljs$lang$maxFixedArity = 2;
G__8938.cljs$lang$applyTo = (function (arglist__8943){
var x = cljs.core.first(arglist__8943);
arglist__8943 = cljs.core.next(arglist__8943);
var y = cljs.core.first(arglist__8943);
var more = cljs.core.rest(arglist__8943);
return G__8938__delegate(x,y,more);
});
G__8938.cljs$core$IFn$_invoke$arity$variadic = G__8938__delegate;
return G__8938;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__8944 = null;
if (arguments.length > 2) {
var G__8945__i = 0, G__8945__a = new Array(arguments.length -  2);
while (G__8945__i < G__8945__a.length) {G__8945__a[G__8945__i] = arguments[G__8945__i + 2]; ++G__8945__i;}
G__8944 = new cljs.core.IndexedSeq(G__8945__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8944);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__8946__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__8947 = y;
var G__8948 = cljs.core.first(more);
var G__8949 = cljs.core.next(more);
x = G__8947;
y = G__8948;
more = G__8949;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8946 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8950__i = 0, G__8950__a = new Array(arguments.length -  2);
while (G__8950__i < G__8950__a.length) {G__8950__a[G__8950__i] = arguments[G__8950__i + 2]; ++G__8950__i;}
  more = new cljs.core.IndexedSeq(G__8950__a,0);
} 
return G__8946__delegate.call(this,x,y,more);};
G__8946.cljs$lang$maxFixedArity = 2;
G__8946.cljs$lang$applyTo = (function (arglist__8951){
var x = cljs.core.first(arglist__8951);
arglist__8951 = cljs.core.next(arglist__8951);
var y = cljs.core.first(arglist__8951);
var more = cljs.core.rest(arglist__8951);
return G__8946__delegate(x,y,more);
});
G__8946.cljs$core$IFn$_invoke$arity$variadic = G__8946__delegate;
return G__8946;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__8952 = null;
if (arguments.length > 2) {
var G__8953__i = 0, G__8953__a = new Array(arguments.length -  2);
while (G__8953__i < G__8953__a.length) {G__8953__a[G__8953__i] = arguments[G__8953__i + 2]; ++G__8953__i;}
G__8952 = new cljs.core.IndexedSeq(G__8953__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8952);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__6336__auto__ = x;
var y__6337__auto__ = y;
return ((x__6336__auto__ > y__6337__auto__) ? x__6336__auto__ : y__6337__auto__);
});
var max__3 = (function() { 
var G__8954__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__6336__auto__ = x;
var y__6337__auto__ = y;
return ((x__6336__auto__ > y__6337__auto__) ? x__6336__auto__ : y__6337__auto__);
})(),more);
};
var G__8954 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8955__i = 0, G__8955__a = new Array(arguments.length -  2);
while (G__8955__i < G__8955__a.length) {G__8955__a[G__8955__i] = arguments[G__8955__i + 2]; ++G__8955__i;}
  more = new cljs.core.IndexedSeq(G__8955__a,0);
} 
return G__8954__delegate.call(this,x,y,more);};
G__8954.cljs$lang$maxFixedArity = 2;
G__8954.cljs$lang$applyTo = (function (arglist__8956){
var x = cljs.core.first(arglist__8956);
arglist__8956 = cljs.core.next(arglist__8956);
var y = cljs.core.first(arglist__8956);
var more = cljs.core.rest(arglist__8956);
return G__8954__delegate(x,y,more);
});
G__8954.cljs$core$IFn$_invoke$arity$variadic = G__8954__delegate;
return G__8954;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__8957 = null;
if (arguments.length > 2) {
var G__8958__i = 0, G__8958__a = new Array(arguments.length -  2);
while (G__8958__i < G__8958__a.length) {G__8958__a[G__8958__i] = arguments[G__8958__i + 2]; ++G__8958__i;}
G__8957 = new cljs.core.IndexedSeq(G__8958__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8957);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__6343__auto__ = x;
var y__6344__auto__ = y;
return ((x__6343__auto__ < y__6344__auto__) ? x__6343__auto__ : y__6344__auto__);
});
var min__3 = (function() { 
var G__8959__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__6343__auto__ = x;
var y__6344__auto__ = y;
return ((x__6343__auto__ < y__6344__auto__) ? x__6343__auto__ : y__6344__auto__);
})(),more);
};
var G__8959 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8960__i = 0, G__8960__a = new Array(arguments.length -  2);
while (G__8960__i < G__8960__a.length) {G__8960__a[G__8960__i] = arguments[G__8960__i + 2]; ++G__8960__i;}
  more = new cljs.core.IndexedSeq(G__8960__a,0);
} 
return G__8959__delegate.call(this,x,y,more);};
G__8959.cljs$lang$maxFixedArity = 2;
G__8959.cljs$lang$applyTo = (function (arglist__8961){
var x = cljs.core.first(arglist__8961);
arglist__8961 = cljs.core.next(arglist__8961);
var y = cljs.core.first(arglist__8961);
var more = cljs.core.rest(arglist__8961);
return G__8959__delegate(x,y,more);
});
G__8959.cljs$core$IFn$_invoke$arity$variadic = G__8959__delegate;
return G__8959;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__8962 = null;
if (arguments.length > 2) {
var G__8963__i = 0, G__8963__a = new Array(arguments.length -  2);
while (G__8963__i < G__8963__a.length) {G__8963__a[G__8963__i] = arguments[G__8963__i + 2]; ++G__8963__i;}
G__8962 = new cljs.core.IndexedSeq(G__8963__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8962);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__8964__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__8964 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8965__i = 0, G__8965__a = new Array(arguments.length -  2);
while (G__8965__i < G__8965__a.length) {G__8965__a[G__8965__i] = arguments[G__8965__i + 2]; ++G__8965__i;}
  more = new cljs.core.IndexedSeq(G__8965__a,0);
} 
return G__8964__delegate.call(this,x,y,more);};
G__8964.cljs$lang$maxFixedArity = 2;
G__8964.cljs$lang$applyTo = (function (arglist__8966){
var x = cljs.core.first(arglist__8966);
arglist__8966 = cljs.core.next(arglist__8966);
var y = cljs.core.first(arglist__8966);
var more = cljs.core.rest(arglist__8966);
return G__8964__delegate(x,y,more);
});
G__8964.cljs$core$IFn$_invoke$arity$variadic = G__8964__delegate;
return G__8964;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__8967 = null;
if (arguments.length > 2) {
var G__8968__i = 0, G__8968__a = new Array(arguments.length -  2);
while (G__8968__i < G__8968__a.length) {G__8968__a[G__8968__i] = arguments[G__8968__i + 2]; ++G__8968__i;}
G__8967 = new cljs.core.IndexedSeq(G__8968__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__8969__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__8969 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8970__i = 0, G__8970__a = new Array(arguments.length -  2);
while (G__8970__i < G__8970__a.length) {G__8970__a[G__8970__i] = arguments[G__8970__i + 2]; ++G__8970__i;}
  more = new cljs.core.IndexedSeq(G__8970__a,0);
} 
return G__8969__delegate.call(this,x,y,more);};
G__8969.cljs$lang$maxFixedArity = 2;
G__8969.cljs$lang$applyTo = (function (arglist__8971){
var x = cljs.core.first(arglist__8971);
arglist__8971 = cljs.core.next(arglist__8971);
var y = cljs.core.first(arglist__8971);
var more = cljs.core.rest(arglist__8971);
return G__8969__delegate(x,y,more);
});
G__8969.cljs$core$IFn$_invoke$arity$variadic = G__8969__delegate;
return G__8969;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__8972 = null;
if (arguments.length > 2) {
var G__8973__i = 0, G__8973__a = new Array(arguments.length -  2);
while (G__8973__i < G__8973__a.length) {G__8973__a[G__8973__i] = arguments[G__8973__i + 2]; ++G__8973__i;}
G__8972 = new cljs.core.IndexedSeq(G__8973__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__8978__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8978 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8979__i = 0, G__8979__a = new Array(arguments.length -  2);
while (G__8979__i < G__8979__a.length) {G__8979__a[G__8979__i] = arguments[G__8979__i + 2]; ++G__8979__i;}
  more = new cljs.core.IndexedSeq(G__8979__a,0);
} 
return G__8978__delegate.call(this,x,y,more);};
G__8978.cljs$lang$maxFixedArity = 2;
G__8978.cljs$lang$applyTo = (function (arglist__8980){
var x = cljs.core.first(arglist__8980);
arglist__8980 = cljs.core.next(arglist__8980);
var y = cljs.core.first(arglist__8980);
var more = cljs.core.rest(arglist__8980);
return G__8978__delegate(x,y,more);
});
G__8978.cljs$core$IFn$_invoke$arity$variadic = G__8978__delegate;
return G__8978;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__8981 = null;
if (arguments.length > 2) {
var G__8982__i = 0, G__8982__a = new Array(arguments.length -  2);
while (G__8982__i < G__8982__a.length) {G__8982__a[G__8982__i] = arguments[G__8982__i + 2]; ++G__8982__i;}
G__8981 = new cljs.core.IndexedSeq(G__8982__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__8983__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__8983 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8984__i = 0, G__8984__a = new Array(arguments.length -  2);
while (G__8984__i < G__8984__a.length) {G__8984__a[G__8984__i] = arguments[G__8984__i + 2]; ++G__8984__i;}
  more = new cljs.core.IndexedSeq(G__8984__a,0);
} 
return G__8983__delegate.call(this,x,y,more);};
G__8983.cljs$lang$maxFixedArity = 2;
G__8983.cljs$lang$applyTo = (function (arglist__8985){
var x = cljs.core.first(arglist__8985);
arglist__8985 = cljs.core.next(arglist__8985);
var y = cljs.core.first(arglist__8985);
var more = cljs.core.rest(arglist__8985);
return G__8983__delegate(x,y,more);
});
G__8983.cljs$core$IFn$_invoke$arity$variadic = G__8983__delegate;
return G__8983;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__8986 = null;
if (arguments.length > 2) {
var G__8987__i = 0, G__8987__a = new Array(arguments.length -  2);
while (G__8987__i < G__8987__a.length) {G__8987__a[G__8987__i] = arguments[G__8987__i + 2]; ++G__8987__i;}
G__8986 = new cljs.core.IndexedSeq(G__8987__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8986);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__8988__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__8988 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8989__i = 0, G__8989__a = new Array(arguments.length -  2);
while (G__8989__i < G__8989__a.length) {G__8989__a[G__8989__i] = arguments[G__8989__i + 2]; ++G__8989__i;}
  more = new cljs.core.IndexedSeq(G__8989__a,0);
} 
return G__8988__delegate.call(this,x,y,more);};
G__8988.cljs$lang$maxFixedArity = 2;
G__8988.cljs$lang$applyTo = (function (arglist__8990){
var x = cljs.core.first(arglist__8990);
arglist__8990 = cljs.core.next(arglist__8990);
var y = cljs.core.first(arglist__8990);
var more = cljs.core.rest(arglist__8990);
return G__8988__delegate(x,y,more);
});
G__8988.cljs$core$IFn$_invoke$arity$variadic = G__8988__delegate;
return G__8988;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__8991 = null;
if (arguments.length > 2) {
var G__8992__i = 0, G__8992__a = new Array(arguments.length -  2);
while (G__8992__i < G__8992__a.length) {G__8992__a[G__8992__i] = arguments[G__8992__i + 2]; ++G__8992__i;}
G__8991 = new cljs.core.IndexedSeq(G__8992__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__8995 = x;
var G__8996 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__8995,G__8996) : cljs.core.mod.call(null,G__8995,G__8996));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__8997__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__8997 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8998__i = 0, G__8998__a = new Array(arguments.length -  2);
while (G__8998__i < G__8998__a.length) {G__8998__a[G__8998__i] = arguments[G__8998__i + 2]; ++G__8998__i;}
  more = new cljs.core.IndexedSeq(G__8998__a,0);
} 
return G__8997__delegate.call(this,x,y,more);};
G__8997.cljs$lang$maxFixedArity = 2;
G__8997.cljs$lang$applyTo = (function (arglist__8999){
var x = cljs.core.first(arglist__8999);
arglist__8999 = cljs.core.next(arglist__8999);
var y = cljs.core.first(arglist__8999);
var more = cljs.core.rest(arglist__8999);
return G__8997__delegate(x,y,more);
});
G__8997.cljs$core$IFn$_invoke$arity$variadic = G__8997__delegate;
return G__8997;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__9000 = null;
if (arguments.length > 2) {
var G__9001__i = 0, G__9001__a = new Array(arguments.length -  2);
while (G__9001__i < G__9001__a.length) {G__9001__a[G__9001__i] = arguments[G__9001__i + 2]; ++G__9001__i;}
G__9000 = new cljs.core.IndexedSeq(G__9001__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__9002__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__9002 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9003__i = 0, G__9003__a = new Array(arguments.length -  2);
while (G__9003__i < G__9003__a.length) {G__9003__a[G__9003__i] = arguments[G__9003__i + 2]; ++G__9003__i;}
  more = new cljs.core.IndexedSeq(G__9003__a,0);
} 
return G__9002__delegate.call(this,x,y,more);};
G__9002.cljs$lang$maxFixedArity = 2;
G__9002.cljs$lang$applyTo = (function (arglist__9004){
var x = cljs.core.first(arglist__9004);
arglist__9004 = cljs.core.next(arglist__9004);
var y = cljs.core.first(arglist__9004);
var more = cljs.core.rest(arglist__9004);
return G__9002__delegate(x,y,more);
});
G__9002.cljs$core$IFn$_invoke$arity$variadic = G__9002__delegate;
return G__9002;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__9005 = null;
if (arguments.length > 2) {
var G__9006__i = 0, G__9006__a = new Array(arguments.length -  2);
while (G__9006__i < G__9006__a.length) {G__9006__a[G__9006__i] = arguments[G__9006__i + 2]; ++G__9006__i;}
G__9005 = new cljs.core.IndexedSeq(G__9006__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9005);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__9009 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__9009) : Math.floor.call(null,G__9009));
} else {
var G__9010 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9010) : Math.ceil.call(null,G__9010));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__9011__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__9011 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9012__i = 0, G__9012__a = new Array(arguments.length -  2);
while (G__9012__i < G__9012__a.length) {G__9012__a[G__9012__i] = arguments[G__9012__i + 2]; ++G__9012__i;}
  more = new cljs.core.IndexedSeq(G__9012__a,0);
} 
return G__9011__delegate.call(this,x,y,more);};
G__9011.cljs$lang$maxFixedArity = 2;
G__9011.cljs$lang$applyTo = (function (arglist__9013){
var x = cljs.core.first(arglist__9013);
arglist__9013 = cljs.core.next(arglist__9013);
var y = cljs.core.first(arglist__9013);
var more = cljs.core.rest(arglist__9013);
return G__9011__delegate(x,y,more);
});
G__9011.cljs$core$IFn$_invoke$arity$variadic = G__9011__delegate;
return G__9011;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__9014 = null;
if (arguments.length > 2) {
var G__9015__i = 0, G__9015__a = new Array(arguments.length -  2);
while (G__9015__i < G__9015__a.length) {G__9015__a[G__9015__i] = arguments[G__9015__i + 2]; ++G__9015__i;}
G__9014 = new cljs.core.IndexedSeq(G__9015__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9014);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__9016__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__9016 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9017__i = 0, G__9017__a = new Array(arguments.length -  2);
while (G__9017__i < G__9017__a.length) {G__9017__a[G__9017__i] = arguments[G__9017__i + 2]; ++G__9017__i;}
  more = new cljs.core.IndexedSeq(G__9017__a,0);
} 
return G__9016__delegate.call(this,x,y,more);};
G__9016.cljs$lang$maxFixedArity = 2;
G__9016.cljs$lang$applyTo = (function (arglist__9018){
var x = cljs.core.first(arglist__9018);
arglist__9018 = cljs.core.next(arglist__9018);
var y = cljs.core.first(arglist__9018);
var more = cljs.core.rest(arglist__9018);
return G__9016__delegate(x,y,more);
});
G__9016.cljs$core$IFn$_invoke$arity$variadic = G__9016__delegate;
return G__9016;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__9019 = null;
if (arguments.length > 2) {
var G__9020__i = 0, G__9020__a = new Array(arguments.length -  2);
while (G__9020__i < G__9020__a.length) {G__9020__a[G__9020__i] = arguments[G__9020__i + 2]; ++G__9020__i;}
G__9019 = new cljs.core.IndexedSeq(G__9020__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9019);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__9021__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__9021 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9022__i = 0, G__9022__a = new Array(arguments.length -  2);
while (G__9022__i < G__9022__a.length) {G__9022__a[G__9022__i] = arguments[G__9022__i + 2]; ++G__9022__i;}
  more = new cljs.core.IndexedSeq(G__9022__a,0);
} 
return G__9021__delegate.call(this,x,y,more);};
G__9021.cljs$lang$maxFixedArity = 2;
G__9021.cljs$lang$applyTo = (function (arglist__9023){
var x = cljs.core.first(arglist__9023);
arglist__9023 = cljs.core.next(arglist__9023);
var y = cljs.core.first(arglist__9023);
var more = cljs.core.rest(arglist__9023);
return G__9021__delegate(x,y,more);
});
G__9021.cljs$core$IFn$_invoke$arity$variadic = G__9021__delegate;
return G__9021;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__9024 = null;
if (arguments.length > 2) {
var G__9025__i = 0, G__9025__a = new Array(arguments.length -  2);
while (G__9025__i < G__9025__a.length) {G__9025__a[G__9025__i] = arguments[G__9025__i + 2]; ++G__9025__i;}
G__9024 = new cljs.core.IndexedSeq(G__9025__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__9026__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__9026 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9027__i = 0, G__9027__a = new Array(arguments.length -  2);
while (G__9027__i < G__9027__a.length) {G__9027__a[G__9027__i] = arguments[G__9027__i + 2]; ++G__9027__i;}
  more = new cljs.core.IndexedSeq(G__9027__a,0);
} 
return G__9026__delegate.call(this,x,y,more);};
G__9026.cljs$lang$maxFixedArity = 2;
G__9026.cljs$lang$applyTo = (function (arglist__9028){
var x = cljs.core.first(arglist__9028);
arglist__9028 = cljs.core.next(arglist__9028);
var y = cljs.core.first(arglist__9028);
var more = cljs.core.rest(arglist__9028);
return G__9026__delegate(x,y,more);
});
G__9026.cljs$core$IFn$_invoke$arity$variadic = G__9026__delegate;
return G__9026;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__9029 = null;
if (arguments.length > 2) {
var G__9030__i = 0, G__9030__a = new Array(arguments.length -  2);
while (G__9030__i < G__9030__a.length) {G__9030__a[G__9030__i] = arguments[G__9030__i + 2]; ++G__9030__i;}
G__9029 = new cljs.core.IndexedSeq(G__9030__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9029);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__9035__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__9036 = y;
var G__9037 = cljs.core.first(more);
var G__9038 = cljs.core.next(more);
x = G__9036;
y = G__9037;
more = G__9038;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__9035 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9039__i = 0, G__9039__a = new Array(arguments.length -  2);
while (G__9039__i < G__9039__a.length) {G__9039__a[G__9039__i] = arguments[G__9039__i + 2]; ++G__9039__i;}
  more = new cljs.core.IndexedSeq(G__9039__a,0);
} 
return G__9035__delegate.call(this,x,y,more);};
G__9035.cljs$lang$maxFixedArity = 2;
G__9035.cljs$lang$applyTo = (function (arglist__9040){
var x = cljs.core.first(arglist__9040);
arglist__9040 = cljs.core.next(arglist__9040);
var y = cljs.core.first(arglist__9040);
var more = cljs.core.rest(arglist__9040);
return G__9035__delegate(x,y,more);
});
G__9035.cljs$core$IFn$_invoke$arity$variadic = G__9035__delegate;
return G__9035;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__9041 = null;
if (arguments.length > 2) {
var G__9042__i = 0, G__9042__a = new Array(arguments.length -  2);
while (G__9042__i < G__9042__a.length) {G__9042__a[G__9042__i] = arguments[G__9042__i + 2]; ++G__9042__i;}
G__9041 = new cljs.core.IndexedSeq(G__9042__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9041);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__9043 = (n__$1 - (1));
var G__9044 = cljs.core.next(xs);
n__$1 = G__9043;
xs = G__9044;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__9048 = x;
return goog.string.buildString(G__9048);
}
});
var str__2 = (function() { 
var G__9049__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__9050 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__9051 = cljs.core.next(more);
sb = G__9050;
more = G__9051;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__9049 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__9052__i = 0, G__9052__a = new Array(arguments.length -  1);
while (G__9052__i < G__9052__a.length) {G__9052__a[G__9052__i] = arguments[G__9052__i + 1]; ++G__9052__i;}
  ys = new cljs.core.IndexedSeq(G__9052__a,0);
} 
return G__9049__delegate.call(this,x,ys);};
G__9049.cljs$lang$maxFixedArity = 1;
G__9049.cljs$lang$applyTo = (function (arglist__9053){
var x = cljs.core.first(arglist__9053);
var ys = cljs.core.rest(arglist__9053);
return G__9049__delegate(x,ys);
});
G__9049.cljs$core$IFn$_invoke$arity$variadic = G__9049__delegate;
return G__9049;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__9054 = null;
if (arguments.length > 1) {
var G__9055__i = 0, G__9055__a = new Array(arguments.length -  1);
while (G__9055__i < G__9055__a.length) {G__9055__a[G__9055__i] = arguments[G__9055__i + 1]; ++G__9055__i;}
G__9054 = new cljs.core.IndexedSeq(G__9055__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9054);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__9056 = cljs.core.next(xs);
var G__9057 = cljs.core.next(ys);
xs = G__9056;
ys = G__9057;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__9058 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__9059 = cljs.core.next(s);
res = G__9058;
s = G__9059;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__9064 = ((h + (cljs.core.hash((function (){var G__9062 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9062) : cljs.core.key.call(null,G__9062));
})()) ^ cljs.core.hash((function (){var G__9063 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9063) : cljs.core.val.call(null,G__9063));
})()))) % (4503599627370496));
var G__9065 = cljs.core.next(s);
h = G__9064;
s = G__9065;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__9066 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__9067 = cljs.core.next(s__$1);
h = G__9066;
s__$1 = G__9067;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__9078_9088 = cljs.core.seq(fn_map);
var chunk__9079_9089 = null;
var count__9080_9090 = (0);
var i__9081_9091 = (0);
while(true){
if((i__9081_9091 < count__9080_9090)){
var vec__9082_9092 = chunk__9079_9089.cljs$core$IIndexed$_nth$arity$2(null,i__9081_9091);
var key_name_9093 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9082_9092,(0),null);
var f_9094 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9082_9092,(1),null);
var str_name_9095 = (function (){var G__9083 = key_name_9093;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9083) : cljs.core.name.call(null,G__9083));
})();
(obj[str_name_9095] = f_9094);

var G__9096 = seq__9078_9088;
var G__9097 = chunk__9079_9089;
var G__9098 = count__9080_9090;
var G__9099 = (i__9081_9091 + (1));
seq__9078_9088 = G__9096;
chunk__9079_9089 = G__9097;
count__9080_9090 = G__9098;
i__9081_9091 = G__9099;
continue;
} else {
var temp__4126__auto___9100 = cljs.core.seq(seq__9078_9088);
if(temp__4126__auto___9100){
var seq__9078_9101__$1 = temp__4126__auto___9100;
if(cljs.core.chunked_seq_QMARK_(seq__9078_9101__$1)){
var c__6806__auto___9102 = (function (){var G__9084 = seq__9078_9101__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__9084) : cljs.core.chunk_first.call(null,G__9084));
})();
var G__9103 = (function (){var G__9085 = seq__9078_9101__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__9085) : cljs.core.chunk_rest.call(null,G__9085));
})();
var G__9104 = c__6806__auto___9102;
var G__9105 = cljs.core.count(c__6806__auto___9102);
var G__9106 = (0);
seq__9078_9088 = G__9103;
chunk__9079_9089 = G__9104;
count__9080_9090 = G__9105;
i__9081_9091 = G__9106;
continue;
} else {
var vec__9086_9107 = cljs.core.first(seq__9078_9101__$1);
var key_name_9108 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9086_9107,(0),null);
var f_9109 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9086_9107,(1),null);
var str_name_9110 = (function (){var G__9087 = key_name_9108;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9087) : cljs.core.name.call(null,G__9087));
})();
(obj[str_name_9110] = f_9109);

var G__9111 = cljs.core.next(seq__9078_9101__$1);
var G__9112 = null;
var G__9113 = (0);
var G__9114 = (0);
seq__9078_9088 = G__9111;
chunk__9079_9089 = G__9112;
count__9080_9090 = G__9113;
i__9081_9091 = G__9114;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__9116 = coll;
if(G__9116){
var bit__6700__auto__ = (G__9116.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__6700__auto__) || (G__9116.cljs$core$IReversible$)){
return true;
} else {
if((!G__9116.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__9116);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__9116);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__9117 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__9117;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__9118 = (i - (1));
var G__9119 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__9118;
r = G__9119;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__9120__i = 0, G__9120__a = new Array(arguments.length -  0);
while (G__9120__i < G__9120__a.length) {G__9120__a[G__9120__i] = arguments[G__9120__i + 0]; ++G__9120__i;}
  xs = new cljs.core.IndexedSeq(G__9120__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__9121){
var xs = cljs.core.seq(arglist__9121);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__6019__auto__ = (coll == null);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var G__9125 = coll;
if(G__9125){
var bit__6693__auto__ = (G__9125.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6693__auto__) || (G__9125.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__9127 = x;
if(G__9127){
var bit__6700__auto__ = (G__9127.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__6700__auto__) || (G__9127.cljs$core$IList$)){
return true;
} else {
if((!G__9127.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__9127);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__9127);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__6007__auto__ = cljs.core.not(a.ns);
if(and__6007__auto__){
return b.ns;
} else {
return and__6007__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__9134 = a.ns;
var G__9135 = b.ns;
return goog.array.defaultCompare(G__9134,G__9135);
})();
if(((0) === nsc)){
var G__9136 = a.name;
var G__9137 = b.name;
return goog.array.defaultCompare(G__9136,G__9137);
} else {
return nsc;
}
}
} else {
var G__9138 = a.name;
var G__9139 = b.name;
return goog.array.defaultCompare(G__9138,G__9139);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__6440__auto__ = self__._hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__9141 = null;
var G__9141__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__9141__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__9141 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__9141__2.call(this,self__,coll);
case 3:
return G__9141__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9141.cljs$core$IFn$_invoke$arity$2 = G__9141__2;
G__9141.cljs$core$IFn$_invoke$arity$3 = G__9141__3;
return G__9141;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args9140){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9140)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__9143 = x;
if(G__9143){
var bit__6693__auto__ = (G__9143.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__6693__auto__) || (G__9143.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__9145 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9145) : cljs.core.name.call(null,G__9145));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__9146 = ls.sval();
ls = G__9146;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__9148 = s;
if(G__9148){
var bit__6693__auto__ = (G__9148.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__6693__auto__) || (G__9148.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__9149 = cljs.core.next(s__$1);
s__$1 = G__9149;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_9150 = (0);
var xs_9151 = cljs.core.seq(coll);
while(true){
if(xs_9151){
(ret[i_9150] = cljs.core.to_array(cljs.core.first(xs_9151)));

var G__9152 = (i_9150 + (1));
var G__9153 = cljs.core.next(xs_9151);
i_9150 = G__9152;
xs_9151 = G__9153;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9156 = (i + (1));
var G__9157 = cljs.core.next(s__$1);
i = G__9156;
s__$1 = G__9157;
continue;
} else {
return a;
}
break;
}
} else {
var n__6906__auto___9158 = size;
var i_9159 = (0);
while(true){
if((i_9159 < n__6906__auto___9158)){
(a[i_9159] = init_val_or_seq);

var G__9160 = (i_9159 + (1));
i_9159 = G__9160;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9163 = (i + (1));
var G__9164 = cljs.core.next(s__$1);
i = G__9163;
s__$1 = G__9164;
continue;
} else {
return a;
}
break;
}
} else {
var n__6906__auto___9165 = size;
var i_9166 = (0);
while(true){
if((i_9166 < n__6906__auto___9165)){
(a[i_9166] = init_val_or_seq);

var G__9167 = (i_9166 + (1));
i_9166 = G__9167;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9170 = (i + (1));
var G__9171 = cljs.core.next(s__$1);
i = G__9170;
s__$1 = G__9171;
continue;
} else {
return a;
}
break;
}
} else {
var n__6906__auto___9172 = size;
var i_9173 = (0);
while(true){
if((i_9173 < n__6906__auto___9172)){
(a[i_9173] = init_val_or_seq);

var G__9174 = (i_9173 + (1));
i_9173 = G__9174;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9177 = (i + (1));
var G__9178 = cljs.core.next(s__$1);
i = G__9177;
s__$1 = G__9178;
continue;
} else {
return a;
}
break;
}
} else {
var n__6906__auto___9179 = size;
var i_9180 = (0);
while(true){
if((i_9180 < n__6906__auto___9179)){
(a[i_9180] = init_val_or_seq);

var G__9181 = (i_9180 + (1));
i_9180 = G__9181;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__9182 = cljs.core.next(s__$1);
var G__9183 = (i - (1));
var G__9184 = (sum + (1));
s__$1 = G__9182;
i = G__9183;
sum = G__9184;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__9204__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__9204 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9205__i = 0, G__9205__a = new Array(arguments.length -  2);
while (G__9205__i < G__9205__a.length) {G__9205__a[G__9205__i] = arguments[G__9205__i + 2]; ++G__9205__i;}
  zs = new cljs.core.IndexedSeq(G__9205__a,0);
} 
return G__9204__delegate.call(this,x,y,zs);};
G__9204.cljs$lang$maxFixedArity = 2;
G__9204.cljs$lang$applyTo = (function (arglist__9206){
var x = cljs.core.first(arglist__9206);
arglist__9206 = cljs.core.next(arglist__9206);
var y = cljs.core.first(arglist__9206);
var zs = cljs.core.rest(arglist__9206);
return G__9204__delegate(x,y,zs);
});
G__9204.cljs$core$IFn$_invoke$arity$variadic = G__9204__delegate;
return G__9204;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__9207 = null;
if (arguments.length > 2) {
var G__9208__i = 0, G__9208__a = new Array(arguments.length -  2);
while (G__9208__i < G__9208__a.length) {G__9208__a[G__9208__i] = arguments[G__9208__i + 2]; ++G__9208__i;}
G__9207 = new cljs.core.IndexedSeq(G__9208__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__9209__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__9209 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__9210__i = 0, G__9210__a = new Array(arguments.length -  4);
while (G__9210__i < G__9210__a.length) {G__9210__a[G__9210__i] = arguments[G__9210__i + 4]; ++G__9210__i;}
  more = new cljs.core.IndexedSeq(G__9210__a,0);
} 
return G__9209__delegate.call(this,a,b,c,d,more);};
G__9209.cljs$lang$maxFixedArity = 4;
G__9209.cljs$lang$applyTo = (function (arglist__9211){
var a = cljs.core.first(arglist__9211);
arglist__9211 = cljs.core.next(arglist__9211);
var b = cljs.core.first(arglist__9211);
arglist__9211 = cljs.core.next(arglist__9211);
var c = cljs.core.first(arglist__9211);
arglist__9211 = cljs.core.next(arglist__9211);
var d = cljs.core.first(arglist__9211);
var more = cljs.core.rest(arglist__9211);
return G__9209__delegate(a,b,c,d,more);
});
G__9209.cljs$core$IFn$_invoke$arity$variadic = G__9209__delegate;
return G__9209;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__9212 = null;
if (arguments.length > 4) {
var G__9213__i = 0, G__9213__a = new Array(arguments.length -  4);
while (G__9213__i < G__9213__a.length) {G__9213__a[G__9213__i] = arguments[G__9213__i + 4]; ++G__9213__i;}
G__9212 = new cljs.core.IndexedSeq(G__9213__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__9212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__9214__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__9215 = ntcoll;
var G__9216 = cljs.core.first(vals);
var G__9217 = cljs.core.next(vals);
tcoll = G__9215;
val = G__9216;
vals = G__9217;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9214 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__9218__i = 0, G__9218__a = new Array(arguments.length -  2);
while (G__9218__i < G__9218__a.length) {G__9218__a[G__9218__i] = arguments[G__9218__i + 2]; ++G__9218__i;}
  vals = new cljs.core.IndexedSeq(G__9218__a,0);
} 
return G__9214__delegate.call(this,tcoll,val,vals);};
G__9214.cljs$lang$maxFixedArity = 2;
G__9214.cljs$lang$applyTo = (function (arglist__9219){
var tcoll = cljs.core.first(arglist__9219);
arglist__9219 = cljs.core.next(arglist__9219);
var val = cljs.core.first(arglist__9219);
var vals = cljs.core.rest(arglist__9219);
return G__9214__delegate(tcoll,val,vals);
});
G__9214.cljs$core$IFn$_invoke$arity$variadic = G__9214__delegate;
return G__9214;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__9220 = null;
if (arguments.length > 2) {
var G__9221__i = 0, G__9221__a = new Array(arguments.length -  2);
while (G__9221__i < G__9221__a.length) {G__9221__a[G__9221__i] = arguments[G__9221__i + 2]; ++G__9221__i;}
G__9220 = new cljs.core.IndexedSeq(G__9221__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__9220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__9222__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__9223 = ntcoll;
var G__9224 = cljs.core.first(kvs);
var G__9225 = cljs.core.second(kvs);
var G__9226 = cljs.core.nnext(kvs);
tcoll = G__9223;
key = G__9224;
val = G__9225;
kvs = G__9226;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9222 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__9227__i = 0, G__9227__a = new Array(arguments.length -  3);
while (G__9227__i < G__9227__a.length) {G__9227__a[G__9227__i] = arguments[G__9227__i + 3]; ++G__9227__i;}
  kvs = new cljs.core.IndexedSeq(G__9227__a,0);
} 
return G__9222__delegate.call(this,tcoll,key,val,kvs);};
G__9222.cljs$lang$maxFixedArity = 3;
G__9222.cljs$lang$applyTo = (function (arglist__9228){
var tcoll = cljs.core.first(arglist__9228);
arglist__9228 = cljs.core.next(arglist__9228);
var key = cljs.core.first(arglist__9228);
arglist__9228 = cljs.core.next(arglist__9228);
var val = cljs.core.first(arglist__9228);
var kvs = cljs.core.rest(arglist__9228);
return G__9222__delegate(tcoll,key,val,kvs);
});
G__9222.cljs$core$IFn$_invoke$arity$variadic = G__9222__delegate;
return G__9222;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__9229 = null;
if (arguments.length > 3) {
var G__9230__i = 0, G__9230__a = new Array(arguments.length -  3);
while (G__9230__i < G__9230__a.length) {G__9230__a[G__9230__i] = arguments[G__9230__i + 3]; ++G__9230__i;}
G__9229 = new cljs.core.IndexedSeq(G__9230__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__9229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__9231__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__9232 = ntcoll;
var G__9233 = cljs.core.first(ks);
var G__9234 = cljs.core.next(ks);
tcoll = G__9232;
key = G__9233;
ks = G__9234;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9231 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__9235__i = 0, G__9235__a = new Array(arguments.length -  2);
while (G__9235__i < G__9235__a.length) {G__9235__a[G__9235__i] = arguments[G__9235__i + 2]; ++G__9235__i;}
  ks = new cljs.core.IndexedSeq(G__9235__a,0);
} 
return G__9231__delegate.call(this,tcoll,key,ks);};
G__9231.cljs$lang$maxFixedArity = 2;
G__9231.cljs$lang$applyTo = (function (arglist__9236){
var tcoll = cljs.core.first(arglist__9236);
arglist__9236 = cljs.core.next(arglist__9236);
var key = cljs.core.first(arglist__9236);
var ks = cljs.core.rest(arglist__9236);
return G__9231__delegate(tcoll,key,ks);
});
G__9231.cljs$core$IFn$_invoke$arity$variadic = G__9231__delegate;
return G__9231;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__9237 = null;
if (arguments.length > 2) {
var G__9238__i = 0, G__9238__a = new Array(arguments.length -  2);
while (G__9238__i < G__9238__a.length) {G__9238__a[G__9238__i] = arguments[G__9238__i + 2]; ++G__9238__i;}
G__9237 = new cljs.core.IndexedSeq(G__9238__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__9237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__9239__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__9240 = ntcoll;
var G__9241 = cljs.core.first(vals);
var G__9242 = cljs.core.next(vals);
tcoll = G__9240;
val = G__9241;
vals = G__9242;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9239 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__9243__i = 0, G__9243__a = new Array(arguments.length -  2);
while (G__9243__i < G__9243__a.length) {G__9243__a[G__9243__i] = arguments[G__9243__i + 2]; ++G__9243__i;}
  vals = new cljs.core.IndexedSeq(G__9243__a,0);
} 
return G__9239__delegate.call(this,tcoll,val,vals);};
G__9239.cljs$lang$maxFixedArity = 2;
G__9239.cljs$lang$applyTo = (function (arglist__9244){
var tcoll = cljs.core.first(arglist__9244);
arglist__9244 = cljs.core.next(arglist__9244);
var val = cljs.core.first(arglist__9244);
var vals = cljs.core.rest(arglist__9244);
return G__9239__delegate(tcoll,val,vals);
});
G__9239.cljs$core$IFn$_invoke$arity$variadic = G__9239__delegate;
return G__9239;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__9245 = null;
if (arguments.length > 2) {
var G__9246__i = 0, G__9246__a = new Array(arguments.length -  2);
while (G__9246__i < G__9246__a.length) {G__9246__a[G__9246__i] = arguments[G__9246__i + 2]; ++G__9246__i;}
G__9245 = new cljs.core.IndexedSeq(G__9246__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__9245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a6950 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a6950);
} else {
var G__9457 = a6950;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9457) : f.call(null,G__9457));
}
} else {
var b6951 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a6950,b6951);
} else {
var G__9458 = a6950;
var G__9459 = b6951;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9458,G__9459) : f.call(null,G__9458,G__9459));
}
} else {
var c6952 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a6950,b6951,c6952);
} else {
var G__9460 = a6950;
var G__9461 = b6951;
var G__9462 = c6952;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9460,G__9461,G__9462) : f.call(null,G__9460,G__9461,G__9462));
}
} else {
var d6953 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a6950,b6951,c6952,d6953);
} else {
var G__9463 = a6950;
var G__9464 = b6951;
var G__9465 = c6952;
var G__9466 = d6953;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9463,G__9464,G__9465,G__9466) : f.call(null,G__9463,G__9464,G__9465,G__9466));
}
} else {
var e6954 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a6950,b6951,c6952,d6953,e6954);
} else {
var G__9467 = a6950;
var G__9468 = b6951;
var G__9469 = c6952;
var G__9470 = d6953;
var G__9471 = e6954;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9467,G__9468,G__9469,G__9470,G__9471) : f.call(null,G__9467,G__9468,G__9469,G__9470,G__9471));
}
} else {
var f6955 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a6950,b6951,c6952,d6953,e6954,f6955);
} else {
var G__9472 = a6950;
var G__9473 = b6951;
var G__9474 = c6952;
var G__9475 = d6953;
var G__9476 = e6954;
var G__9477 = f6955;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9472,G__9473,G__9474,G__9475,G__9476,G__9477) : f.call(null,G__9472,G__9473,G__9474,G__9475,G__9476,G__9477));
}
} else {
var g6956 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a6950,b6951,c6952,d6953,e6954,f6955,g6956);
} else {
var G__9478 = a6950;
var G__9479 = b6951;
var G__9480 = c6952;
var G__9481 = d6953;
var G__9482 = e6954;
var G__9483 = f6955;
var G__9484 = g6956;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__9478,G__9479,G__9480,G__9481,G__9482,G__9483,G__9484) : f.call(null,G__9478,G__9479,G__9480,G__9481,G__9482,G__9483,G__9484));
}
} else {
var h6957 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957);
} else {
var G__9485 = a6950;
var G__9486 = b6951;
var G__9487 = c6952;
var G__9488 = d6953;
var G__9489 = e6954;
var G__9490 = f6955;
var G__9491 = g6956;
var G__9492 = h6957;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__9485,G__9486,G__9487,G__9488,G__9489,G__9490,G__9491,G__9492) : f.call(null,G__9485,G__9486,G__9487,G__9488,G__9489,G__9490,G__9491,G__9492));
}
} else {
var i6958 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958);
} else {
var G__9493 = a6950;
var G__9494 = b6951;
var G__9495 = c6952;
var G__9496 = d6953;
var G__9497 = e6954;
var G__9498 = f6955;
var G__9499 = g6956;
var G__9500 = h6957;
var G__9501 = i6958;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__9493,G__9494,G__9495,G__9496,G__9497,G__9498,G__9499,G__9500,G__9501) : f.call(null,G__9493,G__9494,G__9495,G__9496,G__9497,G__9498,G__9499,G__9500,G__9501));
}
} else {
var j6959 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959);
} else {
var G__9502 = a6950;
var G__9503 = b6951;
var G__9504 = c6952;
var G__9505 = d6953;
var G__9506 = e6954;
var G__9507 = f6955;
var G__9508 = g6956;
var G__9509 = h6957;
var G__9510 = i6958;
var G__9511 = j6959;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__9502,G__9503,G__9504,G__9505,G__9506,G__9507,G__9508,G__9509,G__9510,G__9511) : f.call(null,G__9502,G__9503,G__9504,G__9505,G__9506,G__9507,G__9508,G__9509,G__9510,G__9511));
}
} else {
var k6960 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960);
} else {
var G__9512 = a6950;
var G__9513 = b6951;
var G__9514 = c6952;
var G__9515 = d6953;
var G__9516 = e6954;
var G__9517 = f6955;
var G__9518 = g6956;
var G__9519 = h6957;
var G__9520 = i6958;
var G__9521 = j6959;
var G__9522 = k6960;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__9512,G__9513,G__9514,G__9515,G__9516,G__9517,G__9518,G__9519,G__9520,G__9521,G__9522) : f.call(null,G__9512,G__9513,G__9514,G__9515,G__9516,G__9517,G__9518,G__9519,G__9520,G__9521,G__9522));
}
} else {
var l6961 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960,l6961);
} else {
var G__9523 = a6950;
var G__9524 = b6951;
var G__9525 = c6952;
var G__9526 = d6953;
var G__9527 = e6954;
var G__9528 = f6955;
var G__9529 = g6956;
var G__9530 = h6957;
var G__9531 = i6958;
var G__9532 = j6959;
var G__9533 = k6960;
var G__9534 = l6961;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__9523,G__9524,G__9525,G__9526,G__9527,G__9528,G__9529,G__9530,G__9531,G__9532,G__9533,G__9534) : f.call(null,G__9523,G__9524,G__9525,G__9526,G__9527,G__9528,G__9529,G__9530,G__9531,G__9532,G__9533,G__9534));
}
} else {
var m6962 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960,l6961,m6962);
} else {
var G__9535 = a6950;
var G__9536 = b6951;
var G__9537 = c6952;
var G__9538 = d6953;
var G__9539 = e6954;
var G__9540 = f6955;
var G__9541 = g6956;
var G__9542 = h6957;
var G__9543 = i6958;
var G__9544 = j6959;
var G__9545 = k6960;
var G__9546 = l6961;
var G__9547 = m6962;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__9535,G__9536,G__9537,G__9538,G__9539,G__9540,G__9541,G__9542,G__9543,G__9544,G__9545,G__9546,G__9547) : f.call(null,G__9535,G__9536,G__9537,G__9538,G__9539,G__9540,G__9541,G__9542,G__9543,G__9544,G__9545,G__9546,G__9547));
}
} else {
var n6963 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960,l6961,m6962,n6963);
} else {
var G__9548 = a6950;
var G__9549 = b6951;
var G__9550 = c6952;
var G__9551 = d6953;
var G__9552 = e6954;
var G__9553 = f6955;
var G__9554 = g6956;
var G__9555 = h6957;
var G__9556 = i6958;
var G__9557 = j6959;
var G__9558 = k6960;
var G__9559 = l6961;
var G__9560 = m6962;
var G__9561 = n6963;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__9548,G__9549,G__9550,G__9551,G__9552,G__9553,G__9554,G__9555,G__9556,G__9557,G__9558,G__9559,G__9560,G__9561) : f.call(null,G__9548,G__9549,G__9550,G__9551,G__9552,G__9553,G__9554,G__9555,G__9556,G__9557,G__9558,G__9559,G__9560,G__9561));
}
} else {
var o6964 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960,l6961,m6962,n6963,o6964);
} else {
var G__9562 = a6950;
var G__9563 = b6951;
var G__9564 = c6952;
var G__9565 = d6953;
var G__9566 = e6954;
var G__9567 = f6955;
var G__9568 = g6956;
var G__9569 = h6957;
var G__9570 = i6958;
var G__9571 = j6959;
var G__9572 = k6960;
var G__9573 = l6961;
var G__9574 = m6962;
var G__9575 = n6963;
var G__9576 = o6964;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__9562,G__9563,G__9564,G__9565,G__9566,G__9567,G__9568,G__9569,G__9570,G__9571,G__9572,G__9573,G__9574,G__9575,G__9576) : f.call(null,G__9562,G__9563,G__9564,G__9565,G__9566,G__9567,G__9568,G__9569,G__9570,G__9571,G__9572,G__9573,G__9574,G__9575,G__9576));
}
} else {
var p6965 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960,l6961,m6962,n6963,o6964,p6965);
} else {
var G__9577 = a6950;
var G__9578 = b6951;
var G__9579 = c6952;
var G__9580 = d6953;
var G__9581 = e6954;
var G__9582 = f6955;
var G__9583 = g6956;
var G__9584 = h6957;
var G__9585 = i6958;
var G__9586 = j6959;
var G__9587 = k6960;
var G__9588 = l6961;
var G__9589 = m6962;
var G__9590 = n6963;
var G__9591 = o6964;
var G__9592 = p6965;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__9577,G__9578,G__9579,G__9580,G__9581,G__9582,G__9583,G__9584,G__9585,G__9586,G__9587,G__9588,G__9589,G__9590,G__9591,G__9592) : f.call(null,G__9577,G__9578,G__9579,G__9580,G__9581,G__9582,G__9583,G__9584,G__9585,G__9586,G__9587,G__9588,G__9589,G__9590,G__9591,G__9592));
}
} else {
var q6966 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960,l6961,m6962,n6963,o6964,p6965,q6966);
} else {
var G__9593 = a6950;
var G__9594 = b6951;
var G__9595 = c6952;
var G__9596 = d6953;
var G__9597 = e6954;
var G__9598 = f6955;
var G__9599 = g6956;
var G__9600 = h6957;
var G__9601 = i6958;
var G__9602 = j6959;
var G__9603 = k6960;
var G__9604 = l6961;
var G__9605 = m6962;
var G__9606 = n6963;
var G__9607 = o6964;
var G__9608 = p6965;
var G__9609 = q6966;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__9593,G__9594,G__9595,G__9596,G__9597,G__9598,G__9599,G__9600,G__9601,G__9602,G__9603,G__9604,G__9605,G__9606,G__9607,G__9608,G__9609) : f.call(null,G__9593,G__9594,G__9595,G__9596,G__9597,G__9598,G__9599,G__9600,G__9601,G__9602,G__9603,G__9604,G__9605,G__9606,G__9607,G__9608,G__9609));
}
} else {
var r6967 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960,l6961,m6962,n6963,o6964,p6965,q6966,r6967);
} else {
var G__9610 = a6950;
var G__9611 = b6951;
var G__9612 = c6952;
var G__9613 = d6953;
var G__9614 = e6954;
var G__9615 = f6955;
var G__9616 = g6956;
var G__9617 = h6957;
var G__9618 = i6958;
var G__9619 = j6959;
var G__9620 = k6960;
var G__9621 = l6961;
var G__9622 = m6962;
var G__9623 = n6963;
var G__9624 = o6964;
var G__9625 = p6965;
var G__9626 = q6966;
var G__9627 = r6967;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__9610,G__9611,G__9612,G__9613,G__9614,G__9615,G__9616,G__9617,G__9618,G__9619,G__9620,G__9621,G__9622,G__9623,G__9624,G__9625,G__9626,G__9627) : f.call(null,G__9610,G__9611,G__9612,G__9613,G__9614,G__9615,G__9616,G__9617,G__9618,G__9619,G__9620,G__9621,G__9622,G__9623,G__9624,G__9625,G__9626,G__9627));
}
} else {
var s6968 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960,l6961,m6962,n6963,o6964,p6965,q6966,r6967,s6968);
} else {
var G__9628 = a6950;
var G__9629 = b6951;
var G__9630 = c6952;
var G__9631 = d6953;
var G__9632 = e6954;
var G__9633 = f6955;
var G__9634 = g6956;
var G__9635 = h6957;
var G__9636 = i6958;
var G__9637 = j6959;
var G__9638 = k6960;
var G__9639 = l6961;
var G__9640 = m6962;
var G__9641 = n6963;
var G__9642 = o6964;
var G__9643 = p6965;
var G__9644 = q6966;
var G__9645 = r6967;
var G__9646 = s6968;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__9628,G__9629,G__9630,G__9631,G__9632,G__9633,G__9634,G__9635,G__9636,G__9637,G__9638,G__9639,G__9640,G__9641,G__9642,G__9643,G__9644,G__9645,G__9646) : f.call(null,G__9628,G__9629,G__9630,G__9631,G__9632,G__9633,G__9634,G__9635,G__9636,G__9637,G__9638,G__9639,G__9640,G__9641,G__9642,G__9643,G__9644,G__9645,G__9646));
}
} else {
var t6969 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a6950,b6951,c6952,d6953,e6954,f6955,g6956,h6957,i6958,j6959,k6960,l6961,m6962,n6963,o6964,p6965,q6966,r6967,s6968,t6969);
} else {
var G__9647 = a6950;
var G__9648 = b6951;
var G__9649 = c6952;
var G__9650 = d6953;
var G__9651 = e6954;
var G__9652 = f6955;
var G__9653 = g6956;
var G__9654 = h6957;
var G__9655 = i6958;
var G__9656 = j6959;
var G__9657 = k6960;
var G__9658 = l6961;
var G__9659 = m6962;
var G__9660 = n6963;
var G__9661 = o6964;
var G__9662 = p6965;
var G__9663 = q6966;
var G__9664 = r6967;
var G__9665 = s6968;
var G__9666 = t6969;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__9647,G__9648,G__9649,G__9650,G__9651,G__9652,G__9653,G__9654,G__9655,G__9656,G__9657,G__9658,G__9659,G__9660,G__9661,G__9662,G__9663,G__9664,G__9665,G__9666) : f.call(null,G__9647,G__9648,G__9649,G__9650,G__9651,G__9652,G__9653,G__9654,G__9655,G__9656,G__9657,G__9658,G__9659,G__9660,G__9661,G__9662,G__9663,G__9664,G__9665,G__9666));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__9667__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__9667 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__9668__i = 0, G__9668__a = new Array(arguments.length -  5);
while (G__9668__i < G__9668__a.length) {G__9668__a[G__9668__i] = arguments[G__9668__i + 5]; ++G__9668__i;}
  args = new cljs.core.IndexedSeq(G__9668__a,0);
} 
return G__9667__delegate.call(this,f,a,b,c,d,args);};
G__9667.cljs$lang$maxFixedArity = 5;
G__9667.cljs$lang$applyTo = (function (arglist__9669){
var f = cljs.core.first(arglist__9669);
arglist__9669 = cljs.core.next(arglist__9669);
var a = cljs.core.first(arglist__9669);
arglist__9669 = cljs.core.next(arglist__9669);
var b = cljs.core.first(arglist__9669);
arglist__9669 = cljs.core.next(arglist__9669);
var c = cljs.core.first(arglist__9669);
arglist__9669 = cljs.core.next(arglist__9669);
var d = cljs.core.first(arglist__9669);
var args = cljs.core.rest(arglist__9669);
return G__9667__delegate(f,a,b,c,d,args);
});
G__9667.cljs$core$IFn$_invoke$arity$variadic = G__9667__delegate;
return G__9667;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__9670 = null;
if (arguments.length > 5) {
var G__9671__i = 0, G__9671__a = new Array(arguments.length -  5);
while (G__9671__i < G__9671__a.length) {G__9671__a[G__9671__i] = arguments[G__9671__i + 5]; ++G__9671__i;}
G__9670 = new cljs.core.IndexedSeq(G__9671__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__9670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__9687 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9687) : f.call(null,G__9687));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__9688 = cljs.core.meta(obj);
var G__9689 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9688,G__9689) : f.call(null,G__9688,G__9689));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__9690 = cljs.core.meta(obj);
var G__9691 = a;
var G__9692 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9690,G__9691,G__9692) : f.call(null,G__9690,G__9691,G__9692));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__9693 = cljs.core.meta(obj);
var G__9694 = a;
var G__9695 = b;
var G__9696 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9693,G__9694,G__9695,G__9696) : f.call(null,G__9693,G__9694,G__9695,G__9696));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__9697 = cljs.core.meta(obj);
var G__9698 = a;
var G__9699 = b;
var G__9700 = c;
var G__9701 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9697,G__9698,G__9699,G__9700,G__9701) : f.call(null,G__9697,G__9698,G__9699,G__9700,G__9701));
})());
});
var vary_meta__7 = (function() { 
var G__9702__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__9702 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__9703__i = 0, G__9703__a = new Array(arguments.length -  6);
while (G__9703__i < G__9703__a.length) {G__9703__a[G__9703__i] = arguments[G__9703__i + 6]; ++G__9703__i;}
  args = new cljs.core.IndexedSeq(G__9703__a,0);
} 
return G__9702__delegate.call(this,obj,f,a,b,c,d,args);};
G__9702.cljs$lang$maxFixedArity = 6;
G__9702.cljs$lang$applyTo = (function (arglist__9704){
var obj = cljs.core.first(arglist__9704);
arglist__9704 = cljs.core.next(arglist__9704);
var f = cljs.core.first(arglist__9704);
arglist__9704 = cljs.core.next(arglist__9704);
var a = cljs.core.first(arglist__9704);
arglist__9704 = cljs.core.next(arglist__9704);
var b = cljs.core.first(arglist__9704);
arglist__9704 = cljs.core.next(arglist__9704);
var c = cljs.core.first(arglist__9704);
arglist__9704 = cljs.core.next(arglist__9704);
var d = cljs.core.first(arglist__9704);
var args = cljs.core.rest(arglist__9704);
return G__9702__delegate(obj,f,a,b,c,d,args);
});
G__9702.cljs$core$IFn$_invoke$arity$variadic = G__9702__delegate;
return G__9702;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__9705 = null;
if (arguments.length > 6) {
var G__9706__i = 0, G__9706__a = new Array(arguments.length -  6);
while (G__9706__i < G__9706__a.length) {G__9706__a[G__9706__i] = arguments[G__9706__i + 6]; ++G__9706__i;}
G__9705 = new cljs.core.IndexedSeq(G__9706__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__9705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__9707__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__9707 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9708__i = 0, G__9708__a = new Array(arguments.length -  2);
while (G__9708__i < G__9708__a.length) {G__9708__a[G__9708__i] = arguments[G__9708__i + 2]; ++G__9708__i;}
  more = new cljs.core.IndexedSeq(G__9708__a,0);
} 
return G__9707__delegate.call(this,x,y,more);};
G__9707.cljs$lang$maxFixedArity = 2;
G__9707.cljs$lang$applyTo = (function (arglist__9709){
var x = cljs.core.first(arglist__9709);
arglist__9709 = cljs.core.next(arglist__9709);
var y = cljs.core.first(arglist__9709);
var more = cljs.core.rest(arglist__9709);
return G__9707__delegate(x,y,more);
});
G__9707.cljs$core$IFn$_invoke$arity$variadic = G__9707__delegate;
return G__9707;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__9710 = null;
if (arguments.length > 2) {
var G__9711__i = 0, G__9711__a = new Array(arguments.length -  2);
while (G__9711__i < G__9711__a.length) {G__9711__a[G__9711__i] = arguments[G__9711__i + 2]; ++G__9711__i;}
G__9710 = new cljs.core.IndexedSeq(G__9711__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t9715 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t9715 = (function (nil_iter,meta9716){
this.nil_iter = nil_iter;
this.meta9716 = meta9716;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t9715.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t9715.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t9715.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t9715.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_9717){
var self__ = this;
var _9717__$1 = this;
return self__.meta9716;
});

cljs.core.t9715.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_9717,meta9716__$1){
var self__ = this;
var _9717__$1 = this;
return (new cljs.core.t9715(self__.nil_iter,meta9716__$1));
});

cljs.core.t9715.cljs$lang$type = true;

cljs.core.t9715.cljs$lang$ctorStr = "cljs.core/t9715";

cljs.core.t9715.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/t9715");
});

cljs.core.__GT_t9715 = (function __GT_t9715(nil_iter__$1,meta9716){
return (new cljs.core.t9715(nil_iter__$1,meta9716));
});

}

return (new cljs.core.t9715(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"D:\\Dropbox\\Apps\\heroku\\news-mash\\out\\cljs\\core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__6007__auto__ = !((lt.stepper == null));
if(and__6007__auto__){
return self__.iter.hasNext();
} else {
return and__6007__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__9718 = lt;
var G__9719 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__9718,G__9719) : self__.xform.call(null,G__9718,G__9719));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9720 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9720) : self__.xform.call(null,G__9720));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__9722 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9722) : xform.call(null,G__9722));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__9724 = cljs.core.next(iters__$1);
iters__$1 = G__9724;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__6906__auto___9725 = self__.iters.length;
var i_9726 = (0);
while(true){
if((i_9726 < n__6906__auto___9725)){
(self__.nexts[i_9726] = (self__.iters[i_9726]).next());

var G__9727 = (i_9726 + (1));
i_9726 = G__9727;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__6007__auto__ = !((lt.stepper == null));
if(and__6007__auto__){
return this$.hasNext();
} else {
return and__6007__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9723 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9723) : self__.xform.call(null,G__9723));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__9732 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9732) : xform.call(null,G__9732));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__9733_9737 = cljs.core.seq(colls);
var chunk__9734_9738 = null;
var count__9735_9739 = (0);
var i__9736_9740 = (0);
while(true){
if((i__9736_9740 < count__9735_9739)){
var coll_9741 = chunk__9734_9738.cljs$core$IIndexed$_nth$arity$2(null,i__9736_9740);
iters.push(cljs.core.iter(coll_9741));

var G__9742 = seq__9733_9737;
var G__9743 = chunk__9734_9738;
var G__9744 = count__9735_9739;
var G__9745 = (i__9736_9740 + (1));
seq__9733_9737 = G__9742;
chunk__9734_9738 = G__9743;
count__9735_9739 = G__9744;
i__9736_9740 = G__9745;
continue;
} else {
var temp__4126__auto___9746 = cljs.core.seq(seq__9733_9737);
if(temp__4126__auto___9746){
var seq__9733_9747__$1 = temp__4126__auto___9746;
if(cljs.core.chunked_seq_QMARK_(seq__9733_9747__$1)){
var c__6806__auto___9748 = cljs.core.chunk_first(seq__9733_9747__$1);
var G__9749 = cljs.core.chunk_rest(seq__9733_9747__$1);
var G__9750 = c__6806__auto___9748;
var G__9751 = cljs.core.count(c__6806__auto___9748);
var G__9752 = (0);
seq__9733_9737 = G__9749;
chunk__9734_9738 = G__9750;
count__9735_9739 = G__9751;
i__9736_9740 = G__9752;
continue;
} else {
var coll_9753 = cljs.core.first(seq__9733_9747__$1);
iters.push(cljs.core.iter(coll_9753));

var G__9754 = cljs.core.next(seq__9733_9747__$1);
var G__9755 = null;
var G__9756 = (0);
var G__9757 = (0);
seq__9733_9737 = G__9754;
chunk__9734_9738 = G__9755;
count__9735_9739 = G__9756;
i__9736_9740 = G__9757;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__6019__auto__ = cljs.core.seq(coll);
if(or__6019__auto__){
return or__6019__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__9758__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__9758 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9759__i = 0, G__9759__a = new Array(arguments.length -  2);
while (G__9759__i < G__9759__a.length) {G__9759__a[G__9759__i] = arguments[G__9759__i + 2]; ++G__9759__i;}
  colls = new cljs.core.IndexedSeq(G__9759__a,0);
} 
return G__9758__delegate.call(this,xform,coll,colls);};
G__9758.cljs$lang$maxFixedArity = 2;
G__9758.cljs$lang$applyTo = (function (arglist__9760){
var xform = cljs.core.first(arglist__9760);
arglist__9760 = cljs.core.next(arglist__9760);
var coll = cljs.core.first(arglist__9760);
var colls = cljs.core.rest(arglist__9760);
return G__9758__delegate(xform,coll,colls);
});
G__9758.cljs$core$IFn$_invoke$arity$variadic = G__9758__delegate;
return G__9758;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__9761 = null;
if (arguments.length > 2) {
var G__9762__i = 0, G__9762__a = new Array(arguments.length -  2);
while (G__9762__i < G__9762__a.length) {G__9762__a[G__9762__i] = arguments[G__9762__i + 2]; ++G__9762__i;}
G__9761 = new cljs.core.IndexedSeq(G__9762__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__9761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__9764 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9764) : pred.call(null,G__9764));
})())){
var G__9765 = pred;
var G__9766 = cljs.core.next(coll);
pred = G__9765;
coll = G__9766;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__6019__auto__ = (function (){var G__9770 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9770) : pred.call(null,G__9770));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var G__9771 = pred;
var G__9772 = cljs.core.next(coll);
pred = G__9771;
coll = G__9772;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__9779 = null;
var G__9779__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__9779__1 = (function (x){
return cljs.core.not((function (){var G__9776 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9776) : f.call(null,G__9776));
})());
});
var G__9779__2 = (function (x,y){
return cljs.core.not((function (){var G__9777 = x;
var G__9778 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9777,G__9778) : f.call(null,G__9777,G__9778));
})());
});
var G__9779__3 = (function() { 
var G__9780__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__9780 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9781__i = 0, G__9781__a = new Array(arguments.length -  2);
while (G__9781__i < G__9781__a.length) {G__9781__a[G__9781__i] = arguments[G__9781__i + 2]; ++G__9781__i;}
  zs = new cljs.core.IndexedSeq(G__9781__a,0);
} 
return G__9780__delegate.call(this,x,y,zs);};
G__9780.cljs$lang$maxFixedArity = 2;
G__9780.cljs$lang$applyTo = (function (arglist__9782){
var x = cljs.core.first(arglist__9782);
arglist__9782 = cljs.core.next(arglist__9782);
var y = cljs.core.first(arglist__9782);
var zs = cljs.core.rest(arglist__9782);
return G__9780__delegate(x,y,zs);
});
G__9780.cljs$core$IFn$_invoke$arity$variadic = G__9780__delegate;
return G__9780;
})()
;
G__9779 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__9779__0.call(this);
case 1:
return G__9779__1.call(this,x);
case 2:
return G__9779__2.call(this,x,y);
default:
var G__9783 = null;
if (arguments.length > 2) {
var G__9784__i = 0, G__9784__a = new Array(arguments.length -  2);
while (G__9784__i < G__9784__a.length) {G__9784__a[G__9784__i] = arguments[G__9784__i + 2]; ++G__9784__i;}
G__9783 = new cljs.core.IndexedSeq(G__9784__a,0);
}
return G__9779__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9779.cljs$lang$maxFixedArity = 2;
G__9779.cljs$lang$applyTo = G__9779__3.cljs$lang$applyTo;
G__9779.cljs$core$IFn$_invoke$arity$0 = G__9779__0;
G__9779.cljs$core$IFn$_invoke$arity$1 = G__9779__1;
G__9779.cljs$core$IFn$_invoke$arity$2 = G__9779__2;
G__9779.cljs$core$IFn$_invoke$arity$variadic = G__9779__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9779;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__9785__delegate = function (args){
return x;
};
var G__9785 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9786__i = 0, G__9786__a = new Array(arguments.length -  0);
while (G__9786__i < G__9786__a.length) {G__9786__a[G__9786__i] = arguments[G__9786__i + 0]; ++G__9786__i;}
  args = new cljs.core.IndexedSeq(G__9786__a,0);
} 
return G__9785__delegate.call(this,args);};
G__9785.cljs$lang$maxFixedArity = 0;
G__9785.cljs$lang$applyTo = (function (arglist__9787){
var args = cljs.core.seq(arglist__9787);
return G__9785__delegate(args);
});
G__9785.cljs$core$IFn$_invoke$arity$variadic = G__9785__delegate;
return G__9785;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__9842 = null;
var G__9842__0 = (function (){
var G__9815 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9815) : f.call(null,G__9815));
});
var G__9842__1 = (function (x){
var G__9816 = (function (){var G__9817 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9817) : g.call(null,G__9817));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9816) : f.call(null,G__9816));
});
var G__9842__2 = (function (x,y){
var G__9818 = (function (){var G__9819 = x;
var G__9820 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9819,G__9820) : g.call(null,G__9819,G__9820));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9818) : f.call(null,G__9818));
});
var G__9842__3 = (function (x,y,z){
var G__9821 = (function (){var G__9822 = x;
var G__9823 = y;
var G__9824 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9822,G__9823,G__9824) : g.call(null,G__9822,G__9823,G__9824));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9821) : f.call(null,G__9821));
});
var G__9842__4 = (function() { 
var G__9843__delegate = function (x,y,z,args){
var G__9825 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9825) : f.call(null,G__9825));
};
var G__9843 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9844__i = 0, G__9844__a = new Array(arguments.length -  3);
while (G__9844__i < G__9844__a.length) {G__9844__a[G__9844__i] = arguments[G__9844__i + 3]; ++G__9844__i;}
  args = new cljs.core.IndexedSeq(G__9844__a,0);
} 
return G__9843__delegate.call(this,x,y,z,args);};
G__9843.cljs$lang$maxFixedArity = 3;
G__9843.cljs$lang$applyTo = (function (arglist__9845){
var x = cljs.core.first(arglist__9845);
arglist__9845 = cljs.core.next(arglist__9845);
var y = cljs.core.first(arglist__9845);
arglist__9845 = cljs.core.next(arglist__9845);
var z = cljs.core.first(arglist__9845);
var args = cljs.core.rest(arglist__9845);
return G__9843__delegate(x,y,z,args);
});
G__9843.cljs$core$IFn$_invoke$arity$variadic = G__9843__delegate;
return G__9843;
})()
;
G__9842 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9842__0.call(this);
case 1:
return G__9842__1.call(this,x);
case 2:
return G__9842__2.call(this,x,y);
case 3:
return G__9842__3.call(this,x,y,z);
default:
var G__9846 = null;
if (arguments.length > 3) {
var G__9847__i = 0, G__9847__a = new Array(arguments.length -  3);
while (G__9847__i < G__9847__a.length) {G__9847__a[G__9847__i] = arguments[G__9847__i + 3]; ++G__9847__i;}
G__9846 = new cljs.core.IndexedSeq(G__9847__a,0);
}
return G__9842__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9846);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9842.cljs$lang$maxFixedArity = 3;
G__9842.cljs$lang$applyTo = G__9842__4.cljs$lang$applyTo;
G__9842.cljs$core$IFn$_invoke$arity$0 = G__9842__0;
G__9842.cljs$core$IFn$_invoke$arity$1 = G__9842__1;
G__9842.cljs$core$IFn$_invoke$arity$2 = G__9842__2;
G__9842.cljs$core$IFn$_invoke$arity$3 = G__9842__3;
G__9842.cljs$core$IFn$_invoke$arity$variadic = G__9842__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9842;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__9848 = null;
var G__9848__0 = (function (){
var G__9826 = (function (){var G__9827 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9827) : g.call(null,G__9827));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9826) : f.call(null,G__9826));
});
var G__9848__1 = (function (x){
var G__9828 = (function (){var G__9829 = (function (){var G__9830 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9830) : h.call(null,G__9830));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9829) : g.call(null,G__9829));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9828) : f.call(null,G__9828));
});
var G__9848__2 = (function (x,y){
var G__9831 = (function (){var G__9832 = (function (){var G__9833 = x;
var G__9834 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9833,G__9834) : h.call(null,G__9833,G__9834));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9832) : g.call(null,G__9832));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9831) : f.call(null,G__9831));
});
var G__9848__3 = (function (x,y,z){
var G__9835 = (function (){var G__9836 = (function (){var G__9837 = x;
var G__9838 = y;
var G__9839 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9837,G__9838,G__9839) : h.call(null,G__9837,G__9838,G__9839));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9836) : g.call(null,G__9836));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9835) : f.call(null,G__9835));
});
var G__9848__4 = (function() { 
var G__9849__delegate = function (x,y,z,args){
var G__9840 = (function (){var G__9841 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9841) : g.call(null,G__9841));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9840) : f.call(null,G__9840));
};
var G__9849 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9850__i = 0, G__9850__a = new Array(arguments.length -  3);
while (G__9850__i < G__9850__a.length) {G__9850__a[G__9850__i] = arguments[G__9850__i + 3]; ++G__9850__i;}
  args = new cljs.core.IndexedSeq(G__9850__a,0);
} 
return G__9849__delegate.call(this,x,y,z,args);};
G__9849.cljs$lang$maxFixedArity = 3;
G__9849.cljs$lang$applyTo = (function (arglist__9851){
var x = cljs.core.first(arglist__9851);
arglist__9851 = cljs.core.next(arglist__9851);
var y = cljs.core.first(arglist__9851);
arglist__9851 = cljs.core.next(arglist__9851);
var z = cljs.core.first(arglist__9851);
var args = cljs.core.rest(arglist__9851);
return G__9849__delegate(x,y,z,args);
});
G__9849.cljs$core$IFn$_invoke$arity$variadic = G__9849__delegate;
return G__9849;
})()
;
G__9848 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9848__0.call(this);
case 1:
return G__9848__1.call(this,x);
case 2:
return G__9848__2.call(this,x,y);
case 3:
return G__9848__3.call(this,x,y,z);
default:
var G__9852 = null;
if (arguments.length > 3) {
var G__9853__i = 0, G__9853__a = new Array(arguments.length -  3);
while (G__9853__i < G__9853__a.length) {G__9853__a[G__9853__i] = arguments[G__9853__i + 3]; ++G__9853__i;}
G__9852 = new cljs.core.IndexedSeq(G__9853__a,0);
}
return G__9848__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9852);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9848.cljs$lang$maxFixedArity = 3;
G__9848.cljs$lang$applyTo = G__9848__4.cljs$lang$applyTo;
G__9848.cljs$core$IFn$_invoke$arity$0 = G__9848__0;
G__9848.cljs$core$IFn$_invoke$arity$1 = G__9848__1;
G__9848.cljs$core$IFn$_invoke$arity$2 = G__9848__2;
G__9848.cljs$core$IFn$_invoke$arity$3 = G__9848__3;
G__9848.cljs$core$IFn$_invoke$arity$variadic = G__9848__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9848;
})()
});
var comp__4 = (function() { 
var G__9854__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__9855__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__9856 = cljs.core.first(fs__$2).call(null,ret);
var G__9857 = cljs.core.next(fs__$2);
ret = G__9856;
fs__$2 = G__9857;
continue;
} else {
return ret;
}
break;
}
};
var G__9855 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9858__i = 0, G__9858__a = new Array(arguments.length -  0);
while (G__9858__i < G__9858__a.length) {G__9858__a[G__9858__i] = arguments[G__9858__i + 0]; ++G__9858__i;}
  args = new cljs.core.IndexedSeq(G__9858__a,0);
} 
return G__9855__delegate.call(this,args);};
G__9855.cljs$lang$maxFixedArity = 0;
G__9855.cljs$lang$applyTo = (function (arglist__9859){
var args = cljs.core.seq(arglist__9859);
return G__9855__delegate(args);
});
G__9855.cljs$core$IFn$_invoke$arity$variadic = G__9855__delegate;
return G__9855;
})()
;
;})(fs__$1))
};
var G__9854 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9860__i = 0, G__9860__a = new Array(arguments.length -  3);
while (G__9860__i < G__9860__a.length) {G__9860__a[G__9860__i] = arguments[G__9860__i + 3]; ++G__9860__i;}
  fs = new cljs.core.IndexedSeq(G__9860__a,0);
} 
return G__9854__delegate.call(this,f1,f2,f3,fs);};
G__9854.cljs$lang$maxFixedArity = 3;
G__9854.cljs$lang$applyTo = (function (arglist__9861){
var f1 = cljs.core.first(arglist__9861);
arglist__9861 = cljs.core.next(arglist__9861);
var f2 = cljs.core.first(arglist__9861);
arglist__9861 = cljs.core.next(arglist__9861);
var f3 = cljs.core.first(arglist__9861);
var fs = cljs.core.rest(arglist__9861);
return G__9854__delegate(f1,f2,f3,fs);
});
G__9854.cljs$core$IFn$_invoke$arity$variadic = G__9854__delegate;
return G__9854;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__9862 = null;
if (arguments.length > 3) {
var G__9863__i = 0, G__9863__a = new Array(arguments.length -  3);
while (G__9863__i < G__9863__a.length) {G__9863__a[G__9863__i] = arguments[G__9863__i + 3]; ++G__9863__i;}
G__9862 = new cljs.core.IndexedSeq(G__9863__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__9862);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__9948 = null;
var G__9948__0 = (function (){
var G__9906 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9906) : f.call(null,G__9906));
});
var G__9948__1 = (function (x){
var G__9907 = arg1;
var G__9908 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9907,G__9908) : f.call(null,G__9907,G__9908));
});
var G__9948__2 = (function (x,y){
var G__9909 = arg1;
var G__9910 = x;
var G__9911 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9909,G__9910,G__9911) : f.call(null,G__9909,G__9910,G__9911));
});
var G__9948__3 = (function (x,y,z){
var G__9912 = arg1;
var G__9913 = x;
var G__9914 = y;
var G__9915 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9912,G__9913,G__9914,G__9915) : f.call(null,G__9912,G__9913,G__9914,G__9915));
});
var G__9948__4 = (function() { 
var G__9949__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__9949 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9950__i = 0, G__9950__a = new Array(arguments.length -  3);
while (G__9950__i < G__9950__a.length) {G__9950__a[G__9950__i] = arguments[G__9950__i + 3]; ++G__9950__i;}
  args = new cljs.core.IndexedSeq(G__9950__a,0);
} 
return G__9949__delegate.call(this,x,y,z,args);};
G__9949.cljs$lang$maxFixedArity = 3;
G__9949.cljs$lang$applyTo = (function (arglist__9951){
var x = cljs.core.first(arglist__9951);
arglist__9951 = cljs.core.next(arglist__9951);
var y = cljs.core.first(arglist__9951);
arglist__9951 = cljs.core.next(arglist__9951);
var z = cljs.core.first(arglist__9951);
var args = cljs.core.rest(arglist__9951);
return G__9949__delegate(x,y,z,args);
});
G__9949.cljs$core$IFn$_invoke$arity$variadic = G__9949__delegate;
return G__9949;
})()
;
G__9948 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9948__0.call(this);
case 1:
return G__9948__1.call(this,x);
case 2:
return G__9948__2.call(this,x,y);
case 3:
return G__9948__3.call(this,x,y,z);
default:
var G__9952 = null;
if (arguments.length > 3) {
var G__9953__i = 0, G__9953__a = new Array(arguments.length -  3);
while (G__9953__i < G__9953__a.length) {G__9953__a[G__9953__i] = arguments[G__9953__i + 3]; ++G__9953__i;}
G__9952 = new cljs.core.IndexedSeq(G__9953__a,0);
}
return G__9948__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9952);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9948.cljs$lang$maxFixedArity = 3;
G__9948.cljs$lang$applyTo = G__9948__4.cljs$lang$applyTo;
G__9948.cljs$core$IFn$_invoke$arity$0 = G__9948__0;
G__9948.cljs$core$IFn$_invoke$arity$1 = G__9948__1;
G__9948.cljs$core$IFn$_invoke$arity$2 = G__9948__2;
G__9948.cljs$core$IFn$_invoke$arity$3 = G__9948__3;
G__9948.cljs$core$IFn$_invoke$arity$variadic = G__9948__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9948;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__9954 = null;
var G__9954__0 = (function (){
var G__9916 = arg1;
var G__9917 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9916,G__9917) : f.call(null,G__9916,G__9917));
});
var G__9954__1 = (function (x){
var G__9918 = arg1;
var G__9919 = arg2;
var G__9920 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9918,G__9919,G__9920) : f.call(null,G__9918,G__9919,G__9920));
});
var G__9954__2 = (function (x,y){
var G__9921 = arg1;
var G__9922 = arg2;
var G__9923 = x;
var G__9924 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9921,G__9922,G__9923,G__9924) : f.call(null,G__9921,G__9922,G__9923,G__9924));
});
var G__9954__3 = (function (x,y,z){
var G__9925 = arg1;
var G__9926 = arg2;
var G__9927 = x;
var G__9928 = y;
var G__9929 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9925,G__9926,G__9927,G__9928,G__9929) : f.call(null,G__9925,G__9926,G__9927,G__9928,G__9929));
});
var G__9954__4 = (function() { 
var G__9955__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__9955 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9956__i = 0, G__9956__a = new Array(arguments.length -  3);
while (G__9956__i < G__9956__a.length) {G__9956__a[G__9956__i] = arguments[G__9956__i + 3]; ++G__9956__i;}
  args = new cljs.core.IndexedSeq(G__9956__a,0);
} 
return G__9955__delegate.call(this,x,y,z,args);};
G__9955.cljs$lang$maxFixedArity = 3;
G__9955.cljs$lang$applyTo = (function (arglist__9957){
var x = cljs.core.first(arglist__9957);
arglist__9957 = cljs.core.next(arglist__9957);
var y = cljs.core.first(arglist__9957);
arglist__9957 = cljs.core.next(arglist__9957);
var z = cljs.core.first(arglist__9957);
var args = cljs.core.rest(arglist__9957);
return G__9955__delegate(x,y,z,args);
});
G__9955.cljs$core$IFn$_invoke$arity$variadic = G__9955__delegate;
return G__9955;
})()
;
G__9954 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9954__0.call(this);
case 1:
return G__9954__1.call(this,x);
case 2:
return G__9954__2.call(this,x,y);
case 3:
return G__9954__3.call(this,x,y,z);
default:
var G__9958 = null;
if (arguments.length > 3) {
var G__9959__i = 0, G__9959__a = new Array(arguments.length -  3);
while (G__9959__i < G__9959__a.length) {G__9959__a[G__9959__i] = arguments[G__9959__i + 3]; ++G__9959__i;}
G__9958 = new cljs.core.IndexedSeq(G__9959__a,0);
}
return G__9954__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9958);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9954.cljs$lang$maxFixedArity = 3;
G__9954.cljs$lang$applyTo = G__9954__4.cljs$lang$applyTo;
G__9954.cljs$core$IFn$_invoke$arity$0 = G__9954__0;
G__9954.cljs$core$IFn$_invoke$arity$1 = G__9954__1;
G__9954.cljs$core$IFn$_invoke$arity$2 = G__9954__2;
G__9954.cljs$core$IFn$_invoke$arity$3 = G__9954__3;
G__9954.cljs$core$IFn$_invoke$arity$variadic = G__9954__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9954;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__9960 = null;
var G__9960__0 = (function (){
var G__9930 = arg1;
var G__9931 = arg2;
var G__9932 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9930,G__9931,G__9932) : f.call(null,G__9930,G__9931,G__9932));
});
var G__9960__1 = (function (x){
var G__9933 = arg1;
var G__9934 = arg2;
var G__9935 = arg3;
var G__9936 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9933,G__9934,G__9935,G__9936) : f.call(null,G__9933,G__9934,G__9935,G__9936));
});
var G__9960__2 = (function (x,y){
var G__9937 = arg1;
var G__9938 = arg2;
var G__9939 = arg3;
var G__9940 = x;
var G__9941 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9937,G__9938,G__9939,G__9940,G__9941) : f.call(null,G__9937,G__9938,G__9939,G__9940,G__9941));
});
var G__9960__3 = (function (x,y,z){
var G__9942 = arg1;
var G__9943 = arg2;
var G__9944 = arg3;
var G__9945 = x;
var G__9946 = y;
var G__9947 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9942,G__9943,G__9944,G__9945,G__9946,G__9947) : f.call(null,G__9942,G__9943,G__9944,G__9945,G__9946,G__9947));
});
var G__9960__4 = (function() { 
var G__9961__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__9961 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9962__i = 0, G__9962__a = new Array(arguments.length -  3);
while (G__9962__i < G__9962__a.length) {G__9962__a[G__9962__i] = arguments[G__9962__i + 3]; ++G__9962__i;}
  args = new cljs.core.IndexedSeq(G__9962__a,0);
} 
return G__9961__delegate.call(this,x,y,z,args);};
G__9961.cljs$lang$maxFixedArity = 3;
G__9961.cljs$lang$applyTo = (function (arglist__9963){
var x = cljs.core.first(arglist__9963);
arglist__9963 = cljs.core.next(arglist__9963);
var y = cljs.core.first(arglist__9963);
arglist__9963 = cljs.core.next(arglist__9963);
var z = cljs.core.first(arglist__9963);
var args = cljs.core.rest(arglist__9963);
return G__9961__delegate(x,y,z,args);
});
G__9961.cljs$core$IFn$_invoke$arity$variadic = G__9961__delegate;
return G__9961;
})()
;
G__9960 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9960__0.call(this);
case 1:
return G__9960__1.call(this,x);
case 2:
return G__9960__2.call(this,x,y);
case 3:
return G__9960__3.call(this,x,y,z);
default:
var G__9964 = null;
if (arguments.length > 3) {
var G__9965__i = 0, G__9965__a = new Array(arguments.length -  3);
while (G__9965__i < G__9965__a.length) {G__9965__a[G__9965__i] = arguments[G__9965__i + 3]; ++G__9965__i;}
G__9964 = new cljs.core.IndexedSeq(G__9965__a,0);
}
return G__9960__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9960.cljs$lang$maxFixedArity = 3;
G__9960.cljs$lang$applyTo = G__9960__4.cljs$lang$applyTo;
G__9960.cljs$core$IFn$_invoke$arity$0 = G__9960__0;
G__9960.cljs$core$IFn$_invoke$arity$1 = G__9960__1;
G__9960.cljs$core$IFn$_invoke$arity$2 = G__9960__2;
G__9960.cljs$core$IFn$_invoke$arity$3 = G__9960__3;
G__9960.cljs$core$IFn$_invoke$arity$variadic = G__9960__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9960;
})()
});
var partial__5 = (function() { 
var G__9966__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__9967__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__9967 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9968__i = 0, G__9968__a = new Array(arguments.length -  0);
while (G__9968__i < G__9968__a.length) {G__9968__a[G__9968__i] = arguments[G__9968__i + 0]; ++G__9968__i;}
  args = new cljs.core.IndexedSeq(G__9968__a,0);
} 
return G__9967__delegate.call(this,args);};
G__9967.cljs$lang$maxFixedArity = 0;
G__9967.cljs$lang$applyTo = (function (arglist__9969){
var args = cljs.core.seq(arglist__9969);
return G__9967__delegate(args);
});
G__9967.cljs$core$IFn$_invoke$arity$variadic = G__9967__delegate;
return G__9967;
})()
;
};
var G__9966 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__9970__i = 0, G__9970__a = new Array(arguments.length -  4);
while (G__9970__i < G__9970__a.length) {G__9970__a[G__9970__i] = arguments[G__9970__i + 4]; ++G__9970__i;}
  more = new cljs.core.IndexedSeq(G__9970__a,0);
} 
return G__9966__delegate.call(this,f,arg1,arg2,arg3,more);};
G__9966.cljs$lang$maxFixedArity = 4;
G__9966.cljs$lang$applyTo = (function (arglist__9971){
var f = cljs.core.first(arglist__9971);
arglist__9971 = cljs.core.next(arglist__9971);
var arg1 = cljs.core.first(arglist__9971);
arglist__9971 = cljs.core.next(arglist__9971);
var arg2 = cljs.core.first(arglist__9971);
arglist__9971 = cljs.core.next(arglist__9971);
var arg3 = cljs.core.first(arglist__9971);
var more = cljs.core.rest(arglist__9971);
return G__9966__delegate(f,arg1,arg2,arg3,more);
});
G__9966.cljs$core$IFn$_invoke$arity$variadic = G__9966__delegate;
return G__9966;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__9972 = null;
if (arguments.length > 4) {
var G__9973__i = 0, G__9973__a = new Array(arguments.length -  4);
while (G__9973__i < G__9973__a.length) {G__9973__a[G__9973__i] = arguments[G__9973__i + 4]; ++G__9973__i;}
G__9972 = new cljs.core.IndexedSeq(G__9973__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__9972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__10006 = null;
var G__10006__1 = (function (a){
var G__9990 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9990) : f.call(null,G__9990));
});
var G__10006__2 = (function (a,b){
var G__9991 = (((a == null))?x:a);
var G__9992 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9991,G__9992) : f.call(null,G__9991,G__9992));
});
var G__10006__3 = (function (a,b,c){
var G__9993 = (((a == null))?x:a);
var G__9994 = b;
var G__9995 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9993,G__9994,G__9995) : f.call(null,G__9993,G__9994,G__9995));
});
var G__10006__4 = (function() { 
var G__10007__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__10007 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__10008__i = 0, G__10008__a = new Array(arguments.length -  3);
while (G__10008__i < G__10008__a.length) {G__10008__a[G__10008__i] = arguments[G__10008__i + 3]; ++G__10008__i;}
  ds = new cljs.core.IndexedSeq(G__10008__a,0);
} 
return G__10007__delegate.call(this,a,b,c,ds);};
G__10007.cljs$lang$maxFixedArity = 3;
G__10007.cljs$lang$applyTo = (function (arglist__10009){
var a = cljs.core.first(arglist__10009);
arglist__10009 = cljs.core.next(arglist__10009);
var b = cljs.core.first(arglist__10009);
arglist__10009 = cljs.core.next(arglist__10009);
var c = cljs.core.first(arglist__10009);
var ds = cljs.core.rest(arglist__10009);
return G__10007__delegate(a,b,c,ds);
});
G__10007.cljs$core$IFn$_invoke$arity$variadic = G__10007__delegate;
return G__10007;
})()
;
G__10006 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__10006__1.call(this,a);
case 2:
return G__10006__2.call(this,a,b);
case 3:
return G__10006__3.call(this,a,b,c);
default:
var G__10010 = null;
if (arguments.length > 3) {
var G__10011__i = 0, G__10011__a = new Array(arguments.length -  3);
while (G__10011__i < G__10011__a.length) {G__10011__a[G__10011__i] = arguments[G__10011__i + 3]; ++G__10011__i;}
G__10010 = new cljs.core.IndexedSeq(G__10011__a,0);
}
return G__10006__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__10010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10006.cljs$lang$maxFixedArity = 3;
G__10006.cljs$lang$applyTo = G__10006__4.cljs$lang$applyTo;
G__10006.cljs$core$IFn$_invoke$arity$1 = G__10006__1;
G__10006.cljs$core$IFn$_invoke$arity$2 = G__10006__2;
G__10006.cljs$core$IFn$_invoke$arity$3 = G__10006__3;
G__10006.cljs$core$IFn$_invoke$arity$variadic = G__10006__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10006;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__10012 = null;
var G__10012__2 = (function (a,b){
var G__9996 = (((a == null))?x:a);
var G__9997 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9996,G__9997) : f.call(null,G__9996,G__9997));
});
var G__10012__3 = (function (a,b,c){
var G__9998 = (((a == null))?x:a);
var G__9999 = (((b == null))?y:b);
var G__10000 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9998,G__9999,G__10000) : f.call(null,G__9998,G__9999,G__10000));
});
var G__10012__4 = (function() { 
var G__10013__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__10013 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__10014__i = 0, G__10014__a = new Array(arguments.length -  3);
while (G__10014__i < G__10014__a.length) {G__10014__a[G__10014__i] = arguments[G__10014__i + 3]; ++G__10014__i;}
  ds = new cljs.core.IndexedSeq(G__10014__a,0);
} 
return G__10013__delegate.call(this,a,b,c,ds);};
G__10013.cljs$lang$maxFixedArity = 3;
G__10013.cljs$lang$applyTo = (function (arglist__10015){
var a = cljs.core.first(arglist__10015);
arglist__10015 = cljs.core.next(arglist__10015);
var b = cljs.core.first(arglist__10015);
arglist__10015 = cljs.core.next(arglist__10015);
var c = cljs.core.first(arglist__10015);
var ds = cljs.core.rest(arglist__10015);
return G__10013__delegate(a,b,c,ds);
});
G__10013.cljs$core$IFn$_invoke$arity$variadic = G__10013__delegate;
return G__10013;
})()
;
G__10012 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__10012__2.call(this,a,b);
case 3:
return G__10012__3.call(this,a,b,c);
default:
var G__10016 = null;
if (arguments.length > 3) {
var G__10017__i = 0, G__10017__a = new Array(arguments.length -  3);
while (G__10017__i < G__10017__a.length) {G__10017__a[G__10017__i] = arguments[G__10017__i + 3]; ++G__10017__i;}
G__10016 = new cljs.core.IndexedSeq(G__10017__a,0);
}
return G__10012__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__10016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10012.cljs$lang$maxFixedArity = 3;
G__10012.cljs$lang$applyTo = G__10012__4.cljs$lang$applyTo;
G__10012.cljs$core$IFn$_invoke$arity$2 = G__10012__2;
G__10012.cljs$core$IFn$_invoke$arity$3 = G__10012__3;
G__10012.cljs$core$IFn$_invoke$arity$variadic = G__10012__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10012;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__10018 = null;
var G__10018__2 = (function (a,b){
var G__10001 = (((a == null))?x:a);
var G__10002 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10001,G__10002) : f.call(null,G__10001,G__10002));
});
var G__10018__3 = (function (a,b,c){
var G__10003 = (((a == null))?x:a);
var G__10004 = (((b == null))?y:b);
var G__10005 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10003,G__10004,G__10005) : f.call(null,G__10003,G__10004,G__10005));
});
var G__10018__4 = (function() { 
var G__10019__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__10019 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__10020__i = 0, G__10020__a = new Array(arguments.length -  3);
while (G__10020__i < G__10020__a.length) {G__10020__a[G__10020__i] = arguments[G__10020__i + 3]; ++G__10020__i;}
  ds = new cljs.core.IndexedSeq(G__10020__a,0);
} 
return G__10019__delegate.call(this,a,b,c,ds);};
G__10019.cljs$lang$maxFixedArity = 3;
G__10019.cljs$lang$applyTo = (function (arglist__10021){
var a = cljs.core.first(arglist__10021);
arglist__10021 = cljs.core.next(arglist__10021);
var b = cljs.core.first(arglist__10021);
arglist__10021 = cljs.core.next(arglist__10021);
var c = cljs.core.first(arglist__10021);
var ds = cljs.core.rest(arglist__10021);
return G__10019__delegate(a,b,c,ds);
});
G__10019.cljs$core$IFn$_invoke$arity$variadic = G__10019__delegate;
return G__10019;
})()
;
G__10018 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__10018__2.call(this,a,b);
case 3:
return G__10018__3.call(this,a,b,c);
default:
var G__10022 = null;
if (arguments.length > 3) {
var G__10023__i = 0, G__10023__a = new Array(arguments.length -  3);
while (G__10023__i < G__10023__a.length) {G__10023__a[G__10023__i] = arguments[G__10023__i + 3]; ++G__10023__i;}
G__10022 = new cljs.core.IndexedSeq(G__10023__a,0);
}
return G__10018__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__10022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10018.cljs$lang$maxFixedArity = 3;
G__10018.cljs$lang$applyTo = G__10018__4.cljs$lang$applyTo;
G__10018.cljs$core$IFn$_invoke$arity$2 = G__10018__2;
G__10018.cljs$core$IFn$_invoke$arity$3 = G__10018__3;
G__10018.cljs$core$IFn$_invoke$arity$variadic = G__10018__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10018;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__10054 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__10054) : cljs.core.volatile_BANG_.call(null,G__10054));
})();
return ((function (i){
return (function() {
var G__10084 = null;
var G__10084__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10084__1 = (function (result){
var G__10055 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10055) : rf.call(null,G__10055));
});
var G__10084__2 = (function (result,input){
var G__10056 = result;
var G__10057 = (function (){var G__10058 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__10059 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10058,G__10059) : f.call(null,G__10058,G__10059));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10056,G__10057) : rf.call(null,G__10056,G__10057));
});
G__10084 = function(result,input){
switch(arguments.length){
case 0:
return G__10084__0.call(this);
case 1:
return G__10084__1.call(this,result);
case 2:
return G__10084__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10084.cljs$core$IFn$_invoke$arity$0 = G__10084__0;
G__10084.cljs$core$IFn$_invoke$arity$1 = G__10084__1;
G__10084.cljs$core$IFn$_invoke$arity$2 = G__10084__2;
return G__10084;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6906__auto___10085 = size;
var i_10086 = (0);
while(true){
if((i_10086 < n__6906__auto___10085)){
cljs.core.chunk_append(b,(function (){var G__10080 = (idx + i_10086);
var G__10081 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10086);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10080,G__10081) : f.call(null,G__10080,G__10081));
})());

var G__10087 = (i_10086 + (1));
i_10086 = G__10087;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__10082 = idx;
var G__10083 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10082,G__10083) : f.call(null,G__10082,G__10083));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__10106 = null;
var G__10106__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10106__1 = (function (result){
var G__10100 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10100) : rf.call(null,G__10100));
});
var G__10106__2 = (function (result,input){
var v = (function (){var G__10101 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10101) : f.call(null,G__10101));
})();
if((v == null)){
return result;
} else {
var G__10102 = result;
var G__10103 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10102,G__10103) : rf.call(null,G__10102,G__10103));
}
});
G__10106 = function(result,input){
switch(arguments.length){
case 0:
return G__10106__0.call(this);
case 1:
return G__10106__1.call(this,result);
case 2:
return G__10106__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10106.cljs$core$IFn$_invoke$arity$0 = G__10106__0;
G__10106.cljs$core$IFn$_invoke$arity$1 = G__10106__1;
G__10106.cljs$core$IFn$_invoke$arity$2 = G__10106__2;
return G__10106;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6906__auto___10107 = size;
var i_10108 = (0);
while(true){
if((i_10108 < n__6906__auto___10107)){
var x_10109 = (function (){var G__10104 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10108);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10104) : f.call(null,G__10104));
})();
if((x_10109 == null)){
} else {
cljs.core.chunk_append(b,x_10109);
}

var G__10110 = (i_10108 + (1));
i_10108 = G__10110;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__10105 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10105) : f.call(null,G__10105));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10111 = this$__$1;
return goog.getUid(G__10111);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__10112 = cljs.core.seq(self__.watches);
var chunk__10113 = null;
var count__10114 = (0);
var i__10115 = (0);
while(true){
if((i__10115 < count__10114)){
var vec__10116 = chunk__10113.cljs$core$IIndexed$_nth$arity$2(null,i__10115);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10116,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10116,(1),null);
var G__10117_10126 = key;
var G__10118_10127 = this$__$1;
var G__10119_10128 = oldval;
var G__10120_10129 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10117_10126,G__10118_10127,G__10119_10128,G__10120_10129) : f.call(null,G__10117_10126,G__10118_10127,G__10119_10128,G__10120_10129));

var G__10130 = seq__10112;
var G__10131 = chunk__10113;
var G__10132 = count__10114;
var G__10133 = (i__10115 + (1));
seq__10112 = G__10130;
chunk__10113 = G__10131;
count__10114 = G__10132;
i__10115 = G__10133;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10112);
if(temp__4126__auto__){
var seq__10112__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10112__$1)){
var c__6806__auto__ = cljs.core.chunk_first(seq__10112__$1);
var G__10134 = cljs.core.chunk_rest(seq__10112__$1);
var G__10135 = c__6806__auto__;
var G__10136 = cljs.core.count(c__6806__auto__);
var G__10137 = (0);
seq__10112 = G__10134;
chunk__10113 = G__10135;
count__10114 = G__10136;
i__10115 = G__10137;
continue;
} else {
var vec__10121 = cljs.core.first(seq__10112__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10121,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10121,(1),null);
var G__10122_10138 = key;
var G__10123_10139 = this$__$1;
var G__10124_10140 = oldval;
var G__10125_10141 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10122_10138,G__10123_10139,G__10124_10140,G__10125_10141) : f.call(null,G__10122_10138,G__10123_10139,G__10124_10140,G__10125_10141));

var G__10142 = cljs.core.next(seq__10112__$1);
var G__10143 = null;
var G__10144 = (0);
var G__10145 = (0);
seq__10112 = G__10142;
chunk__10113 = G__10143;
count__10114 = G__10144;
i__10115 = G__10145;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__10149__delegate = function (x,p__10146){
var map__10148 = p__10146;
var map__10148__$1 = ((cljs.core.seq_QMARK_(map__10148))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10148):map__10148);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10148__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10148__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__10149 = function (x,var_args){
var p__10146 = null;
if (arguments.length > 1) {
var G__10150__i = 0, G__10150__a = new Array(arguments.length -  1);
while (G__10150__i < G__10150__a.length) {G__10150__a[G__10150__i] = arguments[G__10150__i + 1]; ++G__10150__i;}
  p__10146 = new cljs.core.IndexedSeq(G__10150__a,0);
} 
return G__10149__delegate.call(this,x,p__10146);};
G__10149.cljs$lang$maxFixedArity = 1;
G__10149.cljs$lang$applyTo = (function (arglist__10151){
var x = cljs.core.first(arglist__10151);
var p__10146 = cljs.core.rest(arglist__10151);
return G__10149__delegate(x,p__10146);
});
G__10149.cljs$core$IFn$_invoke$arity$variadic = G__10149__delegate;
return G__10149;
})()
;
atom = function(x,var_args){
var p__10146 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__10152 = null;
if (arguments.length > 1) {
var G__10153__i = 0, G__10153__a = new Array(arguments.length -  1);
while (G__10153__i < G__10153__a.length) {G__10153__a[G__10153__i] = arguments[G__10153__i + 1]; ++G__10153__i;}
G__10152 = new cljs.core.IndexedSeq(G__10153__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__10156 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__10156) : validate.call(null,G__10156));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__10157 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__10157) : cljs.core.pr_str.call(null,G__10157));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__10164 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10164) : f.call(null,G__10164));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__10165 = a.state;
var G__10166 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10165,G__10166) : f.call(null,G__10165,G__10166));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__10167 = a.state;
var G__10168 = x;
var G__10169 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10167,G__10168,G__10169) : f.call(null,G__10167,G__10168,G__10169));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__10170__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__10170 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__10171__i = 0, G__10171__a = new Array(arguments.length -  4);
while (G__10171__i < G__10171__a.length) {G__10171__a[G__10171__i] = arguments[G__10171__i + 4]; ++G__10171__i;}
  more = new cljs.core.IndexedSeq(G__10171__a,0);
} 
return G__10170__delegate.call(this,a,f,x,y,more);};
G__10170.cljs$lang$maxFixedArity = 4;
G__10170.cljs$lang$applyTo = (function (arglist__10172){
var a = cljs.core.first(arglist__10172);
arglist__10172 = cljs.core.next(arglist__10172);
var f = cljs.core.first(arglist__10172);
arglist__10172 = cljs.core.next(arglist__10172);
var x = cljs.core.first(arglist__10172);
arglist__10172 = cljs.core.next(arglist__10172);
var y = cljs.core.first(arglist__10172);
var more = cljs.core.rest(arglist__10172);
return G__10170__delegate(a,f,x,y,more);
});
G__10170.cljs$core$IFn$_invoke$arity$variadic = G__10170__delegate;
return G__10170;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__10173 = null;
if (arguments.length > 4) {
var G__10174__i = 0, G__10174__a = new Array(arguments.length -  4);
while (G__10174__i < G__10174__a.length) {G__10174__a[G__10174__i] = arguments[G__10174__i + 4]; ++G__10174__i;}
G__10173 = new cljs.core.IndexedSeq(G__10174__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__10173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10241 = null;
var G__10241__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10241__1 = (function (result){
var G__10208 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10208) : rf.call(null,G__10208));
});
var G__10241__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__10209 = i;
var G__10210 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10209,G__10210) : f.call(null,G__10209,G__10210));
})();
if((v == null)){
return result;
} else {
var G__10211 = result;
var G__10212 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10211,G__10212) : rf.call(null,G__10211,G__10212));
}
});
G__10241 = function(result,input){
switch(arguments.length){
case 0:
return G__10241__0.call(this);
case 1:
return G__10241__1.call(this,result);
case 2:
return G__10241__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10241.cljs$core$IFn$_invoke$arity$0 = G__10241__0;
G__10241.cljs$core$IFn$_invoke$arity$1 = G__10241__1;
G__10241.cljs$core$IFn$_invoke$arity$2 = G__10241__2;
return G__10241;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6906__auto___10242 = size;
var i_10243 = (0);
while(true){
if((i_10243 < n__6906__auto___10242)){
var x_10244 = (function (){var G__10237 = (idx + i_10243);
var G__10238 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10243);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10237,G__10238) : f.call(null,G__10237,G__10238));
})();
if((x_10244 == null)){
} else {
cljs.core.chunk_append(b,x_10244);
}

var G__10245 = (i_10243 + (1));
i_10243 = G__10245;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__10239 = idx;
var G__10240 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10239,G__10240) : f.call(null,G__10239,G__10240));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__10459 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10459) : p.call(null,G__10459));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__6007__auto__ = (function (){var G__10461 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10461) : p.call(null,G__10461));
})();
if(cljs.core.truth_(and__6007__auto__)){
var G__10462 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10462) : p.call(null,G__10462));
} else {
return and__6007__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__6007__auto__ = (function (){var G__10464 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10464) : p.call(null,G__10464));
})();
if(cljs.core.truth_(and__6007__auto__)){
var and__6007__auto____$1 = (function (){var G__10466 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10466) : p.call(null,G__10466));
})();
if(cljs.core.truth_(and__6007__auto____$1)){
var G__10467 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10467) : p.call(null,G__10467));
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__10636__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__10636 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10637__i = 0, G__10637__a = new Array(arguments.length -  3);
while (G__10637__i < G__10637__a.length) {G__10637__a[G__10637__i] = arguments[G__10637__i + 3]; ++G__10637__i;}
  args = new cljs.core.IndexedSeq(G__10637__a,0);
} 
return G__10636__delegate.call(this,x,y,z,args);};
G__10636.cljs$lang$maxFixedArity = 3;
G__10636.cljs$lang$applyTo = (function (arglist__10638){
var x = cljs.core.first(arglist__10638);
arglist__10638 = cljs.core.next(arglist__10638);
var y = cljs.core.first(arglist__10638);
arglist__10638 = cljs.core.next(arglist__10638);
var z = cljs.core.first(arglist__10638);
var args = cljs.core.rest(arglist__10638);
return G__10636__delegate(x,y,z,args);
});
G__10636.cljs$core$IFn$_invoke$arity$variadic = G__10636__delegate;
return G__10636;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__10639 = null;
if (arguments.length > 3) {
var G__10640__i = 0, G__10640__a = new Array(arguments.length -  3);
while (G__10640__i < G__10640__a.length) {G__10640__a[G__10640__i] = arguments[G__10640__i + 3]; ++G__10640__i;}
G__10639 = new cljs.core.IndexedSeq(G__10640__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__6007__auto__ = (function (){var G__10499 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10499) : p1.call(null,G__10499));
})();
if(cljs.core.truth_(and__6007__auto__)){
var G__10500 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10500) : p2.call(null,G__10500));
} else {
return and__6007__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__6007__auto__ = (function (){var G__10502 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10502) : p1.call(null,G__10502));
})();
if(cljs.core.truth_(and__6007__auto__)){
var and__6007__auto____$1 = (function (){var G__10504 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10504) : p1.call(null,G__10504));
})();
if(cljs.core.truth_(and__6007__auto____$1)){
var and__6007__auto____$2 = (function (){var G__10506 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10506) : p2.call(null,G__10506));
})();
if(cljs.core.truth_(and__6007__auto____$2)){
var G__10507 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10507) : p2.call(null,G__10507));
} else {
return and__6007__auto____$2;
}
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__6007__auto__ = (function (){var G__10509 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10509) : p1.call(null,G__10509));
})();
if(cljs.core.truth_(and__6007__auto__)){
var and__6007__auto____$1 = (function (){var G__10511 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10511) : p1.call(null,G__10511));
})();
if(cljs.core.truth_(and__6007__auto____$1)){
var and__6007__auto____$2 = (function (){var G__10513 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10513) : p1.call(null,G__10513));
})();
if(cljs.core.truth_(and__6007__auto____$2)){
var and__6007__auto____$3 = (function (){var G__10515 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10515) : p2.call(null,G__10515));
})();
if(cljs.core.truth_(and__6007__auto____$3)){
var and__6007__auto____$4 = (function (){var G__10517 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10517) : p2.call(null,G__10517));
})();
if(cljs.core.truth_(and__6007__auto____$4)){
var G__10518 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10518) : p2.call(null,G__10518));
} else {
return and__6007__auto____$4;
}
} else {
return and__6007__auto____$3;
}
} else {
return and__6007__auto____$2;
}
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__10641__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__10246_SHARP_){
var and__6007__auto__ = (function (){var G__10523 = p1__10246_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10523) : p1.call(null,G__10523));
})();
if(cljs.core.truth_(and__6007__auto__)){
var G__10524 = p1__10246_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10524) : p2.call(null,G__10524));
} else {
return and__6007__auto__;
}
}),args)));
};
var G__10641 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10642__i = 0, G__10642__a = new Array(arguments.length -  3);
while (G__10642__i < G__10642__a.length) {G__10642__a[G__10642__i] = arguments[G__10642__i + 3]; ++G__10642__i;}
  args = new cljs.core.IndexedSeq(G__10642__a,0);
} 
return G__10641__delegate.call(this,x,y,z,args);};
G__10641.cljs$lang$maxFixedArity = 3;
G__10641.cljs$lang$applyTo = (function (arglist__10643){
var x = cljs.core.first(arglist__10643);
arglist__10643 = cljs.core.next(arglist__10643);
var y = cljs.core.first(arglist__10643);
arglist__10643 = cljs.core.next(arglist__10643);
var z = cljs.core.first(arglist__10643);
var args = cljs.core.rest(arglist__10643);
return G__10641__delegate(x,y,z,args);
});
G__10641.cljs$core$IFn$_invoke$arity$variadic = G__10641__delegate;
return G__10641;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__10644 = null;
if (arguments.length > 3) {
var G__10645__i = 0, G__10645__a = new Array(arguments.length -  3);
while (G__10645__i < G__10645__a.length) {G__10645__a[G__10645__i] = arguments[G__10645__i + 3]; ++G__10645__i;}
G__10644 = new cljs.core.IndexedSeq(G__10645__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__6007__auto__ = (function (){var G__10570 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10570) : p1.call(null,G__10570));
})();
if(cljs.core.truth_(and__6007__auto__)){
var and__6007__auto____$1 = (function (){var G__10572 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10572) : p2.call(null,G__10572));
})();
if(cljs.core.truth_(and__6007__auto____$1)){
var G__10573 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10573) : p3.call(null,G__10573));
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__6007__auto__ = (function (){var G__10575 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10575) : p1.call(null,G__10575));
})();
if(cljs.core.truth_(and__6007__auto__)){
var and__6007__auto____$1 = (function (){var G__10577 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10577) : p2.call(null,G__10577));
})();
if(cljs.core.truth_(and__6007__auto____$1)){
var and__6007__auto____$2 = (function (){var G__10579 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10579) : p3.call(null,G__10579));
})();
if(cljs.core.truth_(and__6007__auto____$2)){
var and__6007__auto____$3 = (function (){var G__10581 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10581) : p1.call(null,G__10581));
})();
if(cljs.core.truth_(and__6007__auto____$3)){
var and__6007__auto____$4 = (function (){var G__10583 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10583) : p2.call(null,G__10583));
})();
if(cljs.core.truth_(and__6007__auto____$4)){
var G__10584 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10584) : p3.call(null,G__10584));
} else {
return and__6007__auto____$4;
}
} else {
return and__6007__auto____$3;
}
} else {
return and__6007__auto____$2;
}
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__6007__auto__ = (function (){var G__10586 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10586) : p1.call(null,G__10586));
})();
if(cljs.core.truth_(and__6007__auto__)){
var and__6007__auto____$1 = (function (){var G__10588 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10588) : p2.call(null,G__10588));
})();
if(cljs.core.truth_(and__6007__auto____$1)){
var and__6007__auto____$2 = (function (){var G__10590 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10590) : p3.call(null,G__10590));
})();
if(cljs.core.truth_(and__6007__auto____$2)){
var and__6007__auto____$3 = (function (){var G__10592 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10592) : p1.call(null,G__10592));
})();
if(cljs.core.truth_(and__6007__auto____$3)){
var and__6007__auto____$4 = (function (){var G__10594 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10594) : p2.call(null,G__10594));
})();
if(cljs.core.truth_(and__6007__auto____$4)){
var and__6007__auto____$5 = (function (){var G__10596 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10596) : p3.call(null,G__10596));
})();
if(cljs.core.truth_(and__6007__auto____$5)){
var and__6007__auto____$6 = (function (){var G__10598 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10598) : p1.call(null,G__10598));
})();
if(cljs.core.truth_(and__6007__auto____$6)){
var and__6007__auto____$7 = (function (){var G__10600 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10600) : p2.call(null,G__10600));
})();
if(cljs.core.truth_(and__6007__auto____$7)){
var G__10601 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10601) : p3.call(null,G__10601));
} else {
return and__6007__auto____$7;
}
} else {
return and__6007__auto____$6;
}
} else {
return and__6007__auto____$5;
}
} else {
return and__6007__auto____$4;
}
} else {
return and__6007__auto____$3;
}
} else {
return and__6007__auto____$2;
}
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__10646__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__10247_SHARP_){
var and__6007__auto__ = (function (){var G__10608 = p1__10247_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10608) : p1.call(null,G__10608));
})();
if(cljs.core.truth_(and__6007__auto__)){
var and__6007__auto____$1 = (function (){var G__10610 = p1__10247_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10610) : p2.call(null,G__10610));
})();
if(cljs.core.truth_(and__6007__auto____$1)){
var G__10611 = p1__10247_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10611) : p3.call(null,G__10611));
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
}),args)));
};
var G__10646 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10647__i = 0, G__10647__a = new Array(arguments.length -  3);
while (G__10647__i < G__10647__a.length) {G__10647__a[G__10647__i] = arguments[G__10647__i + 3]; ++G__10647__i;}
  args = new cljs.core.IndexedSeq(G__10647__a,0);
} 
return G__10646__delegate.call(this,x,y,z,args);};
G__10646.cljs$lang$maxFixedArity = 3;
G__10646.cljs$lang$applyTo = (function (arglist__10648){
var x = cljs.core.first(arglist__10648);
arglist__10648 = cljs.core.next(arglist__10648);
var y = cljs.core.first(arglist__10648);
arglist__10648 = cljs.core.next(arglist__10648);
var z = cljs.core.first(arglist__10648);
var args = cljs.core.rest(arglist__10648);
return G__10646__delegate(x,y,z,args);
});
G__10646.cljs$core$IFn$_invoke$arity$variadic = G__10646__delegate;
return G__10646;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__10649 = null;
if (arguments.length > 3) {
var G__10650__i = 0, G__10650__a = new Array(arguments.length -  3);
while (G__10650__i < G__10650__a.length) {G__10650__a[G__10650__i] = arguments[G__10650__i + 3]; ++G__10650__i;}
G__10649 = new cljs.core.IndexedSeq(G__10650__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__10651__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10248_SHARP_){
var G__10627 = x;
return (p1__10248_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10248_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10627) : p1__10248_SHARP_.call(null,G__10627));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10249_SHARP_){
var and__6007__auto__ = (function (){var G__10629 = x;
return (p1__10249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10249_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10629) : p1__10249_SHARP_.call(null,G__10629));
})();
if(cljs.core.truth_(and__6007__auto__)){
var G__10630 = y;
return (p1__10249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10249_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10630) : p1__10249_SHARP_.call(null,G__10630));
} else {
return and__6007__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10250_SHARP_){
var and__6007__auto__ = (function (){var G__10632 = x;
return (p1__10250_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10250_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10632) : p1__10250_SHARP_.call(null,G__10632));
})();
if(cljs.core.truth_(and__6007__auto__)){
var and__6007__auto____$1 = (function (){var G__10634 = y;
return (p1__10250_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10250_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10634) : p1__10250_SHARP_.call(null,G__10634));
})();
if(cljs.core.truth_(and__6007__auto____$1)){
var G__10635 = z;
return (p1__10250_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10250_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10635) : p1__10250_SHARP_.call(null,G__10635));
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__10652__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10251_SHARP_){
return cljs.core.every_QMARK_(p1__10251_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__10652 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10653__i = 0, G__10653__a = new Array(arguments.length -  3);
while (G__10653__i < G__10653__a.length) {G__10653__a[G__10653__i] = arguments[G__10653__i + 3]; ++G__10653__i;}
  args = new cljs.core.IndexedSeq(G__10653__a,0);
} 
return G__10652__delegate.call(this,x,y,z,args);};
G__10652.cljs$lang$maxFixedArity = 3;
G__10652.cljs$lang$applyTo = (function (arglist__10654){
var x = cljs.core.first(arglist__10654);
arglist__10654 = cljs.core.next(arglist__10654);
var y = cljs.core.first(arglist__10654);
arglist__10654 = cljs.core.next(arglist__10654);
var z = cljs.core.first(arglist__10654);
var args = cljs.core.rest(arglist__10654);
return G__10652__delegate(x,y,z,args);
});
G__10652.cljs$core$IFn$_invoke$arity$variadic = G__10652__delegate;
return G__10652;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__10655 = null;
if (arguments.length > 3) {
var G__10656__i = 0, G__10656__a = new Array(arguments.length -  3);
while (G__10656__i < G__10656__a.length) {G__10656__a[G__10656__i] = arguments[G__10656__i + 3]; ++G__10656__i;}
G__10655 = new cljs.core.IndexedSeq(G__10656__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__10651 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10657__i = 0, G__10657__a = new Array(arguments.length -  3);
while (G__10657__i < G__10657__a.length) {G__10657__a[G__10657__i] = arguments[G__10657__i + 3]; ++G__10657__i;}
  ps = new cljs.core.IndexedSeq(G__10657__a,0);
} 
return G__10651__delegate.call(this,p1,p2,p3,ps);};
G__10651.cljs$lang$maxFixedArity = 3;
G__10651.cljs$lang$applyTo = (function (arglist__10658){
var p1 = cljs.core.first(arglist__10658);
arglist__10658 = cljs.core.next(arglist__10658);
var p2 = cljs.core.first(arglist__10658);
arglist__10658 = cljs.core.next(arglist__10658);
var p3 = cljs.core.first(arglist__10658);
var ps = cljs.core.rest(arglist__10658);
return G__10651__delegate(p1,p2,p3,ps);
});
G__10651.cljs$core$IFn$_invoke$arity$variadic = G__10651__delegate;
return G__10651;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__10659 = null;
if (arguments.length > 3) {
var G__10660__i = 0, G__10660__a = new Array(arguments.length -  3);
while (G__10660__i < G__10660__a.length) {G__10660__a[G__10660__i] = arguments[G__10660__i + 3]; ++G__10660__i;}
G__10659 = new cljs.core.IndexedSeq(G__10660__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10659);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__10866 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10866) : p.call(null,G__10866));
});
var sp1__2 = (function (x,y){
var or__6019__auto__ = (function (){var G__10868 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10868) : p.call(null,G__10868));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var G__10869 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10869) : p.call(null,G__10869));
}
});
var sp1__3 = (function (x,y,z){
var or__6019__auto__ = (function (){var G__10871 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10871) : p.call(null,G__10871));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (function (){var G__10873 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10873) : p.call(null,G__10873));
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var G__10874 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10874) : p.call(null,G__10874));
}
}
});
var sp1__4 = (function() { 
var G__11035__delegate = function (x,y,z,args){
var or__6019__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__11035 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11036__i = 0, G__11036__a = new Array(arguments.length -  3);
while (G__11036__i < G__11036__a.length) {G__11036__a[G__11036__i] = arguments[G__11036__i + 3]; ++G__11036__i;}
  args = new cljs.core.IndexedSeq(G__11036__a,0);
} 
return G__11035__delegate.call(this,x,y,z,args);};
G__11035.cljs$lang$maxFixedArity = 3;
G__11035.cljs$lang$applyTo = (function (arglist__11037){
var x = cljs.core.first(arglist__11037);
arglist__11037 = cljs.core.next(arglist__11037);
var y = cljs.core.first(arglist__11037);
arglist__11037 = cljs.core.next(arglist__11037);
var z = cljs.core.first(arglist__11037);
var args = cljs.core.rest(arglist__11037);
return G__11035__delegate(x,y,z,args);
});
G__11035.cljs$core$IFn$_invoke$arity$variadic = G__11035__delegate;
return G__11035;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__11038 = null;
if (arguments.length > 3) {
var G__11039__i = 0, G__11039__a = new Array(arguments.length -  3);
while (G__11039__i < G__11039__a.length) {G__11039__a[G__11039__i] = arguments[G__11039__i + 3]; ++G__11039__i;}
G__11038 = new cljs.core.IndexedSeq(G__11039__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__6019__auto__ = (function (){var G__10906 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10906) : p1.call(null,G__10906));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var G__10907 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10907) : p2.call(null,G__10907));
}
});
var sp2__2 = (function (x,y){
var or__6019__auto__ = (function (){var G__10909 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10909) : p1.call(null,G__10909));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (function (){var G__10911 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10911) : p1.call(null,G__10911));
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var or__6019__auto____$2 = (function (){var G__10913 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10913) : p2.call(null,G__10913));
})();
if(cljs.core.truth_(or__6019__auto____$2)){
return or__6019__auto____$2;
} else {
var G__10914 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10914) : p2.call(null,G__10914));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__6019__auto__ = (function (){var G__10916 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10916) : p1.call(null,G__10916));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (function (){var G__10918 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10918) : p1.call(null,G__10918));
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var or__6019__auto____$2 = (function (){var G__10920 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10920) : p1.call(null,G__10920));
})();
if(cljs.core.truth_(or__6019__auto____$2)){
return or__6019__auto____$2;
} else {
var or__6019__auto____$3 = (function (){var G__10922 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10922) : p2.call(null,G__10922));
})();
if(cljs.core.truth_(or__6019__auto____$3)){
return or__6019__auto____$3;
} else {
var or__6019__auto____$4 = (function (){var G__10924 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10924) : p2.call(null,G__10924));
})();
if(cljs.core.truth_(or__6019__auto____$4)){
return or__6019__auto____$4;
} else {
var G__10925 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10925) : p2.call(null,G__10925));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__11040__delegate = function (x,y,z,args){
var or__6019__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return cljs.core.some(((function (or__6019__auto__){
return (function (p1__10661_SHARP_){
var or__6019__auto____$1 = (function (){var G__10927 = p1__10661_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10927) : p1.call(null,G__10927));
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var G__10928 = p1__10661_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10928) : p2.call(null,G__10928));
}
});})(or__6019__auto__))
,args);
}
};
var G__11040 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11041__i = 0, G__11041__a = new Array(arguments.length -  3);
while (G__11041__i < G__11041__a.length) {G__11041__a[G__11041__i] = arguments[G__11041__i + 3]; ++G__11041__i;}
  args = new cljs.core.IndexedSeq(G__11041__a,0);
} 
return G__11040__delegate.call(this,x,y,z,args);};
G__11040.cljs$lang$maxFixedArity = 3;
G__11040.cljs$lang$applyTo = (function (arglist__11042){
var x = cljs.core.first(arglist__11042);
arglist__11042 = cljs.core.next(arglist__11042);
var y = cljs.core.first(arglist__11042);
arglist__11042 = cljs.core.next(arglist__11042);
var z = cljs.core.first(arglist__11042);
var args = cljs.core.rest(arglist__11042);
return G__11040__delegate(x,y,z,args);
});
G__11040.cljs$core$IFn$_invoke$arity$variadic = G__11040__delegate;
return G__11040;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__11043 = null;
if (arguments.length > 3) {
var G__11044__i = 0, G__11044__a = new Array(arguments.length -  3);
while (G__11044__i < G__11044__a.length) {G__11044__a[G__11044__i] = arguments[G__11044__i + 3]; ++G__11044__i;}
G__11043 = new cljs.core.IndexedSeq(G__11044__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__6019__auto__ = (function (){var G__10974 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10974) : p1.call(null,G__10974));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (function (){var G__10976 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10976) : p2.call(null,G__10976));
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var G__10977 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10977) : p3.call(null,G__10977));
}
}
});
var sp3__2 = (function (x,y){
var or__6019__auto__ = (function (){var G__10979 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10979) : p1.call(null,G__10979));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (function (){var G__10981 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10981) : p2.call(null,G__10981));
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var or__6019__auto____$2 = (function (){var G__10983 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10983) : p3.call(null,G__10983));
})();
if(cljs.core.truth_(or__6019__auto____$2)){
return or__6019__auto____$2;
} else {
var or__6019__auto____$3 = (function (){var G__10985 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10985) : p1.call(null,G__10985));
})();
if(cljs.core.truth_(or__6019__auto____$3)){
return or__6019__auto____$3;
} else {
var or__6019__auto____$4 = (function (){var G__10987 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10987) : p2.call(null,G__10987));
})();
if(cljs.core.truth_(or__6019__auto____$4)){
return or__6019__auto____$4;
} else {
var G__10988 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10988) : p3.call(null,G__10988));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__6019__auto__ = (function (){var G__10990 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10990) : p1.call(null,G__10990));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (function (){var G__10992 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10992) : p2.call(null,G__10992));
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var or__6019__auto____$2 = (function (){var G__10994 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10994) : p3.call(null,G__10994));
})();
if(cljs.core.truth_(or__6019__auto____$2)){
return or__6019__auto____$2;
} else {
var or__6019__auto____$3 = (function (){var G__10996 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10996) : p1.call(null,G__10996));
})();
if(cljs.core.truth_(or__6019__auto____$3)){
return or__6019__auto____$3;
} else {
var or__6019__auto____$4 = (function (){var G__10998 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10998) : p2.call(null,G__10998));
})();
if(cljs.core.truth_(or__6019__auto____$4)){
return or__6019__auto____$4;
} else {
var or__6019__auto____$5 = (function (){var G__11000 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11000) : p3.call(null,G__11000));
})();
if(cljs.core.truth_(or__6019__auto____$5)){
return or__6019__auto____$5;
} else {
var or__6019__auto____$6 = (function (){var G__11002 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11002) : p1.call(null,G__11002));
})();
if(cljs.core.truth_(or__6019__auto____$6)){
return or__6019__auto____$6;
} else {
var or__6019__auto____$7 = (function (){var G__11004 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11004) : p2.call(null,G__11004));
})();
if(cljs.core.truth_(or__6019__auto____$7)){
return or__6019__auto____$7;
} else {
var G__11005 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11005) : p3.call(null,G__11005));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__11045__delegate = function (x,y,z,args){
var or__6019__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return cljs.core.some(((function (or__6019__auto__){
return (function (p1__10662_SHARP_){
var or__6019__auto____$1 = (function (){var G__11007 = p1__10662_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11007) : p1.call(null,G__11007));
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var or__6019__auto____$2 = (function (){var G__11009 = p1__10662_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11009) : p2.call(null,G__11009));
})();
if(cljs.core.truth_(or__6019__auto____$2)){
return or__6019__auto____$2;
} else {
var G__11010 = p1__10662_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11010) : p3.call(null,G__11010));
}
}
});})(or__6019__auto__))
,args);
}
};
var G__11045 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11046__i = 0, G__11046__a = new Array(arguments.length -  3);
while (G__11046__i < G__11046__a.length) {G__11046__a[G__11046__i] = arguments[G__11046__i + 3]; ++G__11046__i;}
  args = new cljs.core.IndexedSeq(G__11046__a,0);
} 
return G__11045__delegate.call(this,x,y,z,args);};
G__11045.cljs$lang$maxFixedArity = 3;
G__11045.cljs$lang$applyTo = (function (arglist__11047){
var x = cljs.core.first(arglist__11047);
arglist__11047 = cljs.core.next(arglist__11047);
var y = cljs.core.first(arglist__11047);
arglist__11047 = cljs.core.next(arglist__11047);
var z = cljs.core.first(arglist__11047);
var args = cljs.core.rest(arglist__11047);
return G__11045__delegate(x,y,z,args);
});
G__11045.cljs$core$IFn$_invoke$arity$variadic = G__11045__delegate;
return G__11045;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__11048 = null;
if (arguments.length > 3) {
var G__11049__i = 0, G__11049__a = new Array(arguments.length -  3);
while (G__11049__i < G__11049__a.length) {G__11049__a[G__11049__i] = arguments[G__11049__i + 3]; ++G__11049__i;}
G__11048 = new cljs.core.IndexedSeq(G__11049__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__11050__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__10663_SHARP_){
var G__11026 = x;
return (p1__10663_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10663_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11026) : p1__10663_SHARP_.call(null,G__11026));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__10664_SHARP_){
var or__6019__auto__ = (function (){var G__11028 = x;
return (p1__10664_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10664_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11028) : p1__10664_SHARP_.call(null,G__11028));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var G__11029 = y;
return (p1__10664_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10664_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11029) : p1__10664_SHARP_.call(null,G__11029));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__10665_SHARP_){
var or__6019__auto__ = (function (){var G__11031 = x;
return (p1__10665_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10665_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11031) : p1__10665_SHARP_.call(null,G__11031));
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (function (){var G__11033 = y;
return (p1__10665_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10665_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11033) : p1__10665_SHARP_.call(null,G__11033));
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var G__11034 = z;
return (p1__10665_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10665_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11034) : p1__10665_SHARP_.call(null,G__11034));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__11051__delegate = function (x,y,z,args){
var or__6019__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return cljs.core.some(((function (or__6019__auto__,ps__$1){
return (function (p1__10666_SHARP_){
return cljs.core.some(p1__10666_SHARP_,args);
});})(or__6019__auto__,ps__$1))
,ps__$1);
}
};
var G__11051 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11052__i = 0, G__11052__a = new Array(arguments.length -  3);
while (G__11052__i < G__11052__a.length) {G__11052__a[G__11052__i] = arguments[G__11052__i + 3]; ++G__11052__i;}
  args = new cljs.core.IndexedSeq(G__11052__a,0);
} 
return G__11051__delegate.call(this,x,y,z,args);};
G__11051.cljs$lang$maxFixedArity = 3;
G__11051.cljs$lang$applyTo = (function (arglist__11053){
var x = cljs.core.first(arglist__11053);
arglist__11053 = cljs.core.next(arglist__11053);
var y = cljs.core.first(arglist__11053);
arglist__11053 = cljs.core.next(arglist__11053);
var z = cljs.core.first(arglist__11053);
var args = cljs.core.rest(arglist__11053);
return G__11051__delegate(x,y,z,args);
});
G__11051.cljs$core$IFn$_invoke$arity$variadic = G__11051__delegate;
return G__11051;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__11054 = null;
if (arguments.length > 3) {
var G__11055__i = 0, G__11055__a = new Array(arguments.length -  3);
while (G__11055__i < G__11055__a.length) {G__11055__a[G__11055__i] = arguments[G__11055__i + 3]; ++G__11055__i;}
G__11054 = new cljs.core.IndexedSeq(G__11055__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11054);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__11050 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__11056__i = 0, G__11056__a = new Array(arguments.length -  3);
while (G__11056__i < G__11056__a.length) {G__11056__a[G__11056__i] = arguments[G__11056__i + 3]; ++G__11056__i;}
  ps = new cljs.core.IndexedSeq(G__11056__a,0);
} 
return G__11050__delegate.call(this,p1,p2,p3,ps);};
G__11050.cljs$lang$maxFixedArity = 3;
G__11050.cljs$lang$applyTo = (function (arglist__11057){
var p1 = cljs.core.first(arglist__11057);
arglist__11057 = cljs.core.next(arglist__11057);
var p2 = cljs.core.first(arglist__11057);
arglist__11057 = cljs.core.next(arglist__11057);
var p3 = cljs.core.first(arglist__11057);
var ps = cljs.core.rest(arglist__11057);
return G__11050__delegate(p1,p2,p3,ps);
});
G__11050.cljs$core$IFn$_invoke$arity$variadic = G__11050__delegate;
return G__11050;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__11058 = null;
if (arguments.length > 3) {
var G__11059__i = 0, G__11059__a = new Array(arguments.length -  3);
while (G__11059__i < G__11059__a.length) {G__11059__a[G__11059__i] = arguments[G__11059__i + 3]; ++G__11059__i;}
G__11058 = new cljs.core.IndexedSeq(G__11059__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__11058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__11114 = null;
var G__11114__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11114__1 = (function (result){
var G__11100 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11100) : rf.call(null,G__11100));
});
var G__11114__2 = (function (result,input){
var G__11101 = result;
var G__11102 = (function (){var G__11103 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11103) : f.call(null,G__11103));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11101,G__11102) : rf.call(null,G__11101,G__11102));
});
var G__11114__3 = (function() { 
var G__11115__delegate = function (result,input,inputs){
var G__11104 = result;
var G__11105 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11104,G__11105) : rf.call(null,G__11104,G__11105));
};
var G__11115 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__11116__i = 0, G__11116__a = new Array(arguments.length -  2);
while (G__11116__i < G__11116__a.length) {G__11116__a[G__11116__i] = arguments[G__11116__i + 2]; ++G__11116__i;}
  inputs = new cljs.core.IndexedSeq(G__11116__a,0);
} 
return G__11115__delegate.call(this,result,input,inputs);};
G__11115.cljs$lang$maxFixedArity = 2;
G__11115.cljs$lang$applyTo = (function (arglist__11117){
var result = cljs.core.first(arglist__11117);
arglist__11117 = cljs.core.next(arglist__11117);
var input = cljs.core.first(arglist__11117);
var inputs = cljs.core.rest(arglist__11117);
return G__11115__delegate(result,input,inputs);
});
G__11115.cljs$core$IFn$_invoke$arity$variadic = G__11115__delegate;
return G__11115;
})()
;
G__11114 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__11114__0.call(this);
case 1:
return G__11114__1.call(this,result);
case 2:
return G__11114__2.call(this,result,input);
default:
var G__11118 = null;
if (arguments.length > 2) {
var G__11119__i = 0, G__11119__a = new Array(arguments.length -  2);
while (G__11119__i < G__11119__a.length) {G__11119__a[G__11119__i] = arguments[G__11119__i + 2]; ++G__11119__i;}
G__11118 = new cljs.core.IndexedSeq(G__11119__a,0);
}
return G__11114__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__11118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11114.cljs$lang$maxFixedArity = 2;
G__11114.cljs$lang$applyTo = G__11114__3.cljs$lang$applyTo;
G__11114.cljs$core$IFn$_invoke$arity$0 = G__11114__0;
G__11114.cljs$core$IFn$_invoke$arity$1 = G__11114__1;
G__11114.cljs$core$IFn$_invoke$arity$2 = G__11114__2;
G__11114.cljs$core$IFn$_invoke$arity$variadic = G__11114__3.cljs$core$IFn$_invoke$arity$variadic;
return G__11114;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6906__auto___11120 = size;
var i_11121 = (0);
while(true){
if((i_11121 < n__6906__auto___11120)){
cljs.core.chunk_append(b,(function (){var G__11106 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11121);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11106) : f.call(null,G__11106));
})());

var G__11122 = (i_11121 + (1));
i_11121 = G__11122;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__11107 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11107) : f.call(null,G__11107));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__11108 = cljs.core.first(s1);
var G__11109 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11108,G__11109) : f.call(null,G__11108,G__11109));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__11110 = cljs.core.first(s1);
var G__11111 = cljs.core.first(s2);
var G__11112 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11110,G__11111,G__11112) : f.call(null,G__11110,G__11111,G__11112));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__11123__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__11060_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__11060_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__11123 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__11124__i = 0, G__11124__a = new Array(arguments.length -  4);
while (G__11124__i < G__11124__a.length) {G__11124__a[G__11124__i] = arguments[G__11124__i + 4]; ++G__11124__i;}
  colls = new cljs.core.IndexedSeq(G__11124__a,0);
} 
return G__11123__delegate.call(this,f,c1,c2,c3,colls);};
G__11123.cljs$lang$maxFixedArity = 4;
G__11123.cljs$lang$applyTo = (function (arglist__11125){
var f = cljs.core.first(arglist__11125);
arglist__11125 = cljs.core.next(arglist__11125);
var c1 = cljs.core.first(arglist__11125);
arglist__11125 = cljs.core.next(arglist__11125);
var c2 = cljs.core.first(arglist__11125);
arglist__11125 = cljs.core.next(arglist__11125);
var c3 = cljs.core.first(arglist__11125);
var colls = cljs.core.rest(arglist__11125);
return G__11123__delegate(f,c1,c2,c3,colls);
});
G__11123.cljs$core$IFn$_invoke$arity$variadic = G__11123__delegate;
return G__11123;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__11126 = null;
if (arguments.length > 4) {
var G__11127__i = 0, G__11127__a = new Array(arguments.length -  4);
while (G__11127__i < G__11127__a.length) {G__11127__a[G__11127__i] = arguments[G__11127__i + 4]; ++G__11127__i;}
G__11126 = new cljs.core.IndexedSeq(G__11127__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__11126);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__11136 = null;
var G__11136__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11136__1 = (function (result){
var G__11133 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11133) : rf.call(null,G__11133));
});
var G__11136__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__11134 = result;
var G__11135 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11134,G__11135) : rf.call(null,G__11134,G__11135));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__11136 = function(result,input){
switch(arguments.length){
case 0:
return G__11136__0.call(this);
case 1:
return G__11136__1.call(this,result);
case 2:
return G__11136__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11136.cljs$core$IFn$_invoke$arity$0 = G__11136__0;
G__11136.cljs$core$IFn$_invoke$arity$1 = G__11136__1;
G__11136.cljs$core$IFn$_invoke$arity$2 = G__11136__2;
return G__11136;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__11143 = null;
var G__11143__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11143__1 = (function (result){
var G__11140 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11140) : rf.call(null,G__11140));
});
var G__11143__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__11141 = result;
var G__11142 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11141,G__11142) : rf.call(null,G__11141,G__11142));
}
});
G__11143 = function(result,input){
switch(arguments.length){
case 0:
return G__11143__0.call(this);
case 1:
return G__11143__1.call(this,result);
case 2:
return G__11143__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11143.cljs$core$IFn$_invoke$arity$0 = G__11143__0;
G__11143.cljs$core$IFn$_invoke$arity$1 = G__11143__1;
G__11143.cljs$core$IFn$_invoke$arity$2 = G__11143__2;
return G__11143;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__11144 = (n__$1 - (1));
var G__11145 = cljs.core.rest(s);
n__$1 = G__11144;
coll__$1 = G__11145;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__11148 = cljs.core.next(s);
var G__11149 = cljs.core.next(lead);
s = G__11148;
lead = G__11149;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__11162 = null;
var G__11162__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11162__1 = (function (result){
var G__11156 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11156) : rf.call(null,G__11156));
});
var G__11162__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__6007__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__6007__auto__)){
var G__11157 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11157) : pred.call(null,G__11157));
} else {
return and__6007__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__11158 = result;
var G__11159 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11158,G__11159) : rf.call(null,G__11158,G__11159));
}
});
G__11162 = function(result,input){
switch(arguments.length){
case 0:
return G__11162__0.call(this);
case 1:
return G__11162__1.call(this,result);
case 2:
return G__11162__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11162.cljs$core$IFn$_invoke$arity$0 = G__11162__0;
G__11162.cljs$core$IFn$_invoke$arity$1 = G__11162__1;
G__11162.cljs$core$IFn$_invoke$arity$2 = G__11162__2;
return G__11162;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__6007__auto__ = s;
if(and__6007__auto__){
var G__11161 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__11161) : pred__$1.call(null,G__11161));
} else {
return and__6007__auto__;
}
})())){
var G__11163 = pred__$1;
var G__11164 = cljs.core.rest(s);
pred__$1 = G__11163;
coll__$1 = G__11164;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__11173 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11173) : f.call(null,G__11173));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__11176__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__11176 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__11177__i = 0, G__11177__a = new Array(arguments.length -  2);
while (G__11177__i < G__11177__a.length) {G__11177__a[G__11177__i] = arguments[G__11177__i + 2]; ++G__11177__i;}
  colls = new cljs.core.IndexedSeq(G__11177__a,0);
} 
return G__11176__delegate.call(this,c1,c2,colls);};
G__11176.cljs$lang$maxFixedArity = 2;
G__11176.cljs$lang$applyTo = (function (arglist__11178){
var c1 = cljs.core.first(arglist__11178);
arglist__11178 = cljs.core.next(arglist__11178);
var c2 = cljs.core.first(arglist__11178);
var colls = cljs.core.rest(arglist__11178);
return G__11176__delegate(c1,c2,colls);
});
G__11176.cljs$core$IFn$_invoke$arity$variadic = G__11176__delegate;
return G__11176;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__11179 = null;
if (arguments.length > 2) {
var G__11180__i = 0, G__11180__a = new Array(arguments.length -  2);
while (G__11180__i < G__11180__a.length) {G__11180__a[G__11180__i] = arguments[G__11180__i + 2]; ++G__11180__i;}
G__11179 = new cljs.core.IndexedSeq(G__11180__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__11179);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__11195 = null;
var G__11195__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11195__1 = (function (result){
var G__11188 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11188) : rf.call(null,G__11188));
});
var G__11195__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__11189 = result;
var G__11190 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11189,G__11190) : rf.call(null,G__11189,G__11190));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__11191 = sepr;
var G__11192 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11191,G__11192) : rf.call(null,G__11191,G__11192));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__11193 = result;
var G__11194 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11193,G__11194) : rf.call(null,G__11193,G__11194));
}
});
G__11195 = function(result,input){
switch(arguments.length){
case 0:
return G__11195__0.call(this);
case 1:
return G__11195__1.call(this,result);
case 2:
return G__11195__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11195.cljs$core$IFn$_invoke$arity$0 = G__11195__0;
G__11195.cljs$core$IFn$_invoke$arity$1 = G__11195__1;
G__11195.cljs$core$IFn$_invoke$arity$2 = G__11195__2;
return G__11195;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__11204__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__11204 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__11205__i = 0, G__11205__a = new Array(arguments.length -  1);
while (G__11205__i < G__11205__a.length) {G__11205__a[G__11205__i] = arguments[G__11205__i + 1]; ++G__11205__i;}
  colls = new cljs.core.IndexedSeq(G__11205__a,0);
} 
return G__11204__delegate.call(this,f,colls);};
G__11204.cljs$lang$maxFixedArity = 1;
G__11204.cljs$lang$applyTo = (function (arglist__11206){
var f = cljs.core.first(arglist__11206);
var colls = cljs.core.rest(arglist__11206);
return G__11204__delegate(f,colls);
});
G__11204.cljs$core$IFn$_invoke$arity$variadic = G__11204__delegate;
return G__11204;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__11207 = null;
if (arguments.length > 1) {
var G__11208__i = 0, G__11208__a = new Array(arguments.length -  1);
while (G__11208__i < G__11208__a.length) {G__11208__a[G__11208__i] = arguments[G__11208__i + 1]; ++G__11208__i;}
G__11207 = new cljs.core.IndexedSeq(G__11208__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__11227 = null;
var G__11227__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11227__1 = (function (result){
var G__11221 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11221) : rf.call(null,G__11221));
});
var G__11227__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__11222 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11222) : pred.call(null,G__11222));
})())){
var G__11223 = result;
var G__11224 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11223,G__11224) : rf.call(null,G__11223,G__11224));
} else {
return result;
}
});
G__11227 = function(result,input){
switch(arguments.length){
case 0:
return G__11227__0.call(this);
case 1:
return G__11227__1.call(this,result);
case 2:
return G__11227__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11227.cljs$core$IFn$_invoke$arity$0 = G__11227__0;
G__11227.cljs$core$IFn$_invoke$arity$1 = G__11227__1;
G__11227.cljs$core$IFn$_invoke$arity$2 = G__11227__2;
return G__11227;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6906__auto___11228 = size;
var i_11229 = (0);
while(true){
if((i_11229 < n__6906__auto___11228)){
if(cljs.core.truth_((function (){var G__11225 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11229);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11225) : pred.call(null,G__11225));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11229));
} else {
}

var G__11230 = (i_11229 + (1));
i_11229 = G__11230;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__11226 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11226) : pred.call(null,G__11226));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__11237 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__11237) : branch_QMARK_.call(null,G__11237));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__11238 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__11238) : children.call(null,G__11238));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__11239_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__11239_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__11242 = to;
if(G__11242){
var bit__6693__auto__ = (G__11242.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__6693__auto__) || (G__11242.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__11243 = to;
if(G__11243){
var bit__6693__auto__ = (G__11243.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__6693__auto__) || (G__11243.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__11245 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11245) : f.call(null,G__11245));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__11246__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__11246 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__11247__i = 0, G__11247__a = new Array(arguments.length -  4);
while (G__11247__i < G__11247__a.length) {G__11247__a[G__11247__i] = arguments[G__11247__i + 4]; ++G__11247__i;}
  colls = new cljs.core.IndexedSeq(G__11247__a,0);
} 
return G__11246__delegate.call(this,f,c1,c2,c3,colls);};
G__11246.cljs$lang$maxFixedArity = 4;
G__11246.cljs$lang$applyTo = (function (arglist__11248){
var f = cljs.core.first(arglist__11248);
arglist__11248 = cljs.core.next(arglist__11248);
var c1 = cljs.core.first(arglist__11248);
arglist__11248 = cljs.core.next(arglist__11248);
var c2 = cljs.core.first(arglist__11248);
arglist__11248 = cljs.core.next(arglist__11248);
var c3 = cljs.core.first(arglist__11248);
var colls = cljs.core.rest(arglist__11248);
return G__11246__delegate(f,c1,c2,c3,colls);
});
G__11246.cljs$core$IFn$_invoke$arity$variadic = G__11246__delegate;
return G__11246;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__11249 = null;
if (arguments.length > 4) {
var G__11250__i = 0, G__11250__a = new Array(arguments.length -  4);
while (G__11250__i < G__11250__a.length) {G__11250__a[G__11250__i] = arguments[G__11250__i + 4]; ++G__11250__i;}
G__11249 = new cljs.core.IndexedSeq(G__11250__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__11249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__11252 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11252) : pred.call(null,G__11252));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__11267 = m__$1;
if(G__11267){
var bit__6700__auto__ = (G__11267.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6700__auto__) || (G__11267.cljs$core$ILookup$)){
return true;
} else {
if((!G__11267.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__11267);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__11267);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__11268 = sentinel;
var G__11269 = m__$2;
var G__11270 = cljs.core.next(ks__$1);
sentinel = G__11268;
m__$1 = G__11269;
ks__$1 = G__11270;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__11271,v){
var vec__11276 = p__11271;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11276,(0),null);
var ks = cljs.core.nthnext(vec__11276,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__11277,f){
var vec__11315 = p__11277;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11315,(0),null);
var ks = cljs.core.nthnext(vec__11315,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11316 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11316) : f.call(null,G__11316));
})());
}
});
var update_in__4 = (function (m,p__11278,f,a){
var vec__11317 = p__11278;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11317,(0),null);
var ks = cljs.core.nthnext(vec__11317,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11318 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11319 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11318,G__11319) : f.call(null,G__11318,G__11319));
})());
}
});
var update_in__5 = (function (m,p__11279,f,a,b){
var vec__11320 = p__11279;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11320,(0),null);
var ks = cljs.core.nthnext(vec__11320,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11321 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11322 = a;
var G__11323 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11321,G__11322,G__11323) : f.call(null,G__11321,G__11322,G__11323));
})());
}
});
var update_in__6 = (function (m,p__11280,f,a,b,c){
var vec__11324 = p__11280;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11324,(0),null);
var ks = cljs.core.nthnext(vec__11324,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11325 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11326 = a;
var G__11327 = b;
var G__11328 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11325,G__11326,G__11327,G__11328) : f.call(null,G__11325,G__11326,G__11327,G__11328));
})());
}
});
var update_in__7 = (function() { 
var G__11330__delegate = function (m,p__11281,f,a,b,c,args){
var vec__11329 = p__11281;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11329,(0),null);
var ks = cljs.core.nthnext(vec__11329,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__11330 = function (m,p__11281,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__11331__i = 0, G__11331__a = new Array(arguments.length -  6);
while (G__11331__i < G__11331__a.length) {G__11331__a[G__11331__i] = arguments[G__11331__i + 6]; ++G__11331__i;}
  args = new cljs.core.IndexedSeq(G__11331__a,0);
} 
return G__11330__delegate.call(this,m,p__11281,f,a,b,c,args);};
G__11330.cljs$lang$maxFixedArity = 6;
G__11330.cljs$lang$applyTo = (function (arglist__11332){
var m = cljs.core.first(arglist__11332);
arglist__11332 = cljs.core.next(arglist__11332);
var p__11281 = cljs.core.first(arglist__11332);
arglist__11332 = cljs.core.next(arglist__11332);
var f = cljs.core.first(arglist__11332);
arglist__11332 = cljs.core.next(arglist__11332);
var a = cljs.core.first(arglist__11332);
arglist__11332 = cljs.core.next(arglist__11332);
var b = cljs.core.first(arglist__11332);
arglist__11332 = cljs.core.next(arglist__11332);
var c = cljs.core.first(arglist__11332);
var args = cljs.core.rest(arglist__11332);
return G__11330__delegate(m,p__11281,f,a,b,c,args);
});
G__11330.cljs$core$IFn$_invoke$arity$variadic = G__11330__delegate;
return G__11330;
})()
;
update_in = function(m,p__11281,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__11281,f);
case 4:
return update_in__4.call(this,m,p__11281,f,a);
case 5:
return update_in__5.call(this,m,p__11281,f,a,b);
case 6:
return update_in__6.call(this,m,p__11281,f,a,b,c);
default:
var G__11333 = null;
if (arguments.length > 6) {
var G__11334__i = 0, G__11334__a = new Array(arguments.length -  6);
while (G__11334__i < G__11334__a.length) {G__11334__a[G__11334__i] = arguments[G__11334__i + 6]; ++G__11334__i;}
G__11333 = new cljs.core.IndexedSeq(G__11334__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__11281,f,a,b,c, G__11333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11345 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11345) : f.call(null,G__11345));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11346 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11347 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11346,G__11347) : f.call(null,G__11346,G__11347));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11348 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11349 = x;
var G__11350 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11348,G__11349,G__11350) : f.call(null,G__11348,G__11349,G__11350));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11351 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11352 = x;
var G__11353 = y;
var G__11354 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11351,G__11352,G__11353,G__11354) : f.call(null,G__11351,G__11352,G__11353,G__11354));
})());
});
var update__7 = (function() { 
var G__11355__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__11355 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__11356__i = 0, G__11356__a = new Array(arguments.length -  6);
while (G__11356__i < G__11356__a.length) {G__11356__a[G__11356__i] = arguments[G__11356__i + 6]; ++G__11356__i;}
  more = new cljs.core.IndexedSeq(G__11356__a,0);
} 
return G__11355__delegate.call(this,m,k,f,x,y,z,more);};
G__11355.cljs$lang$maxFixedArity = 6;
G__11355.cljs$lang$applyTo = (function (arglist__11357){
var m = cljs.core.first(arglist__11357);
arglist__11357 = cljs.core.next(arglist__11357);
var k = cljs.core.first(arglist__11357);
arglist__11357 = cljs.core.next(arglist__11357);
var f = cljs.core.first(arglist__11357);
arglist__11357 = cljs.core.next(arglist__11357);
var x = cljs.core.first(arglist__11357);
arglist__11357 = cljs.core.next(arglist__11357);
var y = cljs.core.first(arglist__11357);
arglist__11357 = cljs.core.next(arglist__11357);
var z = cljs.core.first(arglist__11357);
var more = cljs.core.rest(arglist__11357);
return G__11355__delegate(m,k,f,x,y,z,more);
});
G__11355.cljs$core$IFn$_invoke$arity$variadic = G__11355__delegate;
return G__11355;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__11358 = null;
if (arguments.length > 6) {
var G__11359__i = 0, G__11359__a = new Array(arguments.length -  6);
while (G__11359__i < G__11359__a.length) {G__11359__a[G__11359__i] = arguments[G__11359__i + 6]; ++G__11359__i;}
G__11358 = new cljs.core.IndexedSeq(G__11359__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__11358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__11360 = (ll - (5));
var G__11361 = r;
ll = G__11360;
ret = G__11361;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__11366 = cljs.core.pv_aget(node,(0));
var G__11367 = (level - (5));
node = G__11366;
level = G__11367;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__11368 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__11369 = (level - (5));
node = G__11368;
level = G__11369;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__11379 = init__$2;
var G__11380 = (j + i);
var G__11381 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11379,G__11380,G__11381) : f.call(null,G__11379,G__11380,G__11381));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__11392 = (j + (1));
var G__11393 = init__$3;
j = G__11392;
init__$2 = G__11393;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11382 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11382) : cljs.core.deref.call(null,G__11382));
} else {
var G__11394 = (i + len);
var G__11395 = init__$2;
i = G__11394;
init__$1 = G__11395;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__11383 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__11383) : cljs.core.tv_editable_root.call(null,G__11383));
})(),(function (){var G__11384 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__11384) : cljs.core.tv_editable_tail.call(null,G__11384));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__11385 = init__$2;
var G__11386 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11385,G__11386) : f.call(null,G__11385,G__11386));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__11396 = (j + (1));
var G__11397 = init__$3;
j = G__11396;
init__$2 = G__11397;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11387 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11387) : cljs.core.deref.call(null,G__11387));
} else {
var G__11398 = (i + len);
var G__11399 = init__$2;
i = G__11398;
init__$1 = G__11399;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__11388 = coll__$1;
var G__11389 = cljs.core.first_array_for_longvec(coll__$1);
var G__11390 = (0);
var G__11391 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11388,G__11389,G__11390,G__11391) : cljs.core.chunked_seq.call(null,G__11388,G__11389,G__11390,G__11391));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__6906__auto___11400 = len;
var i_11401 = (0);
while(true){
if((i_11401 < n__6906__auto___11400)){
(new_tail[i_11401] = (self__.tail[i_11401]));

var G__11402 = (i_11401 + (1));
i_11401 = G__11402;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__11403 = null;
var G__11403__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__11403__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__11403 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11403__2.call(this,self__,k);
case 3:
return G__11403__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11403.cljs$core$IFn$_invoke$arity$2 = G__11403__2;
G__11403.cljs$core$IFn$_invoke$arity$3 = G__11403__3;
return G__11403;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args11378){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11378)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__11404 = (i + (1));
var G__11405 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__11404;
out = G__11405;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11406__i = 0, G__11406__a = new Array(arguments.length -  0);
while (G__11406__i < G__11406__a.length) {G__11406__a[G__11406__i] = arguments[G__11406__i + 0]; ++G__11406__i;}
  args = new cljs.core.IndexedSeq(G__11406__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__11407){
var args = cljs.core.seq(arglist__11407);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__11408 = self__.vec;
var G__11409 = self__.node;
var G__11410 = self__.i;
var G__11411 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11408,G__11409,G__11410,G__11411) : cljs.core.chunked_seq.call(null,G__11408,G__11409,G__11410,G__11411));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__11412 = self__.vec;
var G__11413 = (self__.i + self__.off);
var G__11414 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11412,G__11413,G__11414) : cljs.core.subvec.call(null,G__11412,G__11413,G__11414));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__11415 = self__.vec;
var G__11416 = (self__.i + self__.off);
var G__11417 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11415,G__11416,G__11417) : cljs.core.subvec.call(null,G__11415,G__11416,G__11417));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__11418 = self__.vec;
var G__11419 = self__.node;
var G__11420 = self__.i;
var G__11421 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11418,G__11419,G__11420,G__11421) : cljs.core.chunked_seq.call(null,G__11418,G__11419,G__11420,G__11421));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__11422 = self__.vec;
var G__11423 = cljs.core.unchecked_array_for(self__.vec,end);
var G__11424 = end;
var G__11425 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11422,G__11423,G__11424,G__11425) : cljs.core.chunked_seq.call(null,G__11422,G__11423,G__11424,G__11425));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__11426 = self__.vec;
var G__11427 = self__.node;
var G__11428 = self__.i;
var G__11429 = self__.off;
var G__11430 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__11426,G__11427,G__11428,G__11429,G__11430) : cljs.core.chunked_seq.call(null,G__11426,G__11427,G__11428,G__11429,G__11430));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__11431 = self__.vec;
var G__11432 = cljs.core.unchecked_array_for(self__.vec,end);
var G__11433 = end;
var G__11434 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11431,G__11432,G__11433,G__11434) : cljs.core.chunked_seq.call(null,G__11431,G__11432,G__11433,G__11434));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__11436 = self__.meta;
var G__11437 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__11438 = self__.start;
var G__11439 = (function (){var x__6336__auto__ = self__.end;
var y__6337__auto__ = (v_pos + (1));
return ((x__6336__auto__ > y__6337__auto__) ? x__6336__auto__ : y__6337__auto__);
})();
var G__11440 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11436,G__11437,G__11438,G__11439,G__11440) : cljs.core.build_subvec.call(null,G__11436,G__11437,G__11438,G__11439,G__11440));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__11441 = self__.meta;
var G__11442 = self__.v;
var G__11443 = self__.start;
var G__11444 = (self__.end - (1));
var G__11445 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11441,G__11442,G__11443,G__11444,G__11445) : cljs.core.build_subvec.call(null,G__11441,G__11442,G__11443,G__11444,G__11445));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__11447 = meta__$1;
var G__11448 = self__.v;
var G__11449 = self__.start;
var G__11450 = self__.end;
var G__11451 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11447,G__11448,G__11449,G__11450,G__11451) : cljs.core.build_subvec.call(null,G__11447,G__11448,G__11449,G__11450,G__11451));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11452 = self__.meta;
var G__11453 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__11454 = self__.start;
var G__11455 = (self__.end + (1));
var G__11456 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11452,G__11453,G__11454,G__11455,G__11456) : cljs.core.build_subvec.call(null,G__11452,G__11453,G__11454,G__11455,G__11456));
});

cljs.core.Subvec.prototype.call = (function() {
var G__11457 = null;
var G__11457__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__11457__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__11457 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11457__2.call(this,self__,k);
case 3:
return G__11457__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11457.cljs$core$IFn$_invoke$arity$2 = G__11457__2;
G__11457.cljs$core$IFn$_invoke$arity$3 = G__11457__3;
return G__11457;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args11435){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11435)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__11458 = meta;
var G__11459 = v.v;
var G__11460 = (v.start + start);
var G__11461 = (v.start + end);
var G__11462 = __hash;
meta = G__11458;
v = G__11459;
start = G__11460;
end = G__11461;
__hash = G__11462;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj11469 = {};
return obj11469;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__11477 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__11478 = (level - (5));
node = G__11477;
level = G__11478;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__11482 = null;
var G__11482__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11482__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11482 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11482__2.call(this,self__,k);
case 3:
return G__11482__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11482.cljs$core$IFn$_invoke$arity$2 = G__11482__2;
G__11482.cljs$core$IFn$_invoke$arity$3 = G__11482__3;
return G__11482;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args11479){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11479)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__6019__auto__ = self__.front;
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__6019__auto__ = self__.rear;
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__11483 = (i + incr);
i = G__11483;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__11484 = (i + (1));
var G__11485 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__11484;
out = G__11485;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj11489 = {};
return obj11489;
})();
var l = ks.length;
var i_11490 = (0);
while(true){
if((i_11490 < l)){
var k_11491 = (ks[i_11490]);
(new_obj[k_11491] = (obj[k_11491]));

var G__11492 = (i_11490 + (1));
i_11490 = G__11492;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__6007__auto__ = (function (){var G__11496 = k;
return goog.isString(G__11496);
})();
if(cljs.core.truth_(and__6007__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__6007__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__11497 = init__$1;
var G__11498 = k;
var G__11499 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11497,G__11498,G__11499) : f.call(null,G__11497,G__11498,G__11499));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11500 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11500) : cljs.core.deref.call(null,G__11500));
} else {
var G__11506 = cljs.core.rest(keys__$1);
var G__11507 = init__$2;
keys__$1 = G__11506;
init__$1 = G__11507;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__6007__auto__ = (function (){var G__11502 = k;
return goog.isString(G__11502);
})();
if(cljs.core.truth_(and__6007__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__6007__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__11503 = k;
return goog.isString(G__11503);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__6007__auto__ = (function (){var G__11505 = k;
return goog.isString(G__11505);
})();
if(cljs.core.truth_(and__6007__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__6007__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__11493_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__11493_SHARP_,(self__.strobj[p1__11493_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__11508 = null;
var G__11508__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11508__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11508 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11508__2.call(this,self__,k);
case 3:
return G__11508__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11508.cljs$core$IFn$_invoke$arity$2 = G__11508__2;
G__11508.cljs$core$IFn$_invoke$arity$3 = G__11508__3;
return G__11508;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args11494){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11494)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj11510 = {};
return obj11510;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__11511 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11511,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11511,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__11512 = (i + (2));
i = G__11512;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__11513 = (i + (2));
i = G__11513;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__11514 = (i + (2));
i = G__11514;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__11515 = (i + (2));
i = G__11515;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__11516 = (i + (2));
i = G__11516;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__6019__auto__ = (function (){var G__11520 = k;
return goog.isString(G__11520);
})();
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_11521 = (0);
while(true){
if((i_11521 < l)){
(narr[i_11521] = (arr[i_11521]));

var G__11522 = (i_11521 + (1));
i_11521 = G__11522;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11524 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11524) : cljs.core.keys.call(null,G__11524));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11525 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11525) : cljs.core.vals.call(null,G__11525));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11526 = cljs.core.seq(coll);
var chunk__11527 = null;
var count__11528 = (0);
var i__11529 = (0);
while(true){
if((i__11529 < count__11528)){
var vec__11530 = chunk__11527.cljs$core$IIndexed$_nth$arity$2(null,i__11529);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11530,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11530,(1),null);
var G__11531_11544 = v;
var G__11532_11545 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11531_11544,G__11532_11545) : f.call(null,G__11531_11544,G__11532_11545));

var G__11546 = seq__11526;
var G__11547 = chunk__11527;
var G__11548 = count__11528;
var G__11549 = (i__11529 + (1));
seq__11526 = G__11546;
chunk__11527 = G__11547;
count__11528 = G__11548;
i__11529 = G__11549;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11526);
if(temp__4126__auto__){
var seq__11526__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11526__$1)){
var c__6806__auto__ = cljs.core.chunk_first(seq__11526__$1);
var G__11550 = cljs.core.chunk_rest(seq__11526__$1);
var G__11551 = c__6806__auto__;
var G__11552 = cljs.core.count(c__6806__auto__);
var G__11553 = (0);
seq__11526 = G__11550;
chunk__11527 = G__11551;
count__11528 = G__11552;
i__11529 = G__11553;
continue;
} else {
var vec__11533 = cljs.core.first(seq__11526__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11533,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11533,(1),null);
var G__11534_11554 = v;
var G__11535_11555 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11534_11554,G__11535_11555) : f.call(null,G__11534_11554,G__11535_11555));

var G__11556 = cljs.core.next(seq__11526__$1);
var G__11557 = null;
var G__11558 = (0);
var G__11559 = (0);
seq__11526 = G__11556;
chunk__11527 = G__11557;
count__11528 = G__11558;
i__11529 = G__11559;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__11536 = init__$1;
var G__11537 = (self__.arr[i]);
var G__11538 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11536,G__11537,G__11538) : f.call(null,G__11536,G__11537,G__11538));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11539 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11539) : cljs.core.deref.call(null,G__11539));
} else {
var G__11560 = (i + (2));
var G__11561 = init__$2;
i = G__11560;
init__$1 = G__11561;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__11540 = other;
if(G__11540){
var bit__6693__auto__ = (G__11540.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__6693__auto__) || (G__11540.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__11562 = (i + (2));
i = G__11562;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj11542 = {};
return obj11542;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__11563 = (s + (2));
var G__11564 = d;
s = G__11563;
d = G__11564;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__11565 = (s + (2));
var G__11566 = (d + (2));
s = G__11565;
d = G__11566;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__11543 = cljs.core.aclone(self__.arr);
(G__11543[(idx + (1))] = v);

return G__11543;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11567 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11568 = cljs.core.next(es);
ret = G__11567;
es = G__11568;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__11569 = null;
var G__11569__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11569__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11569 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11569__2.call(this,self__,k);
case 3:
return G__11569__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11569.cljs$core$IFn$_invoke$arity$2 = G__11569__2;
G__11569.cljs$core$IFn$_invoke$arity$3 = G__11569__3;
return G__11569;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args11523){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11523)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11570 = (i + (2));
var G__11571 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11570;
ret = G__11571;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__11572_11580 = self__.arr;
G__11572_11580.pop();

G__11572_11580.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__11573 = self__.len;
var G__11574 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__11573,G__11574) : cljs.core.array__GT_transient_hash_map.call(null,G__11573,G__11574));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__11575 = o;
if(G__11575){
var bit__6700__auto__ = (G__11575.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__6700__auto__) || (G__11575.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11575.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11575);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11575);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__11576 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11576) : cljs.core.key.call(null,G__11576));
})(),(function (){var G__11577 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11577) : cljs.core.val.call(null,G__11577));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11581 = cljs.core.next(es);
var G__11582 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__11578 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11578) : cljs.core.key.call(null,G__11578));
})(),(function (){var G__11579 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11579) : cljs.core.val.call(null,G__11579));
})());
es = G__11581;
tcoll__$2 = G__11582;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__11583 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__11584 = (i + (2));
out = G__11583;
i = G__11584;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__11587 = cljs.core.aclone(arr);
(G__11587[i] = a);

return G__11587;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__11588 = cljs.core.aclone(arr);
(G__11588[i] = a);

(G__11588[j] = b);

return G__11588;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__11593 = init__$1;
var G__11594 = k;
var G__11595 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11593,G__11594,G__11595) : f.call(null,G__11593,G__11594,G__11595));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11596 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11596) : cljs.core.deref.call(null,G__11596));
} else {
var G__11597 = (i + (2));
var G__11598 = init__$2;
i = G__11597;
init__$1 = G__11598;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11599 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11599) : cljs.core.create_inode_seq.call(null,G__11599));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11613 = (0);
var j_11614 = (0);
while(true){
if((i_11613 < (32))){
if((((self__.bitmap >>> i_11613) & (1)) === (0))){
var G__11615 = (i_11613 + (1));
var G__11616 = j_11614;
i_11613 = G__11615;
j_11614 = G__11616;
continue;
} else {
(nodes[i_11613] = ((!(((self__.arr[j_11614]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_11614])),(self__.arr[j_11614]),(self__.arr[(j_11614 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11614 + (1))])));

var G__11617 = (i_11613 + (1));
var G__11618 = (j_11614 + (2));
i_11613 = G__11617;
j_11614 = G__11618;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11600 = edit__$1;
var G__11601 = (shift + (5));
var G__11602 = key_or_nil;
var G__11603 = val_or_node;
var G__11604 = hash;
var G__11605 = key;
var G__11606 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606) : cljs.core.create_node.call(null,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11619 = (0);
var j_11620 = (0);
while(true){
if((i_11619 < (32))){
if((((self__.bitmap >>> i_11619) & (1)) === (0))){
var G__11621 = (i_11619 + (1));
var G__11622 = j_11620;
i_11619 = G__11621;
j_11620 = G__11622;
continue;
} else {
(nodes[i_11619] = ((!(((self__.arr[j_11620]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_11620])),(self__.arr[j_11620]),(self__.arr[(j_11620 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11620 + (1))])));

var G__11623 = (i_11619 + (1));
var G__11624 = (j_11620 + (2));
i_11619 = G__11623;
j_11620 = G__11624;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11607 = (shift + (5));
var G__11608 = key_or_nil;
var G__11609 = val_or_node;
var G__11610 = hash;
var G__11611 = key;
var G__11612 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__11607,G__11608,G__11609,G__11610,G__11611,G__11612) : cljs.core.create_node.call(null,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__11625 = (i + (1));
var G__11626 = (j + (2));
var G__11627 = (bitmap | ((1) << i));
i = G__11625;
j = G__11626;
bitmap = G__11627;
continue;
} else {
var G__11628 = (i + (1));
var G__11629 = j;
var G__11630 = bitmap;
i = G__11628;
j = G__11629;
bitmap = G__11630;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11631 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__11631) : cljs.core.create_array_node_seq.call(null,G__11631));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11632 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11632) : cljs.core.deref.call(null,G__11632));
} else {
var G__11633 = (i + (1));
var G__11634 = init__$2;
i = G__11633;
init__$1 = G__11634;
continue;
}
} else {
var G__11635 = (i + (1));
var G__11636 = init__$1;
i = G__11635;
init__$1 = G__11636;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__11637 = (i + (2));
i = G__11637;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11638 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11638) : cljs.core.create_inode_seq.call(null,G__11638));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__11639 = self__.nodes;
var G__11640 = (self__.i + (2));
var G__11641 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11639,G__11640,G__11641) : cljs.core.create_inode_seq.call(null,G__11639,G__11640,G__11641));
} else {
var G__11642 = self__.nodes;
var G__11643 = self__.i;
var G__11644 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11642,G__11643,G__11644) : cljs.core.create_inode_seq.call(null,G__11642,G__11643,G__11644));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__11648 = (j + (2));
j = G__11648;
continue;
}
} else {
var G__11649 = (j + (2));
j = G__11649;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11650 = null;
var G__11651 = self__.nodes;
var G__11652 = self__.i;
var G__11653 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__11650,G__11651,G__11652,G__11653) : cljs.core.create_array_node_seq.call(null,G__11650,G__11651,G__11652,G__11653));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__11658 = (j + (1));
j = G__11658;
continue;
}
} else {
var G__11659 = (j + (1));
j = G__11659;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11661 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11661) : cljs.core.keys.call(null,G__11661));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11662 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11662) : cljs.core.vals.call(null,G__11662));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11663 = cljs.core.seq(coll);
var chunk__11664 = null;
var count__11665 = (0);
var i__11666 = (0);
while(true){
if((i__11666 < count__11665)){
var vec__11667 = chunk__11664.cljs$core$IIndexed$_nth$arity$2(null,i__11666);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11667,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11667,(1),null);
var G__11668_11679 = v;
var G__11669_11680 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11668_11679,G__11669_11680) : f.call(null,G__11668_11679,G__11669_11680));

var G__11681 = seq__11663;
var G__11682 = chunk__11664;
var G__11683 = count__11665;
var G__11684 = (i__11666 + (1));
seq__11663 = G__11681;
chunk__11664 = G__11682;
count__11665 = G__11683;
i__11666 = G__11684;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11663);
if(temp__4126__auto__){
var seq__11663__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11663__$1)){
var c__6806__auto__ = cljs.core.chunk_first(seq__11663__$1);
var G__11685 = cljs.core.chunk_rest(seq__11663__$1);
var G__11686 = c__6806__auto__;
var G__11687 = cljs.core.count(c__6806__auto__);
var G__11688 = (0);
seq__11663 = G__11685;
chunk__11664 = G__11686;
count__11665 = G__11687;
i__11666 = G__11688;
continue;
} else {
var vec__11670 = cljs.core.first(seq__11663__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11670,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11670,(1),null);
var G__11671_11689 = v;
var G__11672_11690 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11671_11689,G__11672_11690) : f.call(null,G__11671_11689,G__11672_11690));

var G__11691 = cljs.core.next(seq__11663__$1);
var G__11692 = null;
var G__11693 = (0);
var G__11694 = (0);
seq__11663 = G__11691;
chunk__11664 = G__11692;
count__11665 = G__11693;
i__11666 = G__11694;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__11673 = init;
var G__11674 = null;
var G__11675 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11673,G__11674,G__11675) : f.call(null,G__11673,G__11674,G__11675));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11676 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11676) : cljs.core.deref.call(null,G__11676));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj11678 = {};
return obj11678;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11695 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11696 = cljs.core.next(es);
ret = G__11695;
es = G__11696;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__11697 = null;
var G__11697__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11697__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11697 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11697__2.call(this,self__,k);
case 3:
return G__11697__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11697.cljs$core$IFn$_invoke$arity$2 = G__11697__2;
G__11697.cljs$core$IFn$_invoke$arity$3 = G__11697__3;
return G__11697;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args11660){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11660)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11698 = (i + (2));
var G__11699 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11698;
ret = G__11699;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11700 = (i + (1));
var G__11701 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__11700;
out = G__11701;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__11702 = o;
if(G__11702){
var bit__6700__auto__ = (G__11702.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__6700__auto__) || (G__11702.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11702.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11702);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11702);
}
})()){
return tcoll.assoc_BANG_((function (){var G__11703 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11703) : cljs.core.key.call(null,G__11703));
})(),(function (){var G__11704 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11704) : cljs.core.val.call(null,G__11704));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11707 = cljs.core.next(es);
var G__11708 = tcoll__$1.assoc_BANG_((function (){var G__11705 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11705) : cljs.core.key.call(null,G__11705));
})(),(function (){var G__11706 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11706) : cljs.core.val.call(null,G__11706));
})());
es = G__11707;
tcoll__$1 = G__11708;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__11709 = ((ascending_QMARK_)?t.left:t.right);
var G__11710 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__11709;
stack__$1 = G__11710;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11723 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11723) : cljs.core.deref.call(null,G__11723));
} else {
var init__$2 = (function (){var G__11724 = init__$1;
var G__11725 = node.key;
var G__11726 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11724,G__11725,G__11726) : f.call(null,G__11724,G__11725,G__11726));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11727 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11727) : cljs.core.deref.call(null,G__11727));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__11728 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11728) : cljs.core.deref.call(null,G__11728));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__11730 = null;
var G__11730__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11730__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11730 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11730__2.call(this,self__,k);
case 3:
return G__11730__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11730.cljs$core$IFn$_invoke$arity$2 = G__11730__2;
G__11730.cljs$core$IFn$_invoke$arity$3 = G__11730__3;
return G__11730;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args11729){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11729)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__11732 = null;
var G__11732__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11732__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11732 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11732__2.call(this,self__,k);
case 3:
return G__11732__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11732.cljs$core$IFn$_invoke$arity$2 = G__11732__2;
G__11732.cljs$core$IFn$_invoke$arity$3 = G__11732__3;
return G__11732;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args11731){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11731)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__11745 = k;
var G__11746 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11745,G__11746) : comp.call(null,G__11745,G__11746));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__11765 = k;
var G__11766 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11765,G__11766) : comp.call(null,G__11765,G__11766));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__11777 = k;
var G__11778 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11777,G__11778) : comp.call(null,G__11777,G__11778));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11780 = cljs.core.seq(coll);
var chunk__11781 = null;
var count__11782 = (0);
var i__11783 = (0);
while(true){
if((i__11783 < count__11782)){
var vec__11784 = chunk__11781.cljs$core$IIndexed$_nth$arity$2(null,i__11783);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11784,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11784,(1),null);
var G__11785_11797 = v;
var G__11786_11798 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11785_11797,G__11786_11798) : f.call(null,G__11785_11797,G__11786_11798));

var G__11799 = seq__11780;
var G__11800 = chunk__11781;
var G__11801 = count__11782;
var G__11802 = (i__11783 + (1));
seq__11780 = G__11799;
chunk__11781 = G__11800;
count__11782 = G__11801;
i__11783 = G__11802;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11780);
if(temp__4126__auto__){
var seq__11780__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11780__$1)){
var c__6806__auto__ = cljs.core.chunk_first(seq__11780__$1);
var G__11803 = cljs.core.chunk_rest(seq__11780__$1);
var G__11804 = c__6806__auto__;
var G__11805 = cljs.core.count(c__6806__auto__);
var G__11806 = (0);
seq__11780 = G__11803;
chunk__11781 = G__11804;
count__11782 = G__11805;
i__11783 = G__11806;
continue;
} else {
var vec__11787 = cljs.core.first(seq__11780__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11787,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11787,(1),null);
var G__11788_11807 = v;
var G__11789_11808 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11788_11807,G__11789_11808) : f.call(null,G__11788_11807,G__11789_11808));

var G__11809 = cljs.core.next(seq__11780__$1);
var G__11810 = null;
var G__11811 = (0);
var G__11812 = (0);
seq__11780 = G__11809;
chunk__11781 = G__11810;
count__11782 = G__11811;
i__11783 = G__11812;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11790 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11790) : cljs.core.keys.call(null,G__11790));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11791 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11791) : cljs.core.vals.call(null,G__11791));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11792 = k;
var G__11793 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11792,G__11793) : self__.comp.call(null,G__11792,G__11793));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__11813 = t.left;
t = G__11813;
continue;
} else {
var G__11814 = t.right;
t = G__11814;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11815 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11816 = cljs.core.next(es);
ret = G__11815;
es = G__11816;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__11817 = null;
var G__11817__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11817__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11817 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11817__2.call(this,self__,k);
case 3:
return G__11817__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11817.cljs$core$IFn$_invoke$arity$2 = G__11817__2;
G__11817.cljs$core$IFn$_invoke$arity$3 = G__11817__3;
return G__11817;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args11779){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11779)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11794 = k;
var G__11795 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11794,G__11795) : self__.comp.call(null,G__11794,G__11795));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__11818 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11819 = t.left;
stack = G__11818;
t = G__11819;
continue;
} else {
var G__11820 = stack;
var G__11821 = t.right;
stack = G__11820;
t = G__11821;
continue;
}
} else {
if((c > (0))){
var G__11822 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11823 = t.right;
stack = G__11822;
t = G__11823;
continue;
} else {
var G__11824 = stack;
var G__11825 = t.left;
stack = G__11824;
t = G__11825;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__11796 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11796) : cljs.core.key.call(null,G__11796));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__11826 = cljs.core.nnext(in$);
var G__11827 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11826;
out = G__11827;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11828__i = 0, G__11828__a = new Array(arguments.length -  0);
while (G__11828__i < G__11828__a.length) {G__11828__a[G__11828__i] = arguments[G__11828__i + 0]; ++G__11828__i;}
  keyvals = new cljs.core.IndexedSeq(G__11828__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__11829){
var keyvals = cljs.core.seq(arglist__11829);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11830__i = 0, G__11830__a = new Array(arguments.length -  0);
while (G__11830__i < G__11830__a.length) {G__11830__a[G__11830__i] = arguments[G__11830__i + 0]; ++G__11830__i;}
  keyvals = new cljs.core.IndexedSeq(G__11830__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__11831){
var keyvals = cljs.core.seq(arglist__11831);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj11835 = {};
return obj11835;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__11836 = cljs.core.nnext(kvs);
kvs = G__11836;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11837__i = 0, G__11837__a = new Array(arguments.length -  0);
while (G__11837__i < G__11837__a.length) {G__11837__a[G__11837__i] = arguments[G__11837__i + 0]; ++G__11837__i;}
  keyvals = new cljs.core.IndexedSeq(G__11837__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__11838){
var keyvals = cljs.core.seq(arglist__11838);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__11839 = cljs.core.nnext(in$);
var G__11840 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11839;
out = G__11840;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11841__i = 0, G__11841__a = new Array(arguments.length -  0);
while (G__11841__i < G__11841__a.length) {G__11841__a[G__11841__i] = arguments[G__11841__i + 0]; ++G__11841__i;}
  keyvals = new cljs.core.IndexedSeq(G__11841__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__11842){
var keyvals = cljs.core.seq(arglist__11842);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__11843 = cljs.core.nnext(in$);
var G__11844 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11843;
out = G__11844;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__11845__i = 0, G__11845__a = new Array(arguments.length -  1);
while (G__11845__i < G__11845__a.length) {G__11845__a[G__11845__i] = arguments[G__11845__i + 1]; ++G__11845__i;}
  keyvals = new cljs.core.IndexedSeq(G__11845__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__11846){
var comparator = cljs.core.first(arglist__11846);
var keyvals = cljs.core.rest(arglist__11846);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11847 = self__.mseq;
if(G__11847){
var bit__6700__auto__ = (G__11847.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6700__auto__) || (G__11847.cljs$core$INext$)){
return true;
} else {
if((!G__11847.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11847);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11847);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11848 = self__.mseq;
if(G__11848){
var bit__6700__auto__ = (G__11848.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6700__auto__) || (G__11848.cljs$core$INext$)){
return true;
} else {
if((!G__11848.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11848);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11848);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11849 = self__.mseq;
if(G__11849){
var bit__6700__auto__ = (G__11849.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6700__auto__) || (G__11849.cljs$core$INext$)){
return true;
} else {
if((!G__11849.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11849);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11849);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11850 = self__.mseq;
if(G__11850){
var bit__6700__auto__ = (G__11850.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6700__auto__) || (G__11850.cljs$core$INext$)){
return true;
} else {
if((!G__11850.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11850);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11850);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__11851_SHARP_,p2__11852_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__6019__auto__ = p1__11851_SHARP_;
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__11852_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__11853__i = 0, G__11853__a = new Array(arguments.length -  0);
while (G__11853__i < G__11853__a.length) {G__11853__a[G__11853__i] = arguments[G__11853__i + 0]; ++G__11853__i;}
  maps = new cljs.core.IndexedSeq(G__11853__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__11854){
var maps = cljs.core.seq(arglist__11854);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11857 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11858 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11857,G__11858) : f.call(null,G__11857,G__11858));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__6019__auto__ = m1;
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__11859__i = 0, G__11859__a = new Array(arguments.length -  1);
while (G__11859__i < G__11859__a.length) {G__11859__a[G__11859__i] = arguments[G__11859__i + 1]; ++G__11859__i;}
  maps = new cljs.core.IndexedSeq(G__11859__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__11860){
var f = cljs.core.first(arglist__11860);
var maps = cljs.core.rest(arglist__11860);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__11861 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__11862 = cljs.core.next(keys);
ret = G__11861;
keys = G__11862;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11865 = cljs.core.seq(coll);
var chunk__11866 = null;
var count__11867 = (0);
var i__11868 = (0);
while(true){
if((i__11868 < count__11867)){
var vec__11869 = chunk__11866.cljs$core$IIndexed$_nth$arity$2(null,i__11868);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11869,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11869,(1),null);
var G__11870_11875 = v;
var G__11871_11876 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11870_11875,G__11871_11876) : f.call(null,G__11870_11875,G__11871_11876));

var G__11877 = seq__11865;
var G__11878 = chunk__11866;
var G__11879 = count__11867;
var G__11880 = (i__11868 + (1));
seq__11865 = G__11877;
chunk__11866 = G__11878;
count__11867 = G__11879;
i__11868 = G__11880;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11865);
if(temp__4126__auto__){
var seq__11865__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11865__$1)){
var c__6806__auto__ = cljs.core.chunk_first(seq__11865__$1);
var G__11881 = cljs.core.chunk_rest(seq__11865__$1);
var G__11882 = c__6806__auto__;
var G__11883 = cljs.core.count(c__6806__auto__);
var G__11884 = (0);
seq__11865 = G__11881;
chunk__11866 = G__11882;
count__11867 = G__11883;
i__11868 = G__11884;
continue;
} else {
var vec__11872 = cljs.core.first(seq__11865__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11872,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11872,(1),null);
var G__11873_11885 = v;
var G__11874_11886 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11873_11885,G__11874_11886) : f.call(null,G__11873_11885,G__11874_11886));

var G__11887 = cljs.core.next(seq__11865__$1);
var G__11888 = null;
var G__11889 = (0);
var G__11890 = (0);
seq__11865 = G__11887;
chunk__11866 = G__11888;
count__11867 = G__11889;
i__11868 = G__11890;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11863_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11863_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__11891 = null;
var G__11891__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11891__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11891 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11891__2.call(this,self__,k);
case 3:
return G__11891__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11891.cljs$core$IFn$_invoke$arity$2 = G__11891__2;
G__11891.cljs$core$IFn$_invoke$arity$3 = G__11891__3;
return G__11891;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args11864){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11864)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11892 = (i + (1));
var G__11893 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__11892;
out = G__11893;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__11894 = (i + (1));
var G__11895 = cljs.core._conj_BANG_(out,(items[i]));
i = G__11894;
out = G__11895;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__11897 = null;
var G__11897__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__11897__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__11897 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11897__2.call(this,self__,k);
case 3:
return G__11897__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11897.cljs$core$IFn$_invoke$arity$2 = G__11897__2;
G__11897.cljs$core$IFn$_invoke$arity$3 = G__11897__3;
return G__11897;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args11896){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11896)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11900 = cljs.core.seq(coll);
var chunk__11901 = null;
var count__11902 = (0);
var i__11903 = (0);
while(true){
if((i__11903 < count__11902)){
var vec__11904 = chunk__11901.cljs$core$IIndexed$_nth$arity$2(null,i__11903);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11904,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11904,(1),null);
var G__11905_11910 = v;
var G__11906_11911 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11905_11910,G__11906_11911) : f.call(null,G__11905_11910,G__11906_11911));

var G__11912 = seq__11900;
var G__11913 = chunk__11901;
var G__11914 = count__11902;
var G__11915 = (i__11903 + (1));
seq__11900 = G__11912;
chunk__11901 = G__11913;
count__11902 = G__11914;
i__11903 = G__11915;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11900);
if(temp__4126__auto__){
var seq__11900__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11900__$1)){
var c__6806__auto__ = cljs.core.chunk_first(seq__11900__$1);
var G__11916 = cljs.core.chunk_rest(seq__11900__$1);
var G__11917 = c__6806__auto__;
var G__11918 = cljs.core.count(c__6806__auto__);
var G__11919 = (0);
seq__11900 = G__11916;
chunk__11901 = G__11917;
count__11902 = G__11918;
i__11903 = G__11919;
continue;
} else {
var vec__11907 = cljs.core.first(seq__11900__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11907,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11907,(1),null);
var G__11908_11920 = v;
var G__11909_11921 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11908_11920,G__11909_11921) : f.call(null,G__11908_11920,G__11909_11921));

var G__11922 = cljs.core.next(seq__11900__$1);
var G__11923 = null;
var G__11924 = (0);
var G__11925 = (0);
seq__11900 = G__11922;
chunk__11901 = G__11923;
count__11902 = G__11924;
i__11903 = G__11925;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11898_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11898_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__11926 = null;
var G__11926__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11926__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11926 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11926__2.call(this,self__,k);
case 3:
return G__11926__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11926.cljs$core$IFn$_invoke$arity$2 = G__11926__2;
G__11926.cljs$core$IFn$_invoke$arity$3 = G__11926__3;
return G__11926;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args11899){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11899)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__6900__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__6900__auto__.length)){
var G__11927 = (i + (1));
var G__11928 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__11927;
res = G__11928;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__11929 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__11930 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__11929;
out = G__11930;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__11931__delegate = function (keys){
return cljs.core.set(keys);
};
var G__11931 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11932__i = 0, G__11932__a = new Array(arguments.length -  0);
while (G__11932__i < G__11932__a.length) {G__11932__a[G__11932__i] = arguments[G__11932__i + 0]; ++G__11932__i;}
  keys = new cljs.core.IndexedSeq(G__11932__a,0);
} 
return G__11931__delegate.call(this,keys);};
G__11931.cljs$lang$maxFixedArity = 0;
G__11931.cljs$lang$applyTo = (function (arglist__11933){
var keys = cljs.core.seq(arglist__11933);
return G__11931__delegate(keys);
});
G__11931.cljs$core$IFn$_invoke$arity$variadic = G__11931__delegate;
return G__11931;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__11934 = null;
if (arguments.length > 0) {
var G__11935__i = 0, G__11935__a = new Array(arguments.length -  0);
while (G__11935__i < G__11935__a.length) {G__11935__a[G__11935__i] = arguments[G__11935__i + 0]; ++G__11935__i;}
G__11934 = new cljs.core.IndexedSeq(G__11935__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__11934);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11936__i = 0, G__11936__a = new Array(arguments.length -  0);
while (G__11936__i < G__11936__a.length) {G__11936__a[G__11936__i] = arguments[G__11936__i + 0]; ++G__11936__i;}
  keys = new cljs.core.IndexedSeq(G__11936__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__11937){
var keys = cljs.core.seq(arglist__11937);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__11938__i = 0, G__11938__a = new Array(arguments.length -  1);
while (G__11938__i < G__11938__a.length) {G__11938__a[G__11938__i] = arguments[G__11938__i + 1]; ++G__11938__i;}
  keys = new cljs.core.IndexedSeq(G__11938__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__11939){
var comparator = cljs.core.first(arglist__11939);
var keys = cljs.core.rest(arglist__11939);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__11940_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11940_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__11940_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11941_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11941_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__11941_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__11962 = null;
var G__11962__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11962__1 = (function (result){
var G__11952 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11952) : rf.call(null,G__11952));
});
var G__11962__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__11953 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11953) : cljs.core.deref.call(null,G__11953));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__11954 = result;
var G__11955 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11954,G__11955) : rf.call(null,G__11954,G__11955));
}
});
G__11962 = function(result,input){
switch(arguments.length){
case 0:
return G__11962__0.call(this);
case 1:
return G__11962__1.call(this,result);
case 2:
return G__11962__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11962.cljs$core$IFn$_invoke$arity$0 = G__11962__0;
G__11962.cljs$core$IFn$_invoke$arity$1 = G__11962__1;
G__11962.cljs$core$IFn$_invoke$arity$2 = G__11962__2;
return G__11962;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__11960,seen__$1){
while(true){
var vec__11961 = p__11960;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11961,(0),null);
var xs__$1 = vec__11961;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__11963 = cljs.core.rest(s);
var G__11964 = seen__$1;
p__11960 = G__11963;
seen__$1 = G__11964;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__11965 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__11966 = cljs.core.next(s__$1);
ret = G__11965;
s__$1 = G__11966;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__11968 = x;
if(G__11968){
var bit__6693__auto__ = (G__11968.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__6693__auto__) || (G__11968.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__11969 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__11970 = cljs.core.next(ks);
var G__11971 = cljs.core.next(vs);
map = G__11969;
ks = G__11970;
vs = G__11971;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__11982 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11982) : k.call(null,G__11982));
})() > (function (){var G__11983 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11983) : k.call(null,G__11983));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__11984__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11972_SHARP_,p2__11973_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__11972_SHARP_,p2__11973_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11984 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11985__i = 0, G__11985__a = new Array(arguments.length -  3);
while (G__11985__i < G__11985__a.length) {G__11985__a[G__11985__i] = arguments[G__11985__i + 3]; ++G__11985__i;}
  more = new cljs.core.IndexedSeq(G__11985__a,0);
} 
return G__11984__delegate.call(this,k,x,y,more);};
G__11984.cljs$lang$maxFixedArity = 3;
G__11984.cljs$lang$applyTo = (function (arglist__11986){
var k = cljs.core.first(arglist__11986);
arglist__11986 = cljs.core.next(arglist__11986);
var x = cljs.core.first(arglist__11986);
arglist__11986 = cljs.core.next(arglist__11986);
var y = cljs.core.first(arglist__11986);
var more = cljs.core.rest(arglist__11986);
return G__11984__delegate(k,x,y,more);
});
G__11984.cljs$core$IFn$_invoke$arity$variadic = G__11984__delegate;
return G__11984;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__11987 = null;
if (arguments.length > 3) {
var G__11988__i = 0, G__11988__a = new Array(arguments.length -  3);
while (G__11988__i < G__11988__a.length) {G__11988__a[G__11988__i] = arguments[G__11988__i + 3]; ++G__11988__i;}
G__11987 = new cljs.core.IndexedSeq(G__11988__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11987);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__11999 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11999) : k.call(null,G__11999));
})() < (function (){var G__12000 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__12000) : k.call(null,G__12000));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__12001__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11989_SHARP_,p2__11990_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__11989_SHARP_,p2__11990_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__12001 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__12002__i = 0, G__12002__a = new Array(arguments.length -  3);
while (G__12002__i < G__12002__a.length) {G__12002__a[G__12002__i] = arguments[G__12002__i + 3]; ++G__12002__i;}
  more = new cljs.core.IndexedSeq(G__12002__a,0);
} 
return G__12001__delegate.call(this,k,x,y,more);};
G__12001.cljs$lang$maxFixedArity = 3;
G__12001.cljs$lang$applyTo = (function (arglist__12003){
var k = cljs.core.first(arglist__12003);
arglist__12003 = cljs.core.next(arglist__12003);
var x = cljs.core.first(arglist__12003);
arglist__12003 = cljs.core.next(arglist__12003);
var y = cljs.core.first(arglist__12003);
var more = cljs.core.rest(arglist__12003);
return G__12001__delegate(k,x,y,more);
});
G__12001.cljs$core$IFn$_invoke$arity$variadic = G__12001__delegate;
return G__12001;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__12004 = null;
if (arguments.length > 3) {
var G__12005__i = 0, G__12005__a = new Array(arguments.length -  3);
while (G__12005__i < G__12005__a.length) {G__12005__a[G__12005__i] = arguments[G__12005__i + 3]; ++G__12005__i;}
G__12004 = new cljs.core.IndexedSeq(G__12005__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__12004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__12022 = null;
var G__12022__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12022__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__12017 = result;
var G__12018 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12017,G__12018) : rf.call(null,G__12017,G__12018));
})());
})());
var G__12019 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12019) : rf.call(null,G__12019));
});
var G__12022__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__12020 = result;
var G__12021 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12020,G__12021) : rf.call(null,G__12020,G__12021));
} else {
return result;
}
});
G__12022 = function(result,input){
switch(arguments.length){
case 0:
return G__12022__0.call(this);
case 1:
return G__12022__1.call(this,result);
case 2:
return G__12022__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12022.cljs$core$IFn$_invoke$arity$0 = G__12022__0;
G__12022.cljs$core$IFn$_invoke$arity$1 = G__12022__1;
G__12022.cljs$core$IFn$_invoke$arity$2 = G__12022__2;
return G__12022;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__12035 = null;
var G__12035__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12035__1 = (function (result){
var G__12030 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12030) : rf.call(null,G__12030));
});
var G__12035__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__12031 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12031) : pred.call(null,G__12031));
})())){
var G__12032 = result;
var G__12033 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12032,G__12033) : rf.call(null,G__12032,G__12033));
} else {
return cljs.core.reduced(result);
}
});
G__12035 = function(result,input){
switch(arguments.length){
case 0:
return G__12035__0.call(this);
case 1:
return G__12035__1.call(this,result);
case 2:
return G__12035__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12035.cljs$core$IFn$_invoke$arity$0 = G__12035__0;
G__12035.cljs$core$IFn$_invoke$arity$1 = G__12035__1;
G__12035.cljs$core$IFn$_invoke$arity$2 = G__12035__2;
return G__12035;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__12034 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12034) : pred.call(null,G__12034));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__12040 = (function (){var G__12042 = cljs.core._entry_key(sc,e);
var G__12043 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__12042,G__12043) : comp.call(null,G__12042,G__12043));
})();
var G__12041 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__12040,G__12041) : test.call(null,G__12040,G__12041));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__12047 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12047,(0),null);
var s = vec__12047;
if(cljs.core.truth_((function (){var G__12048 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__12048) : include.call(null,G__12048));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__12049 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12049,(0),null);
var s = vec__12049;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__12053 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12053,(0),null);
var s = vec__12053;
if(cljs.core.truth_((function (){var G__12054 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__12054) : include.call(null,G__12054));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__12055 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12055,(0),null);
var s = vec__12055;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__12056 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12056) : Math.ceil.call(null,G__12056));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__6440__auto__ = self__.__hash;
if(!((h__6440__auto__ == null))){
return h__6440__auto__;
} else {
var h__6440__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__6440__auto____$1;

return h__6440__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__12057 = ret;
var G__12058 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12057,G__12058) : f.call(null,G__12057,G__12058));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__12059 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12059) : cljs.core.deref.call(null,G__12059));
} else {
var G__12060 = (i + self__.step);
var G__12061 = ret__$1;
i = G__12060;
ret = G__12061;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__12079 = null;
var G__12079__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12079__1 = (function (result){
var G__12076 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12076) : rf.call(null,G__12076));
});
var G__12079__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__12077 = result;
var G__12078 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12077,G__12078) : rf.call(null,G__12077,G__12078));
} else {
return result;
}
});
G__12079 = function(result,input){
switch(arguments.length){
case 0:
return G__12079__0.call(this);
case 1:
return G__12079__1.call(this,result);
case 2:
return G__12079__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12079.cljs$core$IFn$_invoke$arity$0 = G__12079__0;
G__12079.cljs$core$IFn$_invoke$arity$1 = G__12079__1;
G__12079.cljs$core$IFn$_invoke$arity$2 = G__12079__2;
return G__12079;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__12101 = null;
var G__12101__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12101__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__12092 = result;
var G__12093 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12092,G__12093) : rf.call(null,G__12092,G__12093));
})());
})());
var G__12094 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12094) : rf.call(null,G__12094));
});
var G__12101__2 = (function (result,input){
var pval = (function (){var G__12095 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12095) : cljs.core.deref.call(null,G__12095));
})();
var val = (function (){var G__12096 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12096) : f.call(null,G__12096));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__12097 = result;
var G__12098 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12097,G__12098) : rf.call(null,G__12097,G__12098));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__12101 = function(result,input){
switch(arguments.length){
case 0:
return G__12101__0.call(this);
case 1:
return G__12101__1.call(this,result);
case 2:
return G__12101__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12101.cljs$core$IFn$_invoke$arity$0 = G__12101__0;
G__12101.cljs$core$IFn$_invoke$arity$1 = G__12101__1;
G__12101.cljs$core$IFn$_invoke$arity$2 = G__12101__2;
return G__12101;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__12099 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12099) : f.call(null,G__12099));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__12080_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__12100 = p1__12080_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12100) : f.call(null,G__12100));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__12110 = init;
var G__12111 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12110,G__12111) : f.call(null,G__12110,G__12111));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__12206 = null;
var G__12206__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__12206__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12164 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12164) : f.call(null,G__12164));
})()],null));
});
var G__12206__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12165 = x;
var G__12166 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12165,G__12166) : f.call(null,G__12165,G__12166));
})()],null));
});
var G__12206__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12167 = x;
var G__12168 = y;
var G__12169 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12167,G__12168,G__12169) : f.call(null,G__12167,G__12168,G__12169));
})()],null));
});
var G__12206__4 = (function() { 
var G__12207__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__12207 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12208__i = 0, G__12208__a = new Array(arguments.length -  3);
while (G__12208__i < G__12208__a.length) {G__12208__a[G__12208__i] = arguments[G__12208__i + 3]; ++G__12208__i;}
  args = new cljs.core.IndexedSeq(G__12208__a,0);
} 
return G__12207__delegate.call(this,x,y,z,args);};
G__12207.cljs$lang$maxFixedArity = 3;
G__12207.cljs$lang$applyTo = (function (arglist__12209){
var x = cljs.core.first(arglist__12209);
arglist__12209 = cljs.core.next(arglist__12209);
var y = cljs.core.first(arglist__12209);
arglist__12209 = cljs.core.next(arglist__12209);
var z = cljs.core.first(arglist__12209);
var args = cljs.core.rest(arglist__12209);
return G__12207__delegate(x,y,z,args);
});
G__12207.cljs$core$IFn$_invoke$arity$variadic = G__12207__delegate;
return G__12207;
})()
;
G__12206 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12206__0.call(this);
case 1:
return G__12206__1.call(this,x);
case 2:
return G__12206__2.call(this,x,y);
case 3:
return G__12206__3.call(this,x,y,z);
default:
var G__12210 = null;
if (arguments.length > 3) {
var G__12211__i = 0, G__12211__a = new Array(arguments.length -  3);
while (G__12211__i < G__12211__a.length) {G__12211__a[G__12211__i] = arguments[G__12211__i + 3]; ++G__12211__i;}
G__12210 = new cljs.core.IndexedSeq(G__12211__a,0);
}
return G__12206__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12210);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12206.cljs$lang$maxFixedArity = 3;
G__12206.cljs$lang$applyTo = G__12206__4.cljs$lang$applyTo;
G__12206.cljs$core$IFn$_invoke$arity$0 = G__12206__0;
G__12206.cljs$core$IFn$_invoke$arity$1 = G__12206__1;
G__12206.cljs$core$IFn$_invoke$arity$2 = G__12206__2;
G__12206.cljs$core$IFn$_invoke$arity$3 = G__12206__3;
G__12206.cljs$core$IFn$_invoke$arity$variadic = G__12206__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12206;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__12212 = null;
var G__12212__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__12212__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12170 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12170) : f.call(null,G__12170));
})(),(function (){var G__12171 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12171) : g.call(null,G__12171));
})()],null));
});
var G__12212__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12172 = x;
var G__12173 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12172,G__12173) : f.call(null,G__12172,G__12173));
})(),(function (){var G__12174 = x;
var G__12175 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12174,G__12175) : g.call(null,G__12174,G__12175));
})()],null));
});
var G__12212__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12176 = x;
var G__12177 = y;
var G__12178 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12176,G__12177,G__12178) : f.call(null,G__12176,G__12177,G__12178));
})(),(function (){var G__12179 = x;
var G__12180 = y;
var G__12181 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12179,G__12180,G__12181) : g.call(null,G__12179,G__12180,G__12181));
})()],null));
});
var G__12212__4 = (function() { 
var G__12213__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__12213 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12214__i = 0, G__12214__a = new Array(arguments.length -  3);
while (G__12214__i < G__12214__a.length) {G__12214__a[G__12214__i] = arguments[G__12214__i + 3]; ++G__12214__i;}
  args = new cljs.core.IndexedSeq(G__12214__a,0);
} 
return G__12213__delegate.call(this,x,y,z,args);};
G__12213.cljs$lang$maxFixedArity = 3;
G__12213.cljs$lang$applyTo = (function (arglist__12215){
var x = cljs.core.first(arglist__12215);
arglist__12215 = cljs.core.next(arglist__12215);
var y = cljs.core.first(arglist__12215);
arglist__12215 = cljs.core.next(arglist__12215);
var z = cljs.core.first(arglist__12215);
var args = cljs.core.rest(arglist__12215);
return G__12213__delegate(x,y,z,args);
});
G__12213.cljs$core$IFn$_invoke$arity$variadic = G__12213__delegate;
return G__12213;
})()
;
G__12212 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12212__0.call(this);
case 1:
return G__12212__1.call(this,x);
case 2:
return G__12212__2.call(this,x,y);
case 3:
return G__12212__3.call(this,x,y,z);
default:
var G__12216 = null;
if (arguments.length > 3) {
var G__12217__i = 0, G__12217__a = new Array(arguments.length -  3);
while (G__12217__i < G__12217__a.length) {G__12217__a[G__12217__i] = arguments[G__12217__i + 3]; ++G__12217__i;}
G__12216 = new cljs.core.IndexedSeq(G__12217__a,0);
}
return G__12212__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12212.cljs$lang$maxFixedArity = 3;
G__12212.cljs$lang$applyTo = G__12212__4.cljs$lang$applyTo;
G__12212.cljs$core$IFn$_invoke$arity$0 = G__12212__0;
G__12212.cljs$core$IFn$_invoke$arity$1 = G__12212__1;
G__12212.cljs$core$IFn$_invoke$arity$2 = G__12212__2;
G__12212.cljs$core$IFn$_invoke$arity$3 = G__12212__3;
G__12212.cljs$core$IFn$_invoke$arity$variadic = G__12212__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12212;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__12218 = null;
var G__12218__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__12218__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12182 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12182) : f.call(null,G__12182));
})(),(function (){var G__12183 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12183) : g.call(null,G__12183));
})(),(function (){var G__12184 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12184) : h.call(null,G__12184));
})()],null));
});
var G__12218__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12185 = x;
var G__12186 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12185,G__12186) : f.call(null,G__12185,G__12186));
})(),(function (){var G__12187 = x;
var G__12188 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12187,G__12188) : g.call(null,G__12187,G__12188));
})(),(function (){var G__12189 = x;
var G__12190 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12189,G__12190) : h.call(null,G__12189,G__12190));
})()],null));
});
var G__12218__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12191 = x;
var G__12192 = y;
var G__12193 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12191,G__12192,G__12193) : f.call(null,G__12191,G__12192,G__12193));
})(),(function (){var G__12194 = x;
var G__12195 = y;
var G__12196 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12194,G__12195,G__12196) : g.call(null,G__12194,G__12195,G__12196));
})(),(function (){var G__12197 = x;
var G__12198 = y;
var G__12199 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12197,G__12198,G__12199) : h.call(null,G__12197,G__12198,G__12199));
})()],null));
});
var G__12218__4 = (function() { 
var G__12219__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__12219 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12220__i = 0, G__12220__a = new Array(arguments.length -  3);
while (G__12220__i < G__12220__a.length) {G__12220__a[G__12220__i] = arguments[G__12220__i + 3]; ++G__12220__i;}
  args = new cljs.core.IndexedSeq(G__12220__a,0);
} 
return G__12219__delegate.call(this,x,y,z,args);};
G__12219.cljs$lang$maxFixedArity = 3;
G__12219.cljs$lang$applyTo = (function (arglist__12221){
var x = cljs.core.first(arglist__12221);
arglist__12221 = cljs.core.next(arglist__12221);
var y = cljs.core.first(arglist__12221);
arglist__12221 = cljs.core.next(arglist__12221);
var z = cljs.core.first(arglist__12221);
var args = cljs.core.rest(arglist__12221);
return G__12219__delegate(x,y,z,args);
});
G__12219.cljs$core$IFn$_invoke$arity$variadic = G__12219__delegate;
return G__12219;
})()
;
G__12218 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12218__0.call(this);
case 1:
return G__12218__1.call(this,x);
case 2:
return G__12218__2.call(this,x,y);
case 3:
return G__12218__3.call(this,x,y,z);
default:
var G__12222 = null;
if (arguments.length > 3) {
var G__12223__i = 0, G__12223__a = new Array(arguments.length -  3);
while (G__12223__i < G__12223__a.length) {G__12223__a[G__12223__i] = arguments[G__12223__i + 3]; ++G__12223__i;}
G__12222 = new cljs.core.IndexedSeq(G__12223__a,0);
}
return G__12218__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12218.cljs$lang$maxFixedArity = 3;
G__12218.cljs$lang$applyTo = G__12218__4.cljs$lang$applyTo;
G__12218.cljs$core$IFn$_invoke$arity$0 = G__12218__0;
G__12218.cljs$core$IFn$_invoke$arity$1 = G__12218__1;
G__12218.cljs$core$IFn$_invoke$arity$2 = G__12218__2;
G__12218.cljs$core$IFn$_invoke$arity$3 = G__12218__3;
G__12218.cljs$core$IFn$_invoke$arity$variadic = G__12218__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12218;
})()
});
var juxt__4 = (function() { 
var G__12224__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__12225 = null;
var G__12225__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12112_SHARP_,p2__12113_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12112_SHARP_,(function (){return (p2__12113_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__12113_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__12113_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12225__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12114_SHARP_,p2__12115_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12114_SHARP_,(function (){var G__12200 = x;
return (p2__12115_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__12115_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12200) : p2__12115_SHARP_.call(null,G__12200));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12225__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12116_SHARP_,p2__12117_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12116_SHARP_,(function (){var G__12201 = x;
var G__12202 = y;
return (p2__12117_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__12117_SHARP_.cljs$core$IFn$_invoke$arity$2(G__12201,G__12202) : p2__12117_SHARP_.call(null,G__12201,G__12202));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12225__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12118_SHARP_,p2__12119_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12118_SHARP_,(function (){var G__12203 = x;
var G__12204 = y;
var G__12205 = z;
return (p2__12119_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__12119_SHARP_.cljs$core$IFn$_invoke$arity$3(G__12203,G__12204,G__12205) : p2__12119_SHARP_.call(null,G__12203,G__12204,G__12205));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12225__4 = (function() { 
var G__12226__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12120_SHARP_,p2__12121_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12120_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__12121_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__12226 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12227__i = 0, G__12227__a = new Array(arguments.length -  3);
while (G__12227__i < G__12227__a.length) {G__12227__a[G__12227__i] = arguments[G__12227__i + 3]; ++G__12227__i;}
  args = new cljs.core.IndexedSeq(G__12227__a,0);
} 
return G__12226__delegate.call(this,x,y,z,args);};
G__12226.cljs$lang$maxFixedArity = 3;
G__12226.cljs$lang$applyTo = (function (arglist__12228){
var x = cljs.core.first(arglist__12228);
arglist__12228 = cljs.core.next(arglist__12228);
var y = cljs.core.first(arglist__12228);
arglist__12228 = cljs.core.next(arglist__12228);
var z = cljs.core.first(arglist__12228);
var args = cljs.core.rest(arglist__12228);
return G__12226__delegate(x,y,z,args);
});
G__12226.cljs$core$IFn$_invoke$arity$variadic = G__12226__delegate;
return G__12226;
})()
;
G__12225 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12225__0.call(this);
case 1:
return G__12225__1.call(this,x);
case 2:
return G__12225__2.call(this,x,y);
case 3:
return G__12225__3.call(this,x,y,z);
default:
var G__12229 = null;
if (arguments.length > 3) {
var G__12230__i = 0, G__12230__a = new Array(arguments.length -  3);
while (G__12230__i < G__12230__a.length) {G__12230__a[G__12230__i] = arguments[G__12230__i + 3]; ++G__12230__i;}
G__12229 = new cljs.core.IndexedSeq(G__12230__a,0);
}
return G__12225__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12225.cljs$lang$maxFixedArity = 3;
G__12225.cljs$lang$applyTo = G__12225__4.cljs$lang$applyTo;
G__12225.cljs$core$IFn$_invoke$arity$0 = G__12225__0;
G__12225.cljs$core$IFn$_invoke$arity$1 = G__12225__1;
G__12225.cljs$core$IFn$_invoke$arity$2 = G__12225__2;
G__12225.cljs$core$IFn$_invoke$arity$3 = G__12225__3;
G__12225.cljs$core$IFn$_invoke$arity$variadic = G__12225__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12225;
})()
;})(fs__$1))
};
var G__12224 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__12231__i = 0, G__12231__a = new Array(arguments.length -  3);
while (G__12231__i < G__12231__a.length) {G__12231__a[G__12231__i] = arguments[G__12231__i + 3]; ++G__12231__i;}
  fs = new cljs.core.IndexedSeq(G__12231__a,0);
} 
return G__12224__delegate.call(this,f,g,h,fs);};
G__12224.cljs$lang$maxFixedArity = 3;
G__12224.cljs$lang$applyTo = (function (arglist__12232){
var f = cljs.core.first(arglist__12232);
arglist__12232 = cljs.core.next(arglist__12232);
var g = cljs.core.first(arglist__12232);
arglist__12232 = cljs.core.next(arglist__12232);
var h = cljs.core.first(arglist__12232);
var fs = cljs.core.rest(arglist__12232);
return G__12224__delegate(f,g,h,fs);
});
G__12224.cljs$core$IFn$_invoke$arity$variadic = G__12224__delegate;
return G__12224;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__12233 = null;
if (arguments.length > 3) {
var G__12234__i = 0, G__12234__a = new Array(arguments.length -  3);
while (G__12234__i < G__12234__a.length) {G__12234__a[G__12234__i] = arguments[G__12234__i + 3]; ++G__12234__i;}
G__12233 = new cljs.core.IndexedSeq(G__12234__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__12233);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__12235 = cljs.core.next(coll);
coll = G__12235;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__12236 = (n - (1));
var G__12237 = cljs.core.next(coll);
n = G__12236;
coll = G__12237;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__12241 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12241,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12241,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12241,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_12249 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__12250_12256 = cljs.core.first(coll);
var G__12251_12257 = writer;
var G__12252_12258 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12250_12256,G__12251_12257,G__12252_12258) : print_one.call(null,G__12250_12256,G__12251_12257,G__12252_12258));
} else {
}

var coll_12259__$1 = cljs.core.next(coll);
var n_12260 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_12259__$1) && (((n_12260 == null)) || (!((n_12260 === (0)))))){
cljs.core._write(writer,sep);

var G__12253_12261 = cljs.core.first(coll_12259__$1);
var G__12254_12262 = writer;
var G__12255_12263 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12253_12261,G__12254_12262,G__12255_12263) : print_one.call(null,G__12253_12261,G__12254_12262,G__12255_12263));

var G__12264 = cljs.core.next(coll_12259__$1);
var G__12265 = (n_12260 - (1));
coll_12259__$1 = G__12264;
n_12260 = G__12265;
continue;
} else {
if((cljs.core.seq(coll_12259__$1)) && ((n_12260 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_12249;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__12270 = cljs.core.seq(ss);
var chunk__12271 = null;
var count__12272 = (0);
var i__12273 = (0);
while(true){
if((i__12273 < count__12272)){
var s = chunk__12271.cljs$core$IIndexed$_nth$arity$2(null,i__12273);
cljs.core._write(writer,s);

var G__12274 = seq__12270;
var G__12275 = chunk__12271;
var G__12276 = count__12272;
var G__12277 = (i__12273 + (1));
seq__12270 = G__12274;
chunk__12271 = G__12275;
count__12272 = G__12276;
i__12273 = G__12277;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__12270);
if(temp__4126__auto__){
var seq__12270__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12270__$1)){
var c__6806__auto__ = cljs.core.chunk_first(seq__12270__$1);
var G__12278 = cljs.core.chunk_rest(seq__12270__$1);
var G__12279 = c__6806__auto__;
var G__12280 = cljs.core.count(c__6806__auto__);
var G__12281 = (0);
seq__12270 = G__12278;
chunk__12271 = G__12279;
count__12272 = G__12280;
i__12273 = G__12281;
continue;
} else {
var s = cljs.core.first(seq__12270__$1);
cljs.core._write(writer,s);

var G__12282 = cljs.core.next(seq__12270__$1);
var G__12283 = null;
var G__12284 = (0);
var G__12285 = (0);
seq__12270 = G__12282;
chunk__12271 = G__12283;
count__12272 = G__12284;
i__12273 = G__12285;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__12286__i = 0, G__12286__a = new Array(arguments.length -  1);
while (G__12286__i < G__12286__a.length) {G__12286__a[G__12286__i] = arguments[G__12286__i + 1]; ++G__12286__i;}
  ss = new cljs.core.IndexedSeq(G__12286__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__12287){
var writer = cljs.core.first(arglist__12287);
var ss = cljs.core.rest(arglist__12287);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj12289 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj12289;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__12292 = "[\\\\\"\b\f\n\r\t]";
var G__12293 = "g";
return RegExp(G__12292,G__12293);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__6007__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__6007__auto__)){
var and__6007__auto____$1 = (function (){var G__12307 = obj;
if(G__12307){
var bit__6700__auto__ = (G__12307.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__6700__auto__) || (G__12307.cljs$core$IMeta$)){
return true;
} else {
if((!G__12307.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12307);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12307);
}
})();
if(and__6007__auto____$1){
return cljs.core.meta(obj);
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__12308 = obj;
if(G__12308){
var bit__6693__auto__ = (G__12308.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__6693__auto__) || (G__12308.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__12309 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__12310 = pr_writer;
var G__12311 = writer;
var G__12312 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__12309,G__12310,G__12311,G__12312) : cljs.core.print_map.call(null,G__12309,G__12310,G__12311,G__12312));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__12313 = obj;
return goog.isString(G__12313);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__12315 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__12315;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__12314 = obj;
if(G__12314){
var bit__6700__auto__ = (G__12314.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__6700__auto__) || (G__12314.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__12314.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__12314);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__12314);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__12320 = cljs.core.seq(cljs.core.next(objs));
var chunk__12321 = null;
var count__12322 = (0);
var i__12323 = (0);
while(true){
if((i__12323 < count__12322)){
var obj = chunk__12321.cljs$core$IIndexed$_nth$arity$2(null,i__12323);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__12324 = seq__12320;
var G__12325 = chunk__12321;
var G__12326 = count__12322;
var G__12327 = (i__12323 + (1));
seq__12320 = G__12324;
chunk__12321 = G__12325;
count__12322 = G__12326;
i__12323 = G__12327;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__12320);
if(temp__4126__auto__){
var seq__12320__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12320__$1)){
var c__6806__auto__ = cljs.core.chunk_first(seq__12320__$1);
var G__12328 = cljs.core.chunk_rest(seq__12320__$1);
var G__12329 = c__6806__auto__;
var G__12330 = cljs.core.count(c__6806__auto__);
var G__12331 = (0);
seq__12320 = G__12328;
chunk__12321 = G__12329;
count__12322 = G__12330;
i__12323 = G__12331;
continue;
} else {
var obj = cljs.core.first(seq__12320__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__12332 = cljs.core.next(seq__12320__$1);
var G__12333 = null;
var G__12334 = (0);
var G__12335 = (0);
seq__12320 = G__12332;
chunk__12321 = G__12333;
count__12322 = G__12334;
i__12323 = G__12335;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12336__i = 0, G__12336__a = new Array(arguments.length -  0);
while (G__12336__i < G__12336__a.length) {G__12336__a[G__12336__i] = arguments[G__12336__i + 0]; ++G__12336__i;}
  objs = new cljs.core.IndexedSeq(G__12336__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__12337){
var objs = cljs.core.seq(arglist__12337);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12338__i = 0, G__12338__a = new Array(arguments.length -  0);
while (G__12338__i < G__12338__a.length) {G__12338__a[G__12338__i] = arguments[G__12338__i + 0]; ++G__12338__i;}
  objs = new cljs.core.IndexedSeq(G__12338__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__12339){
var objs = cljs.core.seq(arglist__12339);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12340__i = 0, G__12340__a = new Array(arguments.length -  0);
while (G__12340__i < G__12340__a.length) {G__12340__a[G__12340__i] = arguments[G__12340__i + 0]; ++G__12340__i;}
  objs = new cljs.core.IndexedSeq(G__12340__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__12341){
var objs = cljs.core.seq(arglist__12341);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12342__i = 0, G__12342__a = new Array(arguments.length -  0);
while (G__12342__i < G__12342__a.length) {G__12342__a[G__12342__i] = arguments[G__12342__i + 0]; ++G__12342__i;}
  objs = new cljs.core.IndexedSeq(G__12342__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__12343){
var objs = cljs.core.seq(arglist__12343);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12344__i = 0, G__12344__a = new Array(arguments.length -  0);
while (G__12344__i < G__12344__a.length) {G__12344__a[G__12344__i] = arguments[G__12344__i + 0]; ++G__12344__i;}
  objs = new cljs.core.IndexedSeq(G__12344__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__12345){
var objs = cljs.core.seq(arglist__12345);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12346__i = 0, G__12346__a = new Array(arguments.length -  0);
while (G__12346__i < G__12346__a.length) {G__12346__a[G__12346__i] = arguments[G__12346__i + 0]; ++G__12346__i;}
  objs = new cljs.core.IndexedSeq(G__12346__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__12347){
var objs = cljs.core.seq(arglist__12347);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12348__i = 0, G__12348__a = new Array(arguments.length -  0);
while (G__12348__i < G__12348__a.length) {G__12348__a[G__12348__i] = arguments[G__12348__i + 0]; ++G__12348__i;}
  objs = new cljs.core.IndexedSeq(G__12348__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__12349){
var objs = cljs.core.seq(arglist__12349);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12350__i = 0, G__12350__a = new Array(arguments.length -  0);
while (G__12350__i < G__12350__a.length) {G__12350__a[G__12350__i] = arguments[G__12350__i + 0]; ++G__12350__i;}
  objs = new cljs.core.IndexedSeq(G__12350__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__12351){
var objs = cljs.core.seq(arglist__12351);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__12358_12364 = cljs.core.key(e);
var G__12359_12365 = w;
var G__12360_12366 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12358_12364,G__12359_12365,G__12360_12366) : print_one.call(null,G__12358_12364,G__12359_12365,G__12360_12366));

cljs.core._write(w," ");

var G__12361 = cljs.core.val(e);
var G__12362 = w;
var G__12363 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12361,G__12362,G__12363) : print_one.call(null,G__12361,G__12362,G__12363));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__12367__i = 0, G__12367__a = new Array(arguments.length -  2);
while (G__12367__i < G__12367__a.length) {G__12367__a[G__12367__i] = arguments[G__12367__i + 2]; ++G__12367__i;}
  args = new cljs.core.IndexedSeq(G__12367__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__12368){
var iref = cljs.core.first(arglist__12368);
arglist__12368 = cljs.core.next(arglist__12368);
var f = cljs.core.first(arglist__12368);
var args = cljs.core.rest(arglist__12368);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__12371 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12371) : cljs.core.atom.call(null,G__12371));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__12373 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12373) : cljs.core.deref.call(null,G__12373));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__12374_SHARP_,p2__12375_SHARP_){
var ret = (function (){var G__12378 = p1__12374_SHARP_;
var G__12379 = p2__12375_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12378,G__12379) : rf.call(null,G__12378,G__12379));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__12382 = null;
var G__12382__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12382__1 = (function (result){
var G__12381 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12381) : rf.call(null,G__12381));
});
var G__12382__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__12382 = function(result,input){
switch(arguments.length){
case 0:
return G__12382__0.call(this);
case 1:
return G__12382__1.call(this,result);
case 2:
return G__12382__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12382.cljs$core$IFn$_invoke$arity$0 = G__12382__0;
G__12382.cljs$core$IFn$_invoke$arity$1 = G__12382__1;
G__12382.cljs$core$IFn$_invoke$arity$2 = G__12382__2;
return G__12382;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__12391 = null;
var G__12391__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12391__1 = (function (result){
var G__12387 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12387) : rf.call(null,G__12387));
});
var G__12391__2 = (function (result,input){
var prior = (function (){var G__12388 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12388) : cljs.core.deref.call(null,G__12388));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__12389 = result;
var G__12390 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12389,G__12390) : rf.call(null,G__12389,G__12390));
}
});
G__12391 = function(result,input){
switch(arguments.length){
case 0:
return G__12391__0.call(this);
case 1:
return G__12391__1.call(this,result);
case 2:
return G__12391__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12391.cljs$core$IFn$_invoke$arity$0 = G__12391__0;
G__12391.cljs$core$IFn$_invoke$arity$1 = G__12391__1;
G__12391.cljs$core$IFn$_invoke$arity$2 = G__12391__2;
return G__12391;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6997__auto__ = this;
return cljs.core.es6_iterator(this__6997__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__12393_SHARP_,p2__12392_SHARP_){
var G__12395 = p2__12392_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__12395) : proc.call(null,G__12395));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj12397 = {};
return obj12397;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__6007__auto__ = x;
if(and__6007__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__6007__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__6663__auto__ = (((x == null))?null:x);
return (function (){var or__6019__auto__ = (cljs.core._clj__GT_js[(function (){var G__12401 = x__6663__auto__;
return goog.typeOf(G__12401);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__6007__auto__ = x;
if(and__6007__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__6007__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__6663__auto__ = (((x == null))?null:x);
return (function (){var or__6019__auto__ = (cljs.core._key__GT_js[(function (){var G__12405 = x__6663__auto__;
return goog.typeOf(G__12405);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__12408 = k;
if(G__12408){
var bit__6700__auto__ = null;
if(cljs.core.truth_((function (){var or__6019__auto__ = bit__6700__auto__;
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return G__12408.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__12408.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12408);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12408);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__12409 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__12409) : cljs.core.clj__GT_js.call(null,G__12409));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__12425 = x;
if(G__12425){
var bit__6700__auto__ = null;
if(cljs.core.truth_((function (){var or__6019__auto__ = bit__6700__auto__;
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return G__12425.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__12425.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12425);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12425);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj12427 = {};
return obj12427;
})();
var seq__12428_12438 = cljs.core.seq(x);
var chunk__12429_12439 = null;
var count__12430_12440 = (0);
var i__12431_12441 = (0);
while(true){
if((i__12431_12441 < count__12430_12440)){
var vec__12432_12442 = chunk__12429_12439.cljs$core$IIndexed$_nth$arity$2(null,i__12431_12441);
var k_12443 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12432_12442,(0),null);
var v_12444 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12432_12442,(1),null);
(m[cljs.core.key__GT_js(k_12443)] = clj__GT_js(v_12444));

var G__12445 = seq__12428_12438;
var G__12446 = chunk__12429_12439;
var G__12447 = count__12430_12440;
var G__12448 = (i__12431_12441 + (1));
seq__12428_12438 = G__12445;
chunk__12429_12439 = G__12446;
count__12430_12440 = G__12447;
i__12431_12441 = G__12448;
continue;
} else {
var temp__4126__auto___12449 = cljs.core.seq(seq__12428_12438);
if(temp__4126__auto___12449){
var seq__12428_12450__$1 = temp__4126__auto___12449;
if(cljs.core.chunked_seq_QMARK_(seq__12428_12450__$1)){
var c__6806__auto___12451 = cljs.core.chunk_first(seq__12428_12450__$1);
var G__12452 = cljs.core.chunk_rest(seq__12428_12450__$1);
var G__12453 = c__6806__auto___12451;
var G__12454 = cljs.core.count(c__6806__auto___12451);
var G__12455 = (0);
seq__12428_12438 = G__12452;
chunk__12429_12439 = G__12453;
count__12430_12440 = G__12454;
i__12431_12441 = G__12455;
continue;
} else {
var vec__12433_12456 = cljs.core.first(seq__12428_12450__$1);
var k_12457 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12433_12456,(0),null);
var v_12458 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12433_12456,(1),null);
(m[cljs.core.key__GT_js(k_12457)] = clj__GT_js(v_12458));

var G__12459 = cljs.core.next(seq__12428_12450__$1);
var G__12460 = null;
var G__12461 = (0);
var G__12462 = (0);
seq__12428_12438 = G__12459;
chunk__12429_12439 = G__12460;
count__12430_12440 = G__12461;
i__12431_12441 = G__12462;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__12434_12463 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__12435_12464 = null;
var count__12436_12465 = (0);
var i__12437_12466 = (0);
while(true){
if((i__12437_12466 < count__12436_12465)){
var x_12467__$1 = chunk__12435_12464.cljs$core$IIndexed$_nth$arity$2(null,i__12437_12466);
arr.push(x_12467__$1);

var G__12468 = seq__12434_12463;
var G__12469 = chunk__12435_12464;
var G__12470 = count__12436_12465;
var G__12471 = (i__12437_12466 + (1));
seq__12434_12463 = G__12468;
chunk__12435_12464 = G__12469;
count__12436_12465 = G__12470;
i__12437_12466 = G__12471;
continue;
} else {
var temp__4126__auto___12472 = cljs.core.seq(seq__12434_12463);
if(temp__4126__auto___12472){
var seq__12434_12473__$1 = temp__4126__auto___12472;
if(cljs.core.chunked_seq_QMARK_(seq__12434_12473__$1)){
var c__6806__auto___12474 = cljs.core.chunk_first(seq__12434_12473__$1);
var G__12475 = cljs.core.chunk_rest(seq__12434_12473__$1);
var G__12476 = c__6806__auto___12474;
var G__12477 = cljs.core.count(c__6806__auto___12474);
var G__12478 = (0);
seq__12434_12463 = G__12475;
chunk__12435_12464 = G__12476;
count__12436_12465 = G__12477;
i__12437_12466 = G__12478;
continue;
} else {
var x_12479__$1 = cljs.core.first(seq__12434_12473__$1);
arr.push(x_12479__$1);

var G__12480 = cljs.core.next(seq__12434_12473__$1);
var G__12481 = null;
var G__12482 = (0);
var G__12483 = (0);
seq__12434_12463 = G__12480;
chunk__12435_12464 = G__12481;
count__12436_12465 = G__12482;
i__12437_12466 = G__12483;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj12485 = {};
return obj12485;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__6007__auto__ = x;
if(and__6007__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__6007__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__6663__auto__ = (((x == null))?null:x);
return (function (){var or__6019__auto__ = (cljs.core._js__GT_clj[(function (){var G__12489 = x__6663__auto__;
return goog.typeOf(G__12489);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__12546__delegate = function (x,opts){
var map__12519 = opts;
var map__12519__$1 = ((cljs.core.seq_QMARK_(map__12519))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12519):map__12519);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12519__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__12519,map__12519__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__12535 = x__$1;
if(G__12535){
var bit__6700__auto__ = null;
if(cljs.core.truth_((function (){var or__6019__auto__ = bit__6700__auto__;
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return G__12535.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__12535.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12535);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12535);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__6775__auto__ = ((function (map__12519,map__12519__$1,keywordize_keys,keyfn){
return (function iter__12536(s__12537){
return (new cljs.core.LazySeq(null,((function (map__12519,map__12519__$1,keywordize_keys,keyfn){
return (function (){
var s__12537__$1 = s__12537;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__12537__$1);
if(temp__4126__auto__){
var s__12537__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__12537__$2)){
var c__6773__auto__ = cljs.core.chunk_first(s__12537__$2);
var size__6774__auto__ = cljs.core.count(c__6773__auto__);
var b__12539 = cljs.core.chunk_buffer(size__6774__auto__);
if((function (){var i__12538 = (0);
while(true){
if((i__12538 < size__6774__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__6773__auto__,i__12538);
cljs.core.chunk_append(b__12539,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12544 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12544) : keyfn.call(null,G__12544));
})(),thisfn((x__$1[k]))], null));

var G__12547 = (i__12538 + (1));
i__12538 = G__12547;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__12539),iter__12536(cljs.core.chunk_rest(s__12537__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__12539),null);
}
} else {
var k = cljs.core.first(s__12537__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12545 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12545) : keyfn.call(null,G__12545));
})(),thisfn((x__$1[k]))], null),iter__12536(cljs.core.rest(s__12537__$2)));
}
} else {
return null;
}
break;
}
});})(map__12519,map__12519__$1,keywordize_keys,keyfn))
,null,null));
});})(map__12519,map__12519__$1,keywordize_keys,keyfn))
;
return iter__6775__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__12519,map__12519__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__12546 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__12548__i = 0, G__12548__a = new Array(arguments.length -  1);
while (G__12548__i < G__12548__a.length) {G__12548__a[G__12548__i] = arguments[G__12548__i + 1]; ++G__12548__i;}
  opts = new cljs.core.IndexedSeq(G__12548__a,0);
} 
return G__12546__delegate.call(this,x,opts);};
G__12546.cljs$lang$maxFixedArity = 1;
G__12546.cljs$lang$applyTo = (function (arglist__12549){
var x = cljs.core.first(arglist__12549);
var opts = cljs.core.rest(arglist__12549);
return G__12546__delegate(x,opts);
});
G__12546.cljs$core$IFn$_invoke$arity$variadic = G__12546__delegate;
return G__12546;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__12550 = null;
if (arguments.length > 1) {
var G__12551__i = 0, G__12551__a = new Array(arguments.length -  1);
while (G__12551__i < G__12551__a.length) {G__12551__a[G__12551__i] = arguments[G__12551__i + 1]; ++G__12551__i;}
G__12550 = new cljs.core.IndexedSeq(G__12551__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__12554 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12554) : cljs.core.atom.call(null,G__12554));
})();
return ((function (mem){
return (function() { 
var G__12556__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__12555 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12555) : cljs.core.deref.call(null,G__12555));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__12556 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12557__i = 0, G__12557__a = new Array(arguments.length -  0);
while (G__12557__i < G__12557__a.length) {G__12557__a[G__12557__i] = arguments[G__12557__i + 0]; ++G__12557__i;}
  args = new cljs.core.IndexedSeq(G__12557__a,0);
} 
return G__12556__delegate.call(this,args);};
G__12556.cljs$lang$maxFixedArity = 0;
G__12556.cljs$lang$applyTo = (function (arglist__12558){
var args = cljs.core.seq(arglist__12558);
return G__12556__delegate(args);
});
G__12556.cljs$core$IFn$_invoke$arity$variadic = G__12556__delegate;
return G__12556;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__12560 = ret;
f = G__12560;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__12561__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__12561 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12562__i = 0, G__12562__a = new Array(arguments.length -  1);
while (G__12562__i < G__12562__a.length) {G__12562__a[G__12562__i] = arguments[G__12562__i + 1]; ++G__12562__i;}
  args = new cljs.core.IndexedSeq(G__12562__a,0);
} 
return G__12561__delegate.call(this,f,args);};
G__12561.cljs$lang$maxFixedArity = 1;
G__12561.cljs$lang$applyTo = (function (arglist__12563){
var f = cljs.core.first(arglist__12563);
var args = cljs.core.rest(arglist__12563);
return G__12561__delegate(f,args);
});
G__12561.cljs$core$IFn$_invoke$arity$variadic = G__12561__delegate;
return G__12561;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__12564 = null;
if (arguments.length > 1) {
var G__12565__i = 0, G__12565__a = new Array(arguments.length -  1);
while (G__12565__i < G__12565__a.length) {G__12565__a[G__12565__i] = arguments[G__12565__i + 1]; ++G__12565__i;}
G__12564 = new cljs.core.IndexedSeq(G__12565__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__12564);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__12568 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12568) : Math.floor.call(null,G__12568));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__12570 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12570) : f.call(null,G__12570));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__12572 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12572) : cljs.core.atom.call(null,G__12572));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12573__i = 0, G__12573__a = new Array(arguments.length -  1);
while (G__12573__i < G__12573__a.length) {G__12573__a[G__12573__i] = arguments[G__12573__i + 1]; ++G__12573__i;}
  args = new cljs.core.IndexedSeq(G__12573__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__12574){
var f = cljs.core.first(arglist__12574);
var args = cljs.core.rest(arglist__12574);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12639 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12639) : cljs.core.deref.call(null,G__12639));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__6019__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
var and__6007__auto__ = cljs.core.vector_QMARK_(parent);
if(and__6007__auto__){
var and__6007__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__6007__auto____$1){
var and__6007__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__6007__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__12664 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__12662 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__12662) : child.call(null,G__12662));
})(),(function (){var G__12663 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__12663) : parent.call(null,G__12663));
})());
var G__12665 = (i + (1));
ret = G__12664;
i = G__12665;
continue;
}
break;
}
} else {
return and__6007__auto____$2;
}
} else {
return and__6007__auto____$1;
}
} else {
return and__6007__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__12669 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12669) : cljs.core.deref.call(null,G__12669));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__12673 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12673) : cljs.core.deref.call(null,G__12673));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__12677 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12677) : cljs.core.deref.call(null,G__12677));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__12686 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__12686) : targets.call(null,G__12686));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__12687 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__12687) : sources.call(null,G__12687));
})()));
});})(tp,td,ta))
;
var or__6019__auto__ = ((cljs.core.contains_QMARK_((function (){var G__12691 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__12691) : tp.call(null,G__12691));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__12692 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12692) : ta.call(null,G__12692));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__12693 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12693) : ta.call(null,G__12693));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__12700 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12700) : parentMap.call(null,G__12700));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__12701 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12701) : parentMap.call(null,G__12701));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__12694_SHARP_){
return cljs.core.cons(cljs.core.first(p1__12694_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__12694_SHARP_),cljs.core.second(p1__12694_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__12702 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12702) : parentMap.call(null,G__12702));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__12695_SHARP_,p2__12696_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__12695_SHARP_,p2__12696_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__12705 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12705) : cljs.core.deref.call(null,G__12705));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__12706 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12706) : cljs.core.deref.call(null,G__12706));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__12722 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12722) : cljs.core.deref.call(null,G__12722));
})().call(null,x);
var or__6019__auto__ = (cljs.core.truth_((function (){var and__6007__auto__ = xprefs;
if(cljs.core.truth_(and__6007__auto__)){
var G__12724 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__12724) : xprefs.call(null,G__12724));
} else {
return and__6007__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__12725 = cljs.core.rest(ps);
ps = G__12725;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__6019__auto____$1)){
return or__6019__auto____$1;
} else {
var or__6019__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__12726 = cljs.core.rest(ps);
ps = G__12726;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__6019__auto____$2)){
return or__6019__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__6019__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__6019__auto__)){
return or__6019__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__12740){
var vec__12741 = p__12740;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12741,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12741,(1),null);
var e = vec__12741;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12742 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12742) : cljs.core.deref.call(null,G__12742));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__6019__auto__ = (be == null);
if(or__6019__auto__){
return or__6019__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__12743 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12743) : cljs.core.deref.call(null,G__12743));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12744 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12744) : cljs.core.deref.call(null,G__12744));
})(),(function (){var G__12745 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12745) : cljs.core.deref.call(null,G__12745));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj12747 = {};
return obj12747;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__6007__auto__ = mf;
if(and__6007__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__6007__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__6663__auto__ = (((mf == null))?null:mf);
return (function (){var or__6019__auto__ = (cljs.core._reset[(function (){var G__12751 = x__6663__auto__;
return goog.typeOf(G__12751);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._reset["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__6007__auto__ = mf;
if(and__6007__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__6007__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__6663__auto__ = (((mf == null))?null:mf);
return (function (){var or__6019__auto__ = (cljs.core._add_method[(function (){var G__12755 = x__6663__auto__;
return goog.typeOf(G__12755);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._add_method["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__6007__auto__ = mf;
if(and__6007__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__6007__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__6663__auto__ = (((mf == null))?null:mf);
return (function (){var or__6019__auto__ = (cljs.core._remove_method[(function (){var G__12759 = x__6663__auto__;
return goog.typeOf(G__12759);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._remove_method["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__6007__auto__ = mf;
if(and__6007__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__6007__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__6663__auto__ = (((mf == null))?null:mf);
return (function (){var or__6019__auto__ = (cljs.core._prefer_method[(function (){var G__12763 = x__6663__auto__;
return goog.typeOf(G__12763);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__6007__auto__ = mf;
if(and__6007__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__6007__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__6663__auto__ = (((mf == null))?null:mf);
return (function (){var or__6019__auto__ = (cljs.core._get_method[(function (){var G__12767 = x__6663__auto__;
return goog.typeOf(G__12767);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._get_method["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__6007__auto__ = mf;
if(and__6007__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__6007__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__6663__auto__ = (((mf == null))?null:mf);
return (function (){var or__6019__auto__ = (cljs.core._methods[(function (){var G__12771 = x__6663__auto__;
return goog.typeOf(G__12771);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._methods["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__6007__auto__ = mf;
if(and__6007__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__6007__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__6663__auto__ = (((mf == null))?null:mf);
return (function (){var or__6019__auto__ = (cljs.core._prefers[(function (){var G__12775 = x__6663__auto__;
return goog.typeOf(G__12775);
})()]);
if(or__6019__auto__){
return or__6019__auto__;
} else {
var or__6019__auto____$1 = (cljs.core._prefers["_"]);
if(or__6019__auto____$1){
return or__6019__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12777 = this$__$1;
return goog.getUid(G__12777);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12778 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12778) : cljs.core.deref.call(null,G__12778));
})(),(function (){var G__12779 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12779) : cljs.core.deref.call(null,G__12779));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__12780 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12780) : cljs.core.deref.call(null,G__12780));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__12781 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12781) : cljs.core.deref.call(null,G__12781));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12782 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12782) : cljs.core.deref.call(null,G__12782));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12783 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12783) : cljs.core.deref.call(null,G__12783));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__13624 = null;
var G__13624__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__13624__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12784 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12784) : self__.dispatch_fn.call(null,G__12784));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12785 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12785) : target_fn.call(null,G__12785));
});
var G__13624__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12786 = a;
var G__12787 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12786,G__12787) : self__.dispatch_fn.call(null,G__12786,G__12787));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12788 = a;
var G__12789 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12788,G__12789) : target_fn.call(null,G__12788,G__12789));
});
var G__13624__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12790 = a;
var G__12791 = b;
var G__12792 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12790,G__12791,G__12792) : self__.dispatch_fn.call(null,G__12790,G__12791,G__12792));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12793 = a;
var G__12794 = b;
var G__12795 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12793,G__12794,G__12795) : target_fn.call(null,G__12793,G__12794,G__12795));
});
var G__13624__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12796 = a;
var G__12797 = b;
var G__12798 = c;
var G__12799 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12796,G__12797,G__12798,G__12799) : self__.dispatch_fn.call(null,G__12796,G__12797,G__12798,G__12799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12800 = a;
var G__12801 = b;
var G__12802 = c;
var G__12803 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12800,G__12801,G__12802,G__12803) : target_fn.call(null,G__12800,G__12801,G__12802,G__12803));
});
var G__13624__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12804 = a;
var G__12805 = b;
var G__12806 = c;
var G__12807 = d;
var G__12808 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12804,G__12805,G__12806,G__12807,G__12808) : self__.dispatch_fn.call(null,G__12804,G__12805,G__12806,G__12807,G__12808));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12809 = a;
var G__12810 = b;
var G__12811 = c;
var G__12812 = d;
var G__12813 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12809,G__12810,G__12811,G__12812,G__12813) : target_fn.call(null,G__12809,G__12810,G__12811,G__12812,G__12813));
});
var G__13624__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12814 = a;
var G__12815 = b;
var G__12816 = c;
var G__12817 = d;
var G__12818 = e;
var G__12819 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12814,G__12815,G__12816,G__12817,G__12818,G__12819) : self__.dispatch_fn.call(null,G__12814,G__12815,G__12816,G__12817,G__12818,G__12819));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12820 = a;
var G__12821 = b;
var G__12822 = c;
var G__12823 = d;
var G__12824 = e;
var G__12825 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12820,G__12821,G__12822,G__12823,G__12824,G__12825) : target_fn.call(null,G__12820,G__12821,G__12822,G__12823,G__12824,G__12825));
});
var G__13624__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12826 = a;
var G__12827 = b;
var G__12828 = c;
var G__12829 = d;
var G__12830 = e;
var G__12831 = f;
var G__12832 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832) : self__.dispatch_fn.call(null,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12833 = a;
var G__12834 = b;
var G__12835 = c;
var G__12836 = d;
var G__12837 = e;
var G__12838 = f;
var G__12839 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12833,G__12834,G__12835,G__12836,G__12837,G__12838,G__12839) : target_fn.call(null,G__12833,G__12834,G__12835,G__12836,G__12837,G__12838,G__12839));
});
var G__13624__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12840 = a;
var G__12841 = b;
var G__12842 = c;
var G__12843 = d;
var G__12844 = e;
var G__12845 = f;
var G__12846 = g;
var G__12847 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846,G__12847) : self__.dispatch_fn.call(null,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846,G__12847));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12848 = a;
var G__12849 = b;
var G__12850 = c;
var G__12851 = d;
var G__12852 = e;
var G__12853 = f;
var G__12854 = g;
var G__12855 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855) : target_fn.call(null,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854,G__12855));
});
var G__13624__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12856 = a;
var G__12857 = b;
var G__12858 = c;
var G__12859 = d;
var G__12860 = e;
var G__12861 = f;
var G__12862 = g;
var G__12863 = h;
var G__12864 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864) : self__.dispatch_fn.call(null,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12865 = a;
var G__12866 = b;
var G__12867 = c;
var G__12868 = d;
var G__12869 = e;
var G__12870 = f;
var G__12871 = g;
var G__12872 = h;
var G__12873 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12865,G__12866,G__12867,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873) : target_fn.call(null,G__12865,G__12866,G__12867,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873));
});
var G__13624__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12874 = a;
var G__12875 = b;
var G__12876 = c;
var G__12877 = d;
var G__12878 = e;
var G__12879 = f;
var G__12880 = g;
var G__12881 = h;
var G__12882 = i;
var G__12883 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883) : self__.dispatch_fn.call(null,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12884 = a;
var G__12885 = b;
var G__12886 = c;
var G__12887 = d;
var G__12888 = e;
var G__12889 = f;
var G__12890 = g;
var G__12891 = h;
var G__12892 = i;
var G__12893 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890,G__12891,G__12892,G__12893) : target_fn.call(null,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890,G__12891,G__12892,G__12893));
});
var G__13624__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12894 = a;
var G__12895 = b;
var G__12896 = c;
var G__12897 = d;
var G__12898 = e;
var G__12899 = f;
var G__12900 = g;
var G__12901 = h;
var G__12902 = i;
var G__12903 = j;
var G__12904 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904) : self__.dispatch_fn.call(null,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12905 = a;
var G__12906 = b;
var G__12907 = c;
var G__12908 = d;
var G__12909 = e;
var G__12910 = f;
var G__12911 = g;
var G__12912 = h;
var G__12913 = i;
var G__12914 = j;
var G__12915 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915) : target_fn.call(null,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914,G__12915));
});
var G__13624__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12916 = a;
var G__12917 = b;
var G__12918 = c;
var G__12919 = d;
var G__12920 = e;
var G__12921 = f;
var G__12922 = g;
var G__12923 = h;
var G__12924 = i;
var G__12925 = j;
var G__12926 = k;
var G__12927 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927) : self__.dispatch_fn.call(null,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12928 = a;
var G__12929 = b;
var G__12930 = c;
var G__12931 = d;
var G__12932 = e;
var G__12933 = f;
var G__12934 = g;
var G__12935 = h;
var G__12936 = i;
var G__12937 = j;
var G__12938 = k;
var G__12939 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939) : target_fn.call(null,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939));
});
var G__13624__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12940 = a;
var G__12941 = b;
var G__12942 = c;
var G__12943 = d;
var G__12944 = e;
var G__12945 = f;
var G__12946 = g;
var G__12947 = h;
var G__12948 = i;
var G__12949 = j;
var G__12950 = k;
var G__12951 = l;
var G__12952 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952) : self__.dispatch_fn.call(null,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12953 = a;
var G__12954 = b;
var G__12955 = c;
var G__12956 = d;
var G__12957 = e;
var G__12958 = f;
var G__12959 = g;
var G__12960 = h;
var G__12961 = i;
var G__12962 = j;
var G__12963 = k;
var G__12964 = l;
var G__12965 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965) : target_fn.call(null,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965));
});
var G__13624__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12966 = a;
var G__12967 = b;
var G__12968 = c;
var G__12969 = d;
var G__12970 = e;
var G__12971 = f;
var G__12972 = g;
var G__12973 = h;
var G__12974 = i;
var G__12975 = j;
var G__12976 = k;
var G__12977 = l;
var G__12978 = m;
var G__12979 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979) : self__.dispatch_fn.call(null,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12980 = a;
var G__12981 = b;
var G__12982 = c;
var G__12983 = d;
var G__12984 = e;
var G__12985 = f;
var G__12986 = g;
var G__12987 = h;
var G__12988 = i;
var G__12989 = j;
var G__12990 = k;
var G__12991 = l;
var G__12992 = m;
var G__12993 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993) : target_fn.call(null,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993));
});
var G__13624__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12994 = a;
var G__12995 = b;
var G__12996 = c;
var G__12997 = d;
var G__12998 = e;
var G__12999 = f;
var G__13000 = g;
var G__13001 = h;
var G__13002 = i;
var G__13003 = j;
var G__13004 = k;
var G__13005 = l;
var G__13006 = m;
var G__13007 = n;
var G__13008 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008) : self__.dispatch_fn.call(null,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13009 = a;
var G__13010 = b;
var G__13011 = c;
var G__13012 = d;
var G__13013 = e;
var G__13014 = f;
var G__13015 = g;
var G__13016 = h;
var G__13017 = i;
var G__13018 = j;
var G__13019 = k;
var G__13020 = l;
var G__13021 = m;
var G__13022 = n;
var G__13023 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023) : target_fn.call(null,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023));
});
var G__13624__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13024 = a;
var G__13025 = b;
var G__13026 = c;
var G__13027 = d;
var G__13028 = e;
var G__13029 = f;
var G__13030 = g;
var G__13031 = h;
var G__13032 = i;
var G__13033 = j;
var G__13034 = k;
var G__13035 = l;
var G__13036 = m;
var G__13037 = n;
var G__13038 = o;
var G__13039 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039) : self__.dispatch_fn.call(null,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13040 = a;
var G__13041 = b;
var G__13042 = c;
var G__13043 = d;
var G__13044 = e;
var G__13045 = f;
var G__13046 = g;
var G__13047 = h;
var G__13048 = i;
var G__13049 = j;
var G__13050 = k;
var G__13051 = l;
var G__13052 = m;
var G__13053 = n;
var G__13054 = o;
var G__13055 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055) : target_fn.call(null,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055));
});
var G__13624__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13056 = a;
var G__13057 = b;
var G__13058 = c;
var G__13059 = d;
var G__13060 = e;
var G__13061 = f;
var G__13062 = g;
var G__13063 = h;
var G__13064 = i;
var G__13065 = j;
var G__13066 = k;
var G__13067 = l;
var G__13068 = m;
var G__13069 = n;
var G__13070 = o;
var G__13071 = p;
var G__13072 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072) : self__.dispatch_fn.call(null,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13073 = a;
var G__13074 = b;
var G__13075 = c;
var G__13076 = d;
var G__13077 = e;
var G__13078 = f;
var G__13079 = g;
var G__13080 = h;
var G__13081 = i;
var G__13082 = j;
var G__13083 = k;
var G__13084 = l;
var G__13085 = m;
var G__13086 = n;
var G__13087 = o;
var G__13088 = p;
var G__13089 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089) : target_fn.call(null,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089));
});
var G__13624__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13090 = a;
var G__13091 = b;
var G__13092 = c;
var G__13093 = d;
var G__13094 = e;
var G__13095 = f;
var G__13096 = g;
var G__13097 = h;
var G__13098 = i;
var G__13099 = j;
var G__13100 = k;
var G__13101 = l;
var G__13102 = m;
var G__13103 = n;
var G__13104 = o;
var G__13105 = p;
var G__13106 = q;
var G__13107 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107) : self__.dispatch_fn.call(null,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13108 = a;
var G__13109 = b;
var G__13110 = c;
var G__13111 = d;
var G__13112 = e;
var G__13113 = f;
var G__13114 = g;
var G__13115 = h;
var G__13116 = i;
var G__13117 = j;
var G__13118 = k;
var G__13119 = l;
var G__13120 = m;
var G__13121 = n;
var G__13122 = o;
var G__13123 = p;
var G__13124 = q;
var G__13125 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125) : target_fn.call(null,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125));
});
var G__13624__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13126 = a;
var G__13127 = b;
var G__13128 = c;
var G__13129 = d;
var G__13130 = e;
var G__13131 = f;
var G__13132 = g;
var G__13133 = h;
var G__13134 = i;
var G__13135 = j;
var G__13136 = k;
var G__13137 = l;
var G__13138 = m;
var G__13139 = n;
var G__13140 = o;
var G__13141 = p;
var G__13142 = q;
var G__13143 = r;
var G__13144 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144) : self__.dispatch_fn.call(null,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13145 = a;
var G__13146 = b;
var G__13147 = c;
var G__13148 = d;
var G__13149 = e;
var G__13150 = f;
var G__13151 = g;
var G__13152 = h;
var G__13153 = i;
var G__13154 = j;
var G__13155 = k;
var G__13156 = l;
var G__13157 = m;
var G__13158 = n;
var G__13159 = o;
var G__13160 = p;
var G__13161 = q;
var G__13162 = r;
var G__13163 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163) : target_fn.call(null,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163));
});
var G__13624__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13164 = a;
var G__13165 = b;
var G__13166 = c;
var G__13167 = d;
var G__13168 = e;
var G__13169 = f;
var G__13170 = g;
var G__13171 = h;
var G__13172 = i;
var G__13173 = j;
var G__13174 = k;
var G__13175 = l;
var G__13176 = m;
var G__13177 = n;
var G__13178 = o;
var G__13179 = p;
var G__13180 = q;
var G__13181 = r;
var G__13182 = s;
var G__13183 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183) : self__.dispatch_fn.call(null,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171,G__13172,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13184 = a;
var G__13185 = b;
var G__13186 = c;
var G__13187 = d;
var G__13188 = e;
var G__13189 = f;
var G__13190 = g;
var G__13191 = h;
var G__13192 = i;
var G__13193 = j;
var G__13194 = k;
var G__13195 = l;
var G__13196 = m;
var G__13197 = n;
var G__13198 = o;
var G__13199 = p;
var G__13200 = q;
var G__13201 = r;
var G__13202 = s;
var G__13203 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203) : target_fn.call(null,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203));
});
var G__13624__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__13624 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13624__1.call(this,self__);
case 2:
return G__13624__2.call(this,self__,a);
case 3:
return G__13624__3.call(this,self__,a,b);
case 4:
return G__13624__4.call(this,self__,a,b,c);
case 5:
return G__13624__5.call(this,self__,a,b,c,d);
case 6:
return G__13624__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13624__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13624__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13624__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13624__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13624__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13624__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13624__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13624__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13624__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13624__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13624__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13624__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13624__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13624__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13624__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13624__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13624.cljs$core$IFn$_invoke$arity$1 = G__13624__1;
G__13624.cljs$core$IFn$_invoke$arity$2 = G__13624__2;
G__13624.cljs$core$IFn$_invoke$arity$3 = G__13624__3;
G__13624.cljs$core$IFn$_invoke$arity$4 = G__13624__4;
G__13624.cljs$core$IFn$_invoke$arity$5 = G__13624__5;
G__13624.cljs$core$IFn$_invoke$arity$6 = G__13624__6;
G__13624.cljs$core$IFn$_invoke$arity$7 = G__13624__7;
G__13624.cljs$core$IFn$_invoke$arity$8 = G__13624__8;
G__13624.cljs$core$IFn$_invoke$arity$9 = G__13624__9;
G__13624.cljs$core$IFn$_invoke$arity$10 = G__13624__10;
G__13624.cljs$core$IFn$_invoke$arity$11 = G__13624__11;
G__13624.cljs$core$IFn$_invoke$arity$12 = G__13624__12;
G__13624.cljs$core$IFn$_invoke$arity$13 = G__13624__13;
G__13624.cljs$core$IFn$_invoke$arity$14 = G__13624__14;
G__13624.cljs$core$IFn$_invoke$arity$15 = G__13624__15;
G__13624.cljs$core$IFn$_invoke$arity$16 = G__13624__16;
G__13624.cljs$core$IFn$_invoke$arity$17 = G__13624__17;
G__13624.cljs$core$IFn$_invoke$arity$18 = G__13624__18;
G__13624.cljs$core$IFn$_invoke$arity$19 = G__13624__19;
G__13624.cljs$core$IFn$_invoke$arity$20 = G__13624__20;
G__13624.cljs$core$IFn$_invoke$arity$21 = G__13624__21;
G__13624.cljs$core$IFn$_invoke$arity$22 = G__13624__22;
return G__13624;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args12776){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12776)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13204 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__13204) : self__.dispatch_fn.call(null,G__13204));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13205 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__13205) : target_fn.call(null,G__13205));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13206 = a;
var G__13207 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__13206,G__13207) : self__.dispatch_fn.call(null,G__13206,G__13207));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13208 = a;
var G__13209 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__13208,G__13209) : target_fn.call(null,G__13208,G__13209));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13210 = a;
var G__13211 = b;
var G__13212 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__13210,G__13211,G__13212) : self__.dispatch_fn.call(null,G__13210,G__13211,G__13212));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13213 = a;
var G__13214 = b;
var G__13215 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__13213,G__13214,G__13215) : target_fn.call(null,G__13213,G__13214,G__13215));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13216 = a;
var G__13217 = b;
var G__13218 = c;
var G__13219 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__13216,G__13217,G__13218,G__13219) : self__.dispatch_fn.call(null,G__13216,G__13217,G__13218,G__13219));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13220 = a;
var G__13221 = b;
var G__13222 = c;
var G__13223 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__13220,G__13221,G__13222,G__13223) : target_fn.call(null,G__13220,G__13221,G__13222,G__13223));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13224 = a;
var G__13225 = b;
var G__13226 = c;
var G__13227 = d;
var G__13228 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__13224,G__13225,G__13226,G__13227,G__13228) : self__.dispatch_fn.call(null,G__13224,G__13225,G__13226,G__13227,G__13228));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13229 = a;
var G__13230 = b;
var G__13231 = c;
var G__13232 = d;
var G__13233 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__13229,G__13230,G__13231,G__13232,G__13233) : target_fn.call(null,G__13229,G__13230,G__13231,G__13232,G__13233));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13234 = a;
var G__13235 = b;
var G__13236 = c;
var G__13237 = d;
var G__13238 = e;
var G__13239 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__13234,G__13235,G__13236,G__13237,G__13238,G__13239) : self__.dispatch_fn.call(null,G__13234,G__13235,G__13236,G__13237,G__13238,G__13239));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13240 = a;
var G__13241 = b;
var G__13242 = c;
var G__13243 = d;
var G__13244 = e;
var G__13245 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__13240,G__13241,G__13242,G__13243,G__13244,G__13245) : target_fn.call(null,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13246 = a;
var G__13247 = b;
var G__13248 = c;
var G__13249 = d;
var G__13250 = e;
var G__13251 = f;
var G__13252 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__13246,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252) : self__.dispatch_fn.call(null,G__13246,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13253 = a;
var G__13254 = b;
var G__13255 = c;
var G__13256 = d;
var G__13257 = e;
var G__13258 = f;
var G__13259 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__13253,G__13254,G__13255,G__13256,G__13257,G__13258,G__13259) : target_fn.call(null,G__13253,G__13254,G__13255,G__13256,G__13257,G__13258,G__13259));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13260 = a;
var G__13261 = b;
var G__13262 = c;
var G__13263 = d;
var G__13264 = e;
var G__13265 = f;
var G__13266 = g;
var G__13267 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266,G__13267) : self__.dispatch_fn.call(null,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266,G__13267));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13268 = a;
var G__13269 = b;
var G__13270 = c;
var G__13271 = d;
var G__13272 = e;
var G__13273 = f;
var G__13274 = g;
var G__13275 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274,G__13275) : target_fn.call(null,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274,G__13275));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13276 = a;
var G__13277 = b;
var G__13278 = c;
var G__13279 = d;
var G__13280 = e;
var G__13281 = f;
var G__13282 = g;
var G__13283 = h;
var G__13284 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283,G__13284) : self__.dispatch_fn.call(null,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282,G__13283,G__13284));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13285 = a;
var G__13286 = b;
var G__13287 = c;
var G__13288 = d;
var G__13289 = e;
var G__13290 = f;
var G__13291 = g;
var G__13292 = h;
var G__13293 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293) : target_fn.call(null,G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13294 = a;
var G__13295 = b;
var G__13296 = c;
var G__13297 = d;
var G__13298 = e;
var G__13299 = f;
var G__13300 = g;
var G__13301 = h;
var G__13302 = i;
var G__13303 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__13294,G__13295,G__13296,G__13297,G__13298,G__13299,G__13300,G__13301,G__13302,G__13303) : self__.dispatch_fn.call(null,G__13294,G__13295,G__13296,G__13297,G__13298,G__13299,G__13300,G__13301,G__13302,G__13303));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13304 = a;
var G__13305 = b;
var G__13306 = c;
var G__13307 = d;
var G__13308 = e;
var G__13309 = f;
var G__13310 = g;
var G__13311 = h;
var G__13312 = i;
var G__13313 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311,G__13312,G__13313) : target_fn.call(null,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311,G__13312,G__13313));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13314 = a;
var G__13315 = b;
var G__13316 = c;
var G__13317 = d;
var G__13318 = e;
var G__13319 = f;
var G__13320 = g;
var G__13321 = h;
var G__13322 = i;
var G__13323 = j;
var G__13324 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__13314,G__13315,G__13316,G__13317,G__13318,G__13319,G__13320,G__13321,G__13322,G__13323,G__13324) : self__.dispatch_fn.call(null,G__13314,G__13315,G__13316,G__13317,G__13318,G__13319,G__13320,G__13321,G__13322,G__13323,G__13324));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13325 = a;
var G__13326 = b;
var G__13327 = c;
var G__13328 = d;
var G__13329 = e;
var G__13330 = f;
var G__13331 = g;
var G__13332 = h;
var G__13333 = i;
var G__13334 = j;
var G__13335 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335) : target_fn.call(null,G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13336 = a;
var G__13337 = b;
var G__13338 = c;
var G__13339 = d;
var G__13340 = e;
var G__13341 = f;
var G__13342 = g;
var G__13343 = h;
var G__13344 = i;
var G__13345 = j;
var G__13346 = k;
var G__13347 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__13336,G__13337,G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347) : self__.dispatch_fn.call(null,G__13336,G__13337,G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13348 = a;
var G__13349 = b;
var G__13350 = c;
var G__13351 = d;
var G__13352 = e;
var G__13353 = f;
var G__13354 = g;
var G__13355 = h;
var G__13356 = i;
var G__13357 = j;
var G__13358 = k;
var G__13359 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358,G__13359) : target_fn.call(null,G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358,G__13359));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13360 = a;
var G__13361 = b;
var G__13362 = c;
var G__13363 = d;
var G__13364 = e;
var G__13365 = f;
var G__13366 = g;
var G__13367 = h;
var G__13368 = i;
var G__13369 = j;
var G__13370 = k;
var G__13371 = l;
var G__13372 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__13360,G__13361,G__13362,G__13363,G__13364,G__13365,G__13366,G__13367,G__13368,G__13369,G__13370,G__13371,G__13372) : self__.dispatch_fn.call(null,G__13360,G__13361,G__13362,G__13363,G__13364,G__13365,G__13366,G__13367,G__13368,G__13369,G__13370,G__13371,G__13372));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13373 = a;
var G__13374 = b;
var G__13375 = c;
var G__13376 = d;
var G__13377 = e;
var G__13378 = f;
var G__13379 = g;
var G__13380 = h;
var G__13381 = i;
var G__13382 = j;
var G__13383 = k;
var G__13384 = l;
var G__13385 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__13373,G__13374,G__13375,G__13376,G__13377,G__13378,G__13379,G__13380,G__13381,G__13382,G__13383,G__13384,G__13385) : target_fn.call(null,G__13373,G__13374,G__13375,G__13376,G__13377,G__13378,G__13379,G__13380,G__13381,G__13382,G__13383,G__13384,G__13385));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13386 = a;
var G__13387 = b;
var G__13388 = c;
var G__13389 = d;
var G__13390 = e;
var G__13391 = f;
var G__13392 = g;
var G__13393 = h;
var G__13394 = i;
var G__13395 = j;
var G__13396 = k;
var G__13397 = l;
var G__13398 = m;
var G__13399 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__13386,G__13387,G__13388,G__13389,G__13390,G__13391,G__13392,G__13393,G__13394,G__13395,G__13396,G__13397,G__13398,G__13399) : self__.dispatch_fn.call(null,G__13386,G__13387,G__13388,G__13389,G__13390,G__13391,G__13392,G__13393,G__13394,G__13395,G__13396,G__13397,G__13398,G__13399));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13400 = a;
var G__13401 = b;
var G__13402 = c;
var G__13403 = d;
var G__13404 = e;
var G__13405 = f;
var G__13406 = g;
var G__13407 = h;
var G__13408 = i;
var G__13409 = j;
var G__13410 = k;
var G__13411 = l;
var G__13412 = m;
var G__13413 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__13400,G__13401,G__13402,G__13403,G__13404,G__13405,G__13406,G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413) : target_fn.call(null,G__13400,G__13401,G__13402,G__13403,G__13404,G__13405,G__13406,G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13414 = a;
var G__13415 = b;
var G__13416 = c;
var G__13417 = d;
var G__13418 = e;
var G__13419 = f;
var G__13420 = g;
var G__13421 = h;
var G__13422 = i;
var G__13423 = j;
var G__13424 = k;
var G__13425 = l;
var G__13426 = m;
var G__13427 = n;
var G__13428 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__13414,G__13415,G__13416,G__13417,G__13418,G__13419,G__13420,G__13421,G__13422,G__13423,G__13424,G__13425,G__13426,G__13427,G__13428) : self__.dispatch_fn.call(null,G__13414,G__13415,G__13416,G__13417,G__13418,G__13419,G__13420,G__13421,G__13422,G__13423,G__13424,G__13425,G__13426,G__13427,G__13428));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13429 = a;
var G__13430 = b;
var G__13431 = c;
var G__13432 = d;
var G__13433 = e;
var G__13434 = f;
var G__13435 = g;
var G__13436 = h;
var G__13437 = i;
var G__13438 = j;
var G__13439 = k;
var G__13440 = l;
var G__13441 = m;
var G__13442 = n;
var G__13443 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435,G__13436,G__13437,G__13438,G__13439,G__13440,G__13441,G__13442,G__13443) : target_fn.call(null,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435,G__13436,G__13437,G__13438,G__13439,G__13440,G__13441,G__13442,G__13443));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13444 = a;
var G__13445 = b;
var G__13446 = c;
var G__13447 = d;
var G__13448 = e;
var G__13449 = f;
var G__13450 = g;
var G__13451 = h;
var G__13452 = i;
var G__13453 = j;
var G__13454 = k;
var G__13455 = l;
var G__13456 = m;
var G__13457 = n;
var G__13458 = o;
var G__13459 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450,G__13451,G__13452,G__13453,G__13454,G__13455,G__13456,G__13457,G__13458,G__13459) : self__.dispatch_fn.call(null,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450,G__13451,G__13452,G__13453,G__13454,G__13455,G__13456,G__13457,G__13458,G__13459));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13460 = a;
var G__13461 = b;
var G__13462 = c;
var G__13463 = d;
var G__13464 = e;
var G__13465 = f;
var G__13466 = g;
var G__13467 = h;
var G__13468 = i;
var G__13469 = j;
var G__13470 = k;
var G__13471 = l;
var G__13472 = m;
var G__13473 = n;
var G__13474 = o;
var G__13475 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__13460,G__13461,G__13462,G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471,G__13472,G__13473,G__13474,G__13475) : target_fn.call(null,G__13460,G__13461,G__13462,G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471,G__13472,G__13473,G__13474,G__13475));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13476 = a;
var G__13477 = b;
var G__13478 = c;
var G__13479 = d;
var G__13480 = e;
var G__13481 = f;
var G__13482 = g;
var G__13483 = h;
var G__13484 = i;
var G__13485 = j;
var G__13486 = k;
var G__13487 = l;
var G__13488 = m;
var G__13489 = n;
var G__13490 = o;
var G__13491 = p;
var G__13492 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482,G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492) : self__.dispatch_fn.call(null,G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482,G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13493 = a;
var G__13494 = b;
var G__13495 = c;
var G__13496 = d;
var G__13497 = e;
var G__13498 = f;
var G__13499 = g;
var G__13500 = h;
var G__13501 = i;
var G__13502 = j;
var G__13503 = k;
var G__13504 = l;
var G__13505 = m;
var G__13506 = n;
var G__13507 = o;
var G__13508 = p;
var G__13509 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13493,G__13494,G__13495,G__13496,G__13497,G__13498,G__13499,G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507,G__13508,G__13509) : target_fn.call(null,G__13493,G__13494,G__13495,G__13496,G__13497,G__13498,G__13499,G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507,G__13508,G__13509));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13510 = a;
var G__13511 = b;
var G__13512 = c;
var G__13513 = d;
var G__13514 = e;
var G__13515 = f;
var G__13516 = g;
var G__13517 = h;
var G__13518 = i;
var G__13519 = j;
var G__13520 = k;
var G__13521 = l;
var G__13522 = m;
var G__13523 = n;
var G__13524 = o;
var G__13525 = p;
var G__13526 = q;
var G__13527 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13510,G__13511,G__13512,G__13513,G__13514,G__13515,G__13516,G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526,G__13527) : self__.dispatch_fn.call(null,G__13510,G__13511,G__13512,G__13513,G__13514,G__13515,G__13516,G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526,G__13527));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13528 = a;
var G__13529 = b;
var G__13530 = c;
var G__13531 = d;
var G__13532 = e;
var G__13533 = f;
var G__13534 = g;
var G__13535 = h;
var G__13536 = i;
var G__13537 = j;
var G__13538 = k;
var G__13539 = l;
var G__13540 = m;
var G__13541 = n;
var G__13542 = o;
var G__13543 = p;
var G__13544 = q;
var G__13545 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13528,G__13529,G__13530,G__13531,G__13532,G__13533,G__13534,G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542,G__13543,G__13544,G__13545) : target_fn.call(null,G__13528,G__13529,G__13530,G__13531,G__13532,G__13533,G__13534,G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542,G__13543,G__13544,G__13545));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13546 = a;
var G__13547 = b;
var G__13548 = c;
var G__13549 = d;
var G__13550 = e;
var G__13551 = f;
var G__13552 = g;
var G__13553 = h;
var G__13554 = i;
var G__13555 = j;
var G__13556 = k;
var G__13557 = l;
var G__13558 = m;
var G__13559 = n;
var G__13560 = o;
var G__13561 = p;
var G__13562 = q;
var G__13563 = r;
var G__13564 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13546,G__13547,G__13548,G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564) : self__.dispatch_fn.call(null,G__13546,G__13547,G__13548,G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13565 = a;
var G__13566 = b;
var G__13567 = c;
var G__13568 = d;
var G__13569 = e;
var G__13570 = f;
var G__13571 = g;
var G__13572 = h;
var G__13573 = i;
var G__13574 = j;
var G__13575 = k;
var G__13576 = l;
var G__13577 = m;
var G__13578 = n;
var G__13579 = o;
var G__13580 = p;
var G__13581 = q;
var G__13582 = r;
var G__13583 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13565,G__13566,G__13567,G__13568,G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583) : target_fn.call(null,G__13565,G__13566,G__13567,G__13568,G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13584 = a;
var G__13585 = b;
var G__13586 = c;
var G__13587 = d;
var G__13588 = e;
var G__13589 = f;
var G__13590 = g;
var G__13591 = h;
var G__13592 = i;
var G__13593 = j;
var G__13594 = k;
var G__13595 = l;
var G__13596 = m;
var G__13597 = n;
var G__13598 = o;
var G__13599 = p;
var G__13600 = q;
var G__13601 = r;
var G__13602 = s;
var G__13603 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590,G__13591,G__13592,G__13593,G__13594,G__13595,G__13596,G__13597,G__13598,G__13599,G__13600,G__13601,G__13602,G__13603) : self__.dispatch_fn.call(null,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590,G__13591,G__13592,G__13593,G__13594,G__13595,G__13596,G__13597,G__13598,G__13599,G__13600,G__13601,G__13602,G__13603));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13604 = a;
var G__13605 = b;
var G__13606 = c;
var G__13607 = d;
var G__13608 = e;
var G__13609 = f;
var G__13610 = g;
var G__13611 = h;
var G__13612 = i;
var G__13613 = j;
var G__13614 = k;
var G__13615 = l;
var G__13616 = m;
var G__13617 = n;
var G__13618 = o;
var G__13619 = p;
var G__13620 = q;
var G__13621 = r;
var G__13622 = s;
var G__13623 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610,G__13611,G__13612,G__13613,G__13614,G__13615,G__13616,G__13617,G__13618,G__13619,G__13620,G__13621,G__13622,G__13623) : target_fn.call(null,G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610,G__13611,G__13612,G__13613,G__13614,G__13615,G__13616,G__13617,G__13618,G__13619,G__13620,G__13621,G__13622,G__13623));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13625 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__13625);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__6606__auto__,writer__6607__auto__,opt__6608__auto__){
return cljs.core._write(writer__6607__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__13630 = msg;
return Error(G__13630);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__13635 = x;
var G__13636 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13635,G__13636) : pred.call(null,G__13635,G__13636));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13637 = y;
var G__13638 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13637,G__13638) : pred.call(null,G__13637,G__13638));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map